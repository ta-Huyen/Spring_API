2024-08-06T08:51:44.439+07:00  INFO 25604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25604 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T08:51:44.445+07:00  INFO 25604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T08:51:45.056+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:51:45.056+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T08:51:45.081+07:00  INFO 25604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T08:51:45.184+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-08-06T08:51:45.439+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:51:45.440+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T08:51:45.452+07:00  INFO 25604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T08:51:45.456+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T08:51:45.467+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:51:45.468+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T08:51:45.477+07:00  INFO 25604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:51:45.477+07:00  INFO 25604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:51:45.477+07:00  INFO 25604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T08:51:46.188+07:00  INFO 25604 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T08:51:46.203+07:00  INFO 25604 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T08:51:46.203+07:00  INFO 25604 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T08:51:46.253+07:00  INFO 25604 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T08:51:46.253+07:00  INFO 25604 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1763 ms
2024-08-06T08:51:46.385+07:00  INFO 25604 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T08:51:46.450+07:00  INFO 25604 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T08:51:46.486+07:00  INFO 25604 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T08:51:46.555+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:51:46.555+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:51:46.555+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:51:46.555+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:51:46.556+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:51:46.558+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:51:46.558+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:51:46.558+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:51:46.559+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:51:46.560+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T08:51:46.561+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:51:46.562+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:51:46.563+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:51:46.564+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T08:51:46.565+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T08:51:46.566+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T08:51:46.566+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T08:51:46.566+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:51:46.566+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:51:46.566+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T08:51:46.567+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T08:51:46.567+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T08:51:46.567+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T08:51:46.567+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T08:51:46.568+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T08:51:46.569+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T08:51:46.569+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T08:51:46.569+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T08:51:46.570+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T08:51:46.571+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T08:51:46.571+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T08:51:46.572+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-06T08:51:46.573+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-06T08:51:46.577+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@729cd862
2024-08-06T08:51:46.577+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@729cd862
2024-08-06T08:51:46.578+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4baf997
2024-08-06T08:51:46.578+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T08:51:46.578+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7757025d
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@68fc9167
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@52c46334
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@12fccff0
2024-08-06T08:51:46.579+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5d767218
2024-08-06T08:51:46.784+07:00  INFO 25604 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T08:51:46.808+07:00  INFO 25604 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T08:51:47.164+07:00  INFO 25604 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74b7497b
2024-08-06T08:51:47.166+07:00  INFO 25604 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4adcc981) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73aae7a)
2024-08-06T08:51:47.243+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3856d0cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2125535d)
2024-08-06T08:51:47.244+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T08:51:47.244+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T08:51:47.244+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T08:51:47.246+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:51:47.246+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:51:47.249+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3d8bd881
2024-08-06T08:51:47.249+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4baf997`
2024-08-06T08:51:47.252+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T08:51:47.252+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:51:47.252+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:51:47.254+07:00 DEBUG 25604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:51:47.255+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a38e3d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@28cf179c]
2024-08-06T08:51:48.020+07:00  INFO 25604 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T08:51:48.020+07:00 DEBUG 25604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a38e3d1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@408980aa]
2024-08-06T08:51:48.085+07:00 TRACE 25604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@408980aa] for TypeConfiguration
2024-08-06T08:51:48.085+07:00  INFO 25604 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:51:48.276+07:00  INFO 25604 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T08:51:48.657+07:00  INFO 25604 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T08:51:48.657+07:00  WARN 25604 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T08:51:48.863+07:00  WARN 25604 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T08:51:49.644+07:00  INFO 25604 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1989e9ec, com.mongodb.Jep395RecordCodecProvider@51e68bcd, com.mongodb.KotlinCodecProvider@ed6d97f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T08:51:49.660+07:00  INFO 25604 --- [Spring_API] [cluster-ClusterId{value='66b181b5d1a616420ff9afd2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26906500}
2024-08-06T08:51:49.918+07:00  INFO 25604 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T08:51:49.924+07:00  INFO 25604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.876 seconds (process running for 6.344)
2024-08-06T08:52:07.662+07:00  INFO 25604 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T08:52:07.664+07:00  INFO 25604 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T08:52:07.668+07:00  INFO 25604 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-08-06T08:52:16.427+07:00  WARN 25604 --- [Spring_API] [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2024-08-06T08:53:06.986+07:00  INFO 25604 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:53:06.987+07:00 TRACE 25604 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@408980aa] for TypeConfiguration
2024-08-06T08:53:06.987+07:00 DEBUG 25604 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@413db4f2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@408980aa]
2024-08-06T08:53:06.988+07:00  INFO 25604 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T08:53:06.995+07:00  INFO 25604 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T08:55:46.214+07:00  INFO 23192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 23192 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T08:55:46.216+07:00  INFO 23192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T08:55:46.845+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:55:46.845+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T08:55:46.870+07:00  INFO 23192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T08:55:46.974+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-08-06T08:55:47.237+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:55:47.237+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T08:55:47.248+07:00  INFO 23192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T08:55:47.251+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T08:55:47.262+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:55:47.263+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T08:55:47.273+07:00  INFO 23192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:55:47.273+07:00  INFO 23192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:55:47.273+07:00  INFO 23192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T08:55:47.955+07:00  INFO 23192 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T08:55:47.969+07:00  INFO 23192 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T08:55:47.969+07:00  INFO 23192 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T08:55:48.027+07:00  INFO 23192 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T08:55:48.028+07:00  INFO 23192 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1767 ms
2024-08-06T08:55:48.165+07:00  INFO 23192 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T08:55:48.226+07:00  INFO 23192 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T08:55:48.257+07:00  INFO 23192 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T08:55:48.332+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T08:55:48.333+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T08:55:48.335+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T08:55:48.335+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T08:55:48.335+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T08:55:48.335+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T08:55:48.335+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T08:55:48.336+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T08:55:48.337+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T08:55:48.338+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:55:48.339+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T08:55:48.340+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T08:55:48.341+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T08:55:48.342+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T08:55:48.343+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T08:55:48.344+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:55:48.345+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T08:55:48.346+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T08:55:48.351+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@25a290ee
2024-08-06T08:55:48.351+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25a290ee
2024-08-06T08:55:48.352+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@64bba0eb
2024-08-06T08:55:48.352+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T08:55:48.353+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T08:55:48.560+07:00  INFO 23192 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T08:55:48.586+07:00  INFO 23192 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T08:55:48.939+07:00  INFO 23192 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@59c08cf1
2024-08-06T08:55:48.940+07:00  INFO 23192 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T08:55:49.020+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077)
2024-08-06T08:55:49.020+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da)
2024-08-06T08:55:49.020+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e)
2024-08-06T08:55:49.020+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T08:55:49.021+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T08:55:49.021+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T08:55:49.021+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T08:55:49.021+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T08:55:49.021+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T08:55:49.022+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T08:55:49.022+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T08:55:49.022+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T08:55:49.023+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:55:49.023+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:55:49.026+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6071631f
2024-08-06T08:55:49.026+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@64bba0eb`
2024-08-06T08:55:49.030+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T08:55:49.030+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:55:49.030+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:55:49.033+07:00 DEBUG 23192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:55:49.034+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@104bc677] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3bda1f0]
2024-08-06T08:55:49.866+07:00  INFO 23192 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T08:55:49.867+07:00 DEBUG 23192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@104bc677] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@52b7c1d9]
2024-08-06T08:55:49.929+07:00 TRACE 23192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52b7c1d9] for TypeConfiguration
2024-08-06T08:55:49.929+07:00  INFO 23192 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:55:50.138+07:00  INFO 23192 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T08:55:50.543+07:00  INFO 23192 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T08:55:50.544+07:00  WARN 23192 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T08:55:50.758+07:00  WARN 23192 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T08:55:51.527+07:00  INFO 23192 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@253cbe79, com.mongodb.Jep395RecordCodecProvider@5e66d85d, com.mongodb.KotlinCodecProvider@1a6d072e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T08:55:51.547+07:00  INFO 23192 --- [Spring_API] [cluster-ClusterId{value='66b182a71f6b481ef9eaa4cc', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22266800}
2024-08-06T08:55:51.883+07:00  INFO 23192 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T08:55:51.890+07:00  INFO 23192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.074 seconds (process running for 6.482)
2024-08-06T08:56:02.191+07:00  INFO 23192 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T08:56:02.194+07:00  INFO 23192 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T08:56:02.199+07:00  INFO 23192 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
2024-08-06T08:56:10.857+07:00 ERROR 23192 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.CourseRepository.findAll()" because "this.courseRepo" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.CourseRepository.findAll()" because "this.courseRepo" is null
	at com.example.spring.service.CourseService.getCourse(CourseService.java:25) ~[classes/:na]
	at com.example.spring.controller.CourseController.listCourses(CourseController.java:25) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T08:58:23.695+07:00  INFO 23192 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:58:23.697+07:00 TRACE 23192 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52b7c1d9] for TypeConfiguration
2024-08-06T08:58:23.697+07:00 DEBUG 23192 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@296c41f5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52b7c1d9]
2024-08-06T08:58:23.699+07:00  INFO 23192 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T08:58:23.706+07:00  INFO 23192 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T08:58:33.401+07:00  INFO 13096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 13096 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T08:58:33.402+07:00  INFO 13096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T08:58:33.949+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:58:33.949+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T08:58:33.969+07:00  INFO 13096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T08:58:34.064+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 1 JPA repository interface.
2024-08-06T08:58:34.292+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:58:34.292+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T08:58:34.304+07:00  INFO 13096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T08:58:34.307+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T08:58:34.315+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T08:58:34.316+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T08:58:34.324+07:00  INFO 13096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:58:34.325+07:00  INFO 13096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T08:58:34.325+07:00  INFO 13096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T08:58:34.962+07:00  INFO 13096 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T08:58:34.975+07:00  INFO 13096 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T08:58:34.976+07:00  INFO 13096 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T08:58:35.032+07:00  INFO 13096 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T08:58:35.033+07:00  INFO 13096 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1592 ms
2024-08-06T08:58:35.178+07:00  INFO 13096 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T08:58:35.239+07:00  INFO 13096 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T08:58:35.269+07:00  INFO 13096 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T08:58:35.332+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T08:58:35.332+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T08:58:35.333+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T08:58:35.334+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T08:58:35.335+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T08:58:35.336+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T08:58:35.337+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T08:58:35.338+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T08:58:35.339+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T08:58:35.343+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T08:58:35.343+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T08:58:35.344+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5dfd31f4
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T08:58:35.345+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T08:58:35.546+07:00  INFO 13096 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T08:58:35.565+07:00  INFO 13096 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T08:58:35.874+07:00  INFO 13096 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b267745
2024-08-06T08:58:35.875+07:00  INFO 13096 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T08:58:35.948+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T08:58:35.949+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T08:58:35.950+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T08:58:35.950+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T08:58:35.950+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T08:58:35.951+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:58:35.951+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T08:58:35.953+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@14d18029
2024-08-06T08:58:35.954+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5dfd31f4`
2024-08-06T08:58:35.956+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T08:58:35.956+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:58:35.956+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T08:58:35.958+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:58:35.959+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:58:35.959+07:00 DEBUG 13096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T08:58:35.959+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@32428874]
2024-08-06T08:58:36.670+07:00  INFO 13096 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T08:58:36.670+07:00 DEBUG 13096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T08:58:36.722+07:00 TRACE 13096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T08:58:36.722+07:00  INFO 13096 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:58:36.907+07:00  INFO 13096 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T08:58:37.277+07:00  INFO 13096 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T08:58:37.278+07:00  WARN 13096 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T08:58:37.406+07:00  INFO 13096 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T08:58:37.416+07:00  INFO 13096 --- [Spring_API] [cluster-ClusterId{value='66b1834db272616483b6a72a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15681400}
2024-08-06T08:58:37.747+07:00  WARN 13096 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T08:58:38.448+07:00  INFO 13096 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T08:58:38.454+07:00  INFO 13096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.422 seconds (process running for 5.778)
2024-08-06T08:58:47.785+07:00  INFO 13096 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T08:58:47.786+07:00  INFO 13096 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T08:58:47.788+07:00  INFO 13096 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T08:59:27.548+07:00  INFO 13096 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T08:59:27.549+07:00 TRACE 13096 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T08:59:27.549+07:00 DEBUG 13096 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3fae4fc7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T08:59:27.549+07:00  INFO 13096 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T08:59:27.555+07:00  INFO 13096 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:00:02.053+07:00  INFO 21580 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 21580 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:00:02.055+07:00  INFO 21580 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:00:02.562+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:00:02.563+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:00:02.582+07:00  INFO 21580 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:00:02.669+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99 ms. Found 1 JPA repository interface.
2024-08-06T09:00:02.911+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:00:02.911+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:00:02.923+07:00  INFO 21580 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:00:02.926+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T09:00:02.934+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:00:02.935+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:00:02.945+07:00  INFO 21580 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:00:02.945+07:00  INFO 21580 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:00:02.945+07:00  INFO 21580 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T09:00:03.549+07:00  INFO 21580 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:00:03.570+07:00  INFO 21580 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:00:03.570+07:00  INFO 21580 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:00:03.620+07:00  INFO 21580 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:00:03.620+07:00  INFO 21580 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1523 ms
2024-08-06T09:00:03.747+07:00  INFO 21580 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:00:03.814+07:00  INFO 21580 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:00:03.838+07:00  INFO 21580 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:00:03.890+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:00:03.891+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:00:03.892+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:00:03.892+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:00:03.892+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:00:03.892+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:00:03.892+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:00:03.893+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:00:03.894+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:00:03.895+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:00:03.896+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:00:03.897+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:00:03.898+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:00:03.899+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:00:03.900+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:00:03.901+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T09:00:03.902+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T09:00:03.905+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T09:00:03.906+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T09:00:03.907+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5dfd31f4
2024-08-06T09:00:03.907+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T09:00:03.907+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T09:00:03.908+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T09:00:04.073+07:00  INFO 21580 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:00:04.089+07:00  INFO 21580 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:00:04.338+07:00  INFO 21580 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b267745
2024-08-06T09:00:04.340+07:00  INFO 21580 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T09:00:04.404+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T09:00:04.405+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:00:04.406+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:00:04.406+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:00:04.407+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:00:04.407+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:00:04.410+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@14d18029
2024-08-06T09:00:04.410+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5dfd31f4`
2024-08-06T09:00:04.412+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:00:04.412+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:00:04.413+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:00:04.414+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:00:04.414+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:00:04.415+07:00 DEBUG 21580 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:00:04.416+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@32428874]
2024-08-06T09:00:05.147+07:00  INFO 21580 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:00:05.147+07:00 DEBUG 21580 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T09:00:05.203+07:00 TRACE 21580 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T09:00:05.204+07:00  INFO 21580 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:00:05.385+07:00  INFO 21580 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:00:05.730+07:00  INFO 21580 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:00:05.731+07:00  WARN 21580 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:00:05.848+07:00  INFO 21580 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:00:05.860+07:00  INFO 21580 --- [Spring_API] [cluster-ClusterId{value='66b183a538e6621603a650b3', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18680500}
2024-08-06T09:00:06.239+07:00  WARN 21580 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:00:06.982+07:00  INFO 21580 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:00:06.988+07:00  INFO 21580 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.296 seconds (process running for 5.747)
2024-08-06T09:00:11.680+07:00  INFO 21580 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:00:11.680+07:00  INFO 21580 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:00:11.682+07:00  INFO 21580 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T09:00:30.312+07:00  INFO 21580 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:00:30.313+07:00 TRACE 21580 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T09:00:30.313+07:00 DEBUG 21580 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2cc6f5a0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T09:00:30.314+07:00  INFO 21580 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:00:30.322+07:00  INFO 21580 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:23:00.648+07:00  INFO 27000 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 27000 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:23:00.650+07:00  INFO 27000 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:23:01.256+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:23:01.256+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:23:01.282+07:00  INFO 27000 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:23:01.394+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2024-08-06T09:23:01.669+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:23:01.669+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:23:01.680+07:00  INFO 27000 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:23:01.684+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T09:23:01.694+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:23:01.695+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:23:01.705+07:00  INFO 27000 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:23:01.706+07:00  INFO 27000 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:23:01.706+07:00  INFO 27000 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T09:23:02.414+07:00  INFO 27000 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:23:02.426+07:00  INFO 27000 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:23:02.427+07:00  INFO 27000 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:23:02.476+07:00  INFO 27000 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:23:02.477+07:00  INFO 27000 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1781 ms
2024-08-06T09:23:02.621+07:00  INFO 27000 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:23:02.688+07:00  INFO 27000 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:23:02.717+07:00  INFO 27000 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:23:02.785+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:23:02.786+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:23:02.787+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:23:02.788+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:23:02.789+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:23:02.790+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:23:02.791+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:23:02.791+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:23:02.792+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:23:02.793+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:23:02.794+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:23:02.794+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:23:02.794+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:23:02.794+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:23:02.795+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T09:23:02.796+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T09:23:02.797+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T09:23:02.797+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T09:23:02.800+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@fe42a09
2024-08-06T09:23:02.800+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@fe42a09
2024-08-06T09:23:02.802+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@36463b09
2024-08-06T09:23:02.802+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T09:23:02.803+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T09:23:02.997+07:00  INFO 27000 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:23:03.019+07:00  INFO 27000 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:23:03.357+07:00  INFO 27000 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31e22365
2024-08-06T09:23:03.359+07:00  INFO 27000 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:23:03.440+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff)
2024-08-06T09:23:03.440+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04)
2024-08-06T09:23:03.440+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077)
2024-08-06T09:23:03.440+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T09:23:03.440+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T09:23:03.441+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T09:23:03.441+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T09:23:03.441+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T09:23:03.441+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T09:23:03.443+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:23:03.443+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:23:03.443+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:23:03.446+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:23:03.446+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:23:03.448+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6edb1e9c
2024-08-06T09:23:03.449+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@36463b09`
2024-08-06T09:23:03.451+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:23:03.451+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:23:03.451+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:23:03.452+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:23:03.453+07:00 DEBUG 27000 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:23:03.454+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32428874] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c65f00e]
2024-08-06T09:23:04.156+07:00  INFO 27000 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:23:04.157+07:00 DEBUG 27000 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@32428874] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@13cc3984]
2024-08-06T09:23:04.222+07:00 TRACE 27000 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@13cc3984] for TypeConfiguration
2024-08-06T09:23:04.222+07:00  INFO 27000 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:23:04.434+07:00  INFO 27000 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:23:04.818+07:00  INFO 27000 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:23:04.819+07:00  WARN 27000 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:23:04.958+07:00  INFO 27000 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5a95090a, com.mongodb.Jep395RecordCodecProvider@34ccce55, com.mongodb.KotlinCodecProvider@7668edd7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:23:04.976+07:00  INFO 27000 --- [Spring_API] [cluster-ClusterId{value='66b18908cfbc5a7d9826cc28', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22966300}
2024-08-06T09:23:05.365+07:00  WARN 27000 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:23:06.118+07:00  INFO 27000 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:23:06.123+07:00  INFO 27000 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.871 seconds (process running for 6.28)
2024-08-06T09:23:11.681+07:00  INFO 27000 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:23:11.681+07:00  INFO 27000 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:23:11.682+07:00  INFO 27000 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T09:23:14.760+07:00  WARN 27000 --- [Spring_API] [http-nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "all"]
2024-08-06T09:25:10.168+07:00  INFO 27000 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:25:10.168+07:00 TRACE 27000 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@13cc3984] for TypeConfiguration
2024-08-06T09:25:10.168+07:00 DEBUG 27000 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5660236d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@13cc3984]
2024-08-06T09:25:10.169+07:00  INFO 27000 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:25:10.175+07:00  INFO 27000 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:26:01.491+07:00  INFO 23396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 23396 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:26:01.494+07:00  INFO 23396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:26:02.032+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:26:02.032+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:26:02.050+07:00  INFO 23396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:26:02.133+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 1 JPA repository interface.
2024-08-06T09:26:02.357+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:26:02.357+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:26:02.370+07:00  INFO 23396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:26:02.373+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T09:26:02.383+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:26:02.384+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:26:02.396+07:00  INFO 23396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:26:02.396+07:00  INFO 23396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:26:02.396+07:00  INFO 23396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T09:26:03.006+07:00  INFO 23396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:26:03.017+07:00  INFO 23396 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:26:03.018+07:00  INFO 23396 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:26:03.074+07:00  INFO 23396 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:26:03.074+07:00  INFO 23396 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1537 ms
2024-08-06T09:26:03.205+07:00  INFO 23396 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:26:03.236+07:00  INFO 23396 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:26:03.260+07:00  INFO 23396 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:26:03.318+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T09:26:03.318+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:26:03.319+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:26:03.320+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:26:03.321+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:26:03.322+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:26:03.323+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:26:03.324+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:26:03.325+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:26:03.326+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:26:03.327+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:26:03.328+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:26:03.332+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@566fe83c
2024-08-06T09:26:03.332+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@566fe83c
2024-08-06T09:26:03.333+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@37d0d373
2024-08-06T09:26:03.333+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4052913c
2024-08-06T09:26:03.333+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T09:26:03.333+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T09:26:03.334+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T09:26:03.334+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T09:26:03.334+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T09:26:03.334+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T09:26:03.334+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T09:26:03.510+07:00  INFO 23396 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:26:03.529+07:00  INFO 23396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:26:03.771+07:00  INFO 23396 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49b9ba6a
2024-08-06T09:26:03.773+07:00  INFO 23396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:26:03.841+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66dd04e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3)
2024-08-06T09:26:03.841+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c6919ff)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T09:26:03.842+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T09:26:03.843+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:26:03.843+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:26:03.844+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:26:03.845+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:26:03.845+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:26:03.846+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@62cf86d6
2024-08-06T09:26:03.846+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@37d0d373`
2024-08-06T09:26:03.849+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:26:03.849+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:26:03.849+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:26:03.851+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:26:03.851+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:26:03.851+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:26:03.851+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:26:03.851+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:26:03.852+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:26:03.852+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:26:03.852+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:26:03.852+07:00 DEBUG 23396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:26:03.853+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a06eeef]
2024-08-06T09:26:04.524+07:00  INFO 23396 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:26:04.524+07:00 DEBUG 23396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1f05d08c]
2024-08-06T09:26:04.580+07:00 TRACE 23396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1f05d08c] for TypeConfiguration
2024-08-06T09:26:04.581+07:00  INFO 23396 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:26:04.763+07:00  INFO 23396 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:26:05.132+07:00  INFO 23396 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:26:05.133+07:00  WARN 23396 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:26:05.251+07:00  INFO 23396 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@34ccce55, com.mongodb.Jep395RecordCodecProvider@7668edd7, com.mongodb.KotlinCodecProvider@10374cae]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:26:05.263+07:00  INFO 23396 --- [Spring_API] [cluster-ClusterId{value='66b189bd4b1aaf1dc115a0a3', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22324900}
2024-08-06T09:26:05.552+07:00  WARN 23396 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:26:06.212+07:00  INFO 23396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:26:06.219+07:00  INFO 23396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.113 seconds (process running for 5.447)
2024-08-06T09:26:17.116+07:00  INFO 23396 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:26:17.117+07:00  INFO 23396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:26:17.118+07:00  INFO 23396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T09:26:20.964+07:00  WARN 23396 --- [Spring_API] [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "all"]
2024-08-06T09:27:00.162+07:00  WARN 23396 --- [Spring_API] [http-nio-8080-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "all"]
2024-08-06T09:27:42.683+07:00  INFO 23396 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:27:42.685+07:00 TRACE 23396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1f05d08c] for TypeConfiguration
2024-08-06T09:27:42.685+07:00 DEBUG 23396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@d984b78] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1f05d08c]
2024-08-06T09:27:42.686+07:00  INFO 23396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:27:42.694+07:00  INFO 23396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:27:49.259+07:00  INFO 2592 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2592 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:27:49.261+07:00  INFO 2592 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:27:49.754+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:27:49.754+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:27:49.774+07:00  INFO 2592 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:27:49.853+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 1 JPA repository interface.
2024-08-06T09:27:50.071+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:27:50.072+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:27:50.084+07:00  INFO 2592 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:27:50.087+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T09:27:50.096+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:27:50.097+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:27:50.107+07:00  INFO 2592 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:27:50.107+07:00  INFO 2592 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:27:50.107+07:00  INFO 2592 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T09:27:50.735+07:00  INFO 2592 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:27:50.747+07:00  INFO 2592 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:27:50.748+07:00  INFO 2592 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:27:50.793+07:00  INFO 2592 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:27:50.794+07:00  INFO 2592 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1495 ms
2024-08-06T09:27:50.943+07:00  INFO 2592 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:27:50.994+07:00  INFO 2592 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:27:51.026+07:00  INFO 2592 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:27:51.092+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:27:51.093+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:27:51.094+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:27:51.095+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:27:51.096+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:27:51.097+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:27:51.098+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:27:51.099+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:27:51.100+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:27:51.100+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:27:51.100+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:27:51.105+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T09:27:51.106+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@b3857e2
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25a290ee
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4052913c
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@99c4993
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T09:27:51.108+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T09:27:51.284+07:00  INFO 2592 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:27:51.301+07:00  INFO 2592 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:27:51.546+07:00  INFO 2592 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49b9ba6a
2024-08-06T09:27:51.548+07:00  INFO 2592 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66dd04e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c6919ff)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T09:27:51.612+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T09:27:51.613+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T09:27:51.613+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T09:27:51.614+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:27:51.614+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:27:51.614+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:27:51.615+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:27:51.615+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:27:51.618+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@62cf86d6
2024-08-06T09:27:51.618+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b3857e2`
2024-08-06T09:27:51.620+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:27:51.620+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:27:51.620+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:27:51.622+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:27:51.622+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:27:51.622+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:27:51.622+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:27:51.623+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:27:51.623+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:27:51.623+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:27:51.623+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:27:51.623+07:00 DEBUG 2592 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:27:51.624+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a06eeef]
2024-08-06T09:27:52.255+07:00  INFO 2592 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:27:52.256+07:00 DEBUG 2592 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6afb240d]
2024-08-06T09:27:52.318+07:00 TRACE 2592 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6afb240d] for TypeConfiguration
2024-08-06T09:27:52.319+07:00  INFO 2592 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:27:52.508+07:00  INFO 2592 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:27:52.848+07:00  INFO 2592 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:27:52.849+07:00  WARN 2592 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:27:52.980+07:00  INFO 2592 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@34ccce55, com.mongodb.Jep395RecordCodecProvider@7668edd7, com.mongodb.KotlinCodecProvider@10374cae]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:27:52.992+07:00  INFO 2592 --- [Spring_API] [cluster-ClusterId{value='66b18a281dc36f2b359b95f9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18765100}
2024-08-06T09:27:53.305+07:00  WARN 2592 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:27:54.012+07:00  INFO 2592 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:27:54.018+07:00  INFO 2592 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.114 seconds (process running for 5.44)
2024-08-06T09:28:03.342+07:00  INFO 2592 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:28:03.343+07:00  INFO 2592 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:28:03.343+07:00  INFO 2592 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-06T09:28:30.519+07:00  INFO 2592 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:28:30.520+07:00 TRACE 2592 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6afb240d] for TypeConfiguration
2024-08-06T09:28:30.520+07:00 DEBUG 2592 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3f7463a0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6afb240d]
2024-08-06T09:28:30.520+07:00  INFO 2592 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:28:30.526+07:00  INFO 2592 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:28:39.162+07:00  INFO 10192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 10192 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:28:39.165+07:00  INFO 10192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:28:39.714+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:28:39.714+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:28:39.733+07:00  INFO 10192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:28:39.801+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 1 JPA repository interface.
2024-08-06T09:28:40.048+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:28:40.048+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:28:40.059+07:00  INFO 10192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:28:40.062+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T09:28:40.070+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:28:40.071+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:28:40.080+07:00  INFO 10192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:28:40.081+07:00  INFO 10192 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:28:40.081+07:00  INFO 10192 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T09:28:40.690+07:00  INFO 10192 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:28:40.715+07:00  INFO 10192 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:28:40.715+07:00  INFO 10192 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:28:40.767+07:00  INFO 10192 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:28:40.767+07:00  INFO 10192 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1563 ms
2024-08-06T09:28:40.895+07:00  INFO 10192 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:28:40.948+07:00  INFO 10192 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:28:40.984+07:00  INFO 10192 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:28:41.043+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:28:41.044+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:28:41.045+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:28:41.046+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:28:41.047+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:28:41.048+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:28:41.049+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:28:41.050+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T09:28:41.051+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T09:28:41.054+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T09:28:41.054+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f357c9d
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5dfd31f4
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T09:28:41.055+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T09:28:41.242+07:00  INFO 10192 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:28:41.259+07:00  INFO 10192 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:28:41.501+07:00  INFO 10192 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b267745
2024-08-06T09:28:41.502+07:00  INFO 10192 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:28:41.563+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T09:28:41.563+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T09:28:41.564+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T09:28:41.565+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:28:41.566+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:28:41.566+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:28:41.568+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:28:41.569+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:28:41.571+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@14d18029
2024-08-06T09:28:41.571+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5dfd31f4`
2024-08-06T09:28:41.574+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:28:41.574+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:28:41.574+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:28:41.576+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:28:41.577+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:28:41.577+07:00 DEBUG 10192 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:28:41.578+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@32428874]
2024-08-06T09:28:42.204+07:00  INFO 10192 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:28:42.205+07:00 DEBUG 10192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@493968a9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T09:28:42.258+07:00 TRACE 10192 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T09:28:42.259+07:00  INFO 10192 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:28:42.437+07:00  INFO 10192 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:28:42.778+07:00  INFO 10192 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:28:42.779+07:00  WARN 10192 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:28:42.890+07:00  INFO 10192 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5a95090a, com.mongodb.Jep395RecordCodecProvider@34ccce55, com.mongodb.KotlinCodecProvider@7668edd7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:28:42.899+07:00  INFO 10192 --- [Spring_API] [cluster-ClusterId{value='66b18a5a42c0e727294a9ade', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14975100}
2024-08-06T09:28:43.217+07:00  WARN 10192 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:28:43.933+07:00  INFO 10192 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:28:43.939+07:00  INFO 10192 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.144 seconds (process running for 5.474)
2024-08-06T09:28:49.777+07:00  INFO 10192 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:28:49.777+07:00  INFO 10192 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:28:49.778+07:00  INFO 10192 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T09:29:30.347+07:00  INFO 10192 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:29:30.348+07:00 TRACE 10192 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T09:29:30.348+07:00 DEBUG 10192 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@37f0173] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T09:29:30.349+07:00  INFO 10192 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:29:30.361+07:00  INFO 10192 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T09:44:33.167+07:00  INFO 12488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 12488 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T09:44:33.168+07:00  INFO 12488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T09:44:33.797+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:44:33.798+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T09:44:33.823+07:00  INFO 12488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T09:44:33.927+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 1 JPA repository interface.
2024-08-06T09:44:34.211+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:44:34.212+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T09:44:34.224+07:00  INFO 12488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T09:44:34.227+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T09:44:34.238+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T09:44:34.240+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T09:44:34.250+07:00  INFO 12488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:44:34.250+07:00  INFO 12488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T09:44:34.250+07:00  INFO 12488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T09:44:34.927+07:00  INFO 12488 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T09:44:34.939+07:00  INFO 12488 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T09:44:34.940+07:00  INFO 12488 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T09:44:34.993+07:00  INFO 12488 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T09:44:34.993+07:00  INFO 12488 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1780 ms
2024-08-06T09:44:35.163+07:00  INFO 12488 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T09:44:35.219+07:00  INFO 12488 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T09:44:35.247+07:00  INFO 12488 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T09:44:35.320+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:44:35.321+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:44:35.321+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T09:44:35.321+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:44:35.321+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T09:44:35.322+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:44:35.322+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T09:44:35.322+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:44:35.322+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T09:44:35.323+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:44:35.323+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T09:44:35.324+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T09:44:35.325+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T09:44:35.326+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:44:35.327+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T09:44:35.328+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:44:35.329+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T09:44:35.330+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T09:44:35.335+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@16bbaab3
2024-08-06T09:44:35.336+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@16bbaab3
2024-08-06T09:44:35.337+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@9729a97
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T09:44:35.338+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T09:44:35.339+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T09:44:35.339+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T09:44:35.538+07:00  INFO 12488 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T09:44:35.558+07:00  INFO 12488 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T09:44:35.873+07:00  INFO 12488 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ebf524
2024-08-06T09:44:35.875+07:00  INFO 12488 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T09:44:35.951+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T09:44:35.952+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T09:44:35.954+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T09:44:35.954+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T09:44:35.954+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T09:44:35.954+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:44:35.954+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T09:44:35.957+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@75d7297d
2024-08-06T09:44:35.957+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@9729a97`
2024-08-06T09:44:35.959+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T09:44:35.960+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:44:35.960+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T09:44:35.961+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:44:35.961+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:44:35.962+07:00 DEBUG 12488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T09:44:35.964+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3412a3fd]
2024-08-06T09:44:36.676+07:00  INFO 12488 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T09:44:36.677+07:00 DEBUG 12488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@47bbf44d]
2024-08-06T09:44:36.733+07:00 TRACE 12488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@47bbf44d] for TypeConfiguration
2024-08-06T09:44:36.734+07:00  INFO 12488 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:44:36.921+07:00  INFO 12488 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T09:44:37.321+07:00  INFO 12488 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T09:44:37.322+07:00  WARN 12488 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T09:44:37.459+07:00  INFO 12488 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4c04188, com.mongodb.Jep395RecordCodecProvider@76a41af0, com.mongodb.KotlinCodecProvider@7a1148f2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T09:44:37.474+07:00  INFO 12488 --- [Spring_API] [cluster-ClusterId{value='66b18e15fca5e426f2980226', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19249700}
2024-08-06T09:44:37.819+07:00  WARN 12488 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T09:44:38.569+07:00  INFO 12488 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T09:44:38.575+07:00  INFO 12488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.827 seconds (process running for 6.229)
2024-08-06T09:44:50.104+07:00  INFO 12488 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T09:44:50.105+07:00  INFO 12488 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T09:44:50.106+07:00  INFO 12488 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T09:46:37.658+07:00  INFO 12488 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T09:46:37.659+07:00 TRACE 12488 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@47bbf44d] for TypeConfiguration
2024-08-06T09:46:37.659+07:00 DEBUG 12488 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@21c50c7d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@47bbf44d]
2024-08-06T09:46:37.660+07:00  INFO 12488 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T09:46:37.676+07:00  INFO 12488 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T10:16:32.681+07:00  INFO 26076 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26076 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T10:16:32.682+07:00  INFO 26076 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T10:16:33.299+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:16:33.299+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T10:16:33.323+07:00  INFO 26076 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T10:16:33.423+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface.
2024-08-06T10:16:33.692+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:16:33.693+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T10:16:33.704+07:00  INFO 26076 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T10:16:33.707+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T10:16:33.719+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:16:33.720+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T10:16:33.731+07:00  INFO 26076 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:16:33.732+07:00  INFO 26076 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:16:33.732+07:00  INFO 26076 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T10:16:34.423+07:00  INFO 26076 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T10:16:34.434+07:00  INFO 26076 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T10:16:34.435+07:00  INFO 26076 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T10:16:34.492+07:00  INFO 26076 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T10:16:34.492+07:00  INFO 26076 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1766 ms
2024-08-06T10:16:34.633+07:00  INFO 26076 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T10:16:34.682+07:00  INFO 26076 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T10:16:34.715+07:00  INFO 26076 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T10:16:34.794+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c4f4330
2024-08-06T10:16:34.794+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c4f4330
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c4f4330
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2b9aeedb
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2b9aeedb
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@63485d7
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@63485d7
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@23ea8830
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@23ea8830
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@59a09be
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@59a09be
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@59a09be
2024-08-06T10:16:34.795+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@790ac3e0
2024-08-06T10:16:34.796+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@790ac3e0
2024-08-06T10:16:34.796+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@790ac3e0
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5bb2fb2b
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5bb2fb2b
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:16:34.797+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:16:34.798+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T10:16:34.799+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T10:16:34.800+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T10:16:34.801+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T10:16:34.802+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:16:34.803+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T10:16:34.804+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T10:16:34.805+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T10:16:34.814+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@2bb717d7
2024-08-06T10:16:34.814+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2bb717d7
2024-08-06T10:16:34.815+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2de3b052
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3f3c8b60
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3f357c9d
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@fe42a09
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5458c71e
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1ffd0114
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b3857e2
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@25a290ee
2024-08-06T10:16:34.816+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@37d0d373
2024-08-06T10:16:35.032+07:00  INFO 26076 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T10:16:35.053+07:00  INFO 26076 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T10:16:35.383+07:00  INFO 26076 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4b9fa2f
2024-08-06T10:16:35.384+07:00  INFO 26076 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T10:16:35.467+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59b3f754) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18dbc1b)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a510e0e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8315e4a)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efe014f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22ff11ef)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c5ac0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23d978b)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cf70afa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66dd04e2)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@495e8a3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a7aa675)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602a3237)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070)
2024-08-06T10:16:35.468+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf)
2024-08-06T10:16:35.469+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T10:16:35.470+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T10:16:35.470+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T10:16:35.471+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:16:35.473+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:16:35.475+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@311a09b2
2024-08-06T10:16:35.475+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2de3b052`
2024-08-06T10:16:35.477+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T10:16:35.477+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:16:35.477+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:16:35.479+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:16:35.480+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:16:35.480+07:00 DEBUG 26076 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:16:35.480+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1534bdc6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53079ae6]
2024-08-06T10:16:36.176+07:00  INFO 26076 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T10:16:36.177+07:00 DEBUG 26076 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1534bdc6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@e98adb2]
2024-08-06T10:16:36.235+07:00 TRACE 26076 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e98adb2] for TypeConfiguration
2024-08-06T10:16:36.235+07:00  INFO 26076 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T10:16:36.418+07:00  INFO 26076 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T10:16:36.797+07:00  INFO 26076 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T10:16:36.798+07:00  WARN 26076 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T10:16:36.923+07:00  INFO 26076 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@35738a92, com.mongodb.Jep395RecordCodecProvider@10ec54c3, com.mongodb.KotlinCodecProvider@2005d3e0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T10:16:36.935+07:00  INFO 26076 --- [Spring_API] [cluster-ClusterId{value='66b195943ce7a84d85507457', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16485300}
2024-08-06T10:16:37.296+07:00  WARN 26076 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T10:16:38.103+07:00  INFO 26076 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T10:16:38.111+07:00  INFO 26076 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.833 seconds (process running for 6.387)
2024-08-06T10:17:11.983+07:00  INFO 26076 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T10:17:11.984+07:00  INFO 26076 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T10:17:11.985+07:00  INFO 26076 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T10:17:28.515+07:00  INFO 26076 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T10:17:28.517+07:00 TRACE 26076 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e98adb2] for TypeConfiguration
2024-08-06T10:17:28.517+07:00 DEBUG 26076 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f97aa2c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e98adb2]
2024-08-06T10:17:28.518+07:00  INFO 26076 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T10:17:28.526+07:00  INFO 26076 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T10:49:19.194+07:00  INFO 18500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18500 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T10:49:19.196+07:00  INFO 18500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T10:49:19.765+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:49:19.765+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T10:49:19.789+07:00  INFO 18500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T10:49:19.891+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interface.
2024-08-06T10:49:20.181+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:49:20.181+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T10:49:20.193+07:00  INFO 18500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T10:49:20.196+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T10:49:20.207+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:49:20.209+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T10:49:20.220+07:00  INFO 18500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:49:20.221+07:00  INFO 18500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:49:20.221+07:00  INFO 18500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T10:49:20.854+07:00  INFO 18500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T10:49:20.866+07:00  INFO 18500 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T10:49:20.866+07:00  INFO 18500 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T10:49:20.917+07:00  INFO 18500 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T10:49:20.917+07:00  INFO 18500 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1682 ms
2024-08-06T10:49:21.058+07:00  INFO 18500 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T10:49:21.121+07:00  INFO 18500 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T10:49:21.156+07:00  INFO 18500 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T10:49:21.220+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@766b6d02
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@766b6d02
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@766b6d02
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6b09ce57
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6b09ce57
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5c4f4330
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5c4f4330
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b9aeedb
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b9aeedb
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@63485d7
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@63485d7
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@63485d7
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@23ea8830
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@23ea8830
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@23ea8830
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@59a09be
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@59a09be
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@790ac3e0
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5bb2fb2b
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5bb2fb2b
2024-08-06T10:49:21.221+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:49:21.222+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T10:49:21.223+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T10:49:21.224+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T10:49:21.225+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T10:49:21.226+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T10:49:21.227+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T10:49:21.228+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T10:49:21.231+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@19105a87
2024-08-06T10:49:21.232+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19105a87
2024-08-06T10:49:21.232+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@566fe83c
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@743bb39a
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3f3c8b60
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@16bbaab3
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f357c9d
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@fe42a09
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5458c71e
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ffd0114
2024-08-06T10:49:21.233+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@b3857e2
2024-08-06T10:49:21.425+07:00  INFO 18500 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T10:49:21.449+07:00  INFO 18500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T10:49:21.793+07:00  INFO 18500 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b86826a
2024-08-06T10:49:21.794+07:00  INFO 18500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T10:49:21.880+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@499c4d61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74badf19)
2024-08-06T10:49:21.880+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59b3f754) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18dbc1b)
2024-08-06T10:49:21.880+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a510e0e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8315e4a)
2024-08-06T10:49:21.881+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efe014f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22ff11ef)
2024-08-06T10:49:21.881+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c5ac0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23d978b)
2024-08-06T10:49:21.881+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cf70afa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66dd04e2)
2024-08-06T10:49:21.881+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a7aa675)
2024-08-06T10:49:21.881+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602a3237)
2024-08-06T10:49:21.882+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070)
2024-08-06T10:49:21.885+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T10:49:21.885+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T10:49:21.886+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T10:49:21.887+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:49:21.888+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:49:21.890+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4af0c50
2024-08-06T10:49:21.890+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@566fe83c`
2024-08-06T10:49:21.893+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T10:49:21.893+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:49:21.893+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:49:21.895+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:49:21.896+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:49:21.896+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:49:21.896+07:00 DEBUG 18500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:49:21.897+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ec98ccc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@441aa7ae]
2024-08-06T10:49:22.628+07:00  INFO 18500 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T10:49:22.629+07:00 DEBUG 18500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ec98ccc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@79a92277]
2024-08-06T10:49:22.708+07:00 TRACE 18500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@79a92277] for TypeConfiguration
2024-08-06T10:49:22.708+07:00  INFO 18500 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T10:49:22.901+07:00  INFO 18500 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T10:49:23.280+07:00  INFO 18500 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T10:49:23.280+07:00  WARN 18500 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T10:49:23.575+07:00  INFO 18500 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45e931a9, com.mongodb.Jep395RecordCodecProvider@269bf9e6, com.mongodb.KotlinCodecProvider@6114ed6f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T10:49:23.592+07:00  INFO 18500 --- [Spring_API] [cluster-ClusterId{value='66b19d43ddc92607f24a1942', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22178600}
2024-08-06T10:49:23.776+07:00  WARN 18500 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T10:49:24.516+07:00  INFO 18500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T10:49:24.525+07:00  INFO 18500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.744 seconds (process running for 6.179)
2024-08-06T10:49:32.967+07:00  INFO 18500 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T10:49:32.967+07:00  INFO 18500 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T10:49:32.969+07:00  INFO 18500 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T10:49:47.339+07:00  INFO 18500 --- [Spring_API] [http-nio-8080-exec-8] c.e.s.c.AuthenticationController         : User logout!
2024-08-06T10:50:34.822+07:00 ERROR 18500 --- [Spring_API] [http-nio-8080-exec-6] c.e.s.c.AuthenticationController         : Error: 

org.apache.coyote.BadRequestException: Username is already taken
	at com.example.spring.controller.AuthenticationController.registerUser(AuthenticationController.java:89) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T10:50:34.836+07:00 ERROR 18500 --- [Spring_API] [http-nio-8080-exec-6] c.e.s.c.AuthenticationController         : Error: 

org.apache.coyote.BadRequestException: Email is already in use!
	at com.example.spring.controller.AuthenticationController.registerUser(AuthenticationController.java:93) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T10:51:12.376+07:00  INFO 18500 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T10:51:12.377+07:00 TRACE 18500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@79a92277] for TypeConfiguration
2024-08-06T10:51:12.377+07:00 DEBUG 18500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@66944bc8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@79a92277]
2024-08-06T10:51:12.377+07:00  INFO 18500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T10:51:12.384+07:00  INFO 18500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T10:56:27.732+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 14396 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T10:56:27.735+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T10:56:28.388+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:56:28.389+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T10:56:28.416+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T10:56:28.530+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 132 ms. Found 1 JPA repository interface.
2024-08-06T10:56:28.800+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:56:28.800+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T10:56:28.812+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T10:56:28.815+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T10:56:28.827+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T10:56:28.829+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T10:56:28.840+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:56:28.840+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T10:56:28.840+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T10:56:29.520+07:00  INFO 14396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T10:56:29.534+07:00  INFO 14396 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T10:56:29.534+07:00  INFO 14396 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T10:56:29.592+07:00  INFO 14396 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T10:56:29.592+07:00  INFO 14396 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1803 ms
2024-08-06T10:56:29.741+07:00  INFO 14396 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T10:56:29.802+07:00  INFO 14396 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T10:56:29.832+07:00  INFO 14396 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T10:56:29.898+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:56:29.899+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T10:56:29.900+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:56:29.901+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T10:56:29.902+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T10:56:29.904+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T10:56:29.905+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T10:56:29.906+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T10:56:29.907+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T10:56:29.908+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T10:56:29.909+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T10:56:29.913+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T10:56:29.914+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T10:56:29.914+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@b3857e2
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25a290ee
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4052913c
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@99c4993
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T10:56:29.915+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T10:56:30.110+07:00  INFO 14396 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T10:56:30.136+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T10:56:30.481+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@49b9ba6a
2024-08-06T10:56:30.483+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T10:56:30.560+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66dd04e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3)
2024-08-06T10:56:30.561+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T10:56:30.562+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61)
2024-08-06T10:56:30.562+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c6919ff)
2024-08-06T10:56:30.562+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T10:56:30.562+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T10:56:30.563+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T10:56:30.563+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T10:56:30.564+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T10:56:30.565+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T10:56:30.565+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T10:56:30.566+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T10:56:30.567+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:56:30.567+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T10:56:30.570+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@62cf86d6
2024-08-06T10:56:30.570+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b3857e2`
2024-08-06T10:56:30.573+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T10:56:30.573+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:56:30.574+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T10:56:30.576+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:56:30.576+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:56:30.576+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T10:56:30.576+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:56:30.577+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:56:30.577+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T10:56:30.577+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:56:30.577+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:56:30.577+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T10:56:30.578+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a06eeef]
2024-08-06T10:56:31.302+07:00  INFO 14396 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T10:56:31.303+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d229912] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T10:56:31.361+07:00 TRACE 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T10:56:31.363+07:00  INFO 14396 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T10:56:31.573+07:00  INFO 14396 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T10:56:31.988+07:00  INFO 14396 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T10:56:31.989+07:00  WARN 14396 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T10:56:32.385+07:00  INFO 14396 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2fb5e706, com.mongodb.Jep395RecordCodecProvider@4a35aed6, com.mongodb.KotlinCodecProvider@54c76c23]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T10:56:32.405+07:00  INFO 14396 --- [Spring_API] [cluster-ClusterId{value='66b19ef0658b3d64e0d1b3e9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25365000}
2024-08-06T10:56:32.653+07:00  WARN 14396 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T10:56:33.593+07:00  INFO 14396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T10:56:33.599+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.327 seconds (process running for 6.732)
2024-08-06T10:57:30.342+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T10:57:30.343+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T10:57:30.344+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T10:57:30.400+07:00 ERROR 14396 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because the return value of "org.springframework.security.core.context.SecurityContext.getAuthentication()" is null] with root cause

java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because the return value of "org.springframework.security.core.context.SecurityContext.getAuthentication()" is null
	at com.example.spring.controller.UserController.currentUser(UserController.java:40) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T10:58:08.849+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-4] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T10:58:08.855+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-4] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T10:58:08.920+07:00 ERROR 14396 --- [Spring_API] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["authorities"]) ] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["authorities"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.deserializeAndSet(SetterlessProperty.java:113) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:46) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:00:50.807+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:00:50.807+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-6] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:00:50.811+07:00 ERROR 14396 --- [Spring_API] [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:failed to lazily initialize a collection: could not initialize proxy - no Session (through reference chain: com.example.spring.entity.User["roles"]) ] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:353) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:223) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:184) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:27) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:120) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserializeWithType(StringCollectionDeserializer.java:268) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:138) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:46) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:01:46.885+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:01:46.886+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:01:46.888+07:00 ERROR 14396 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:failed to lazily initialize a collection: could not initialize proxy - no Session (through reference chain: com.example.spring.entity.User["roles"]) ] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:353) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:223) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:184) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:27) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:120) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserializeWithType(StringCollectionDeserializer.java:268) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:138) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:46) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:06:56.884+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:06:56.900+07:00 TRACE 14396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T11:06:56.901+07:00 DEBUG 14396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5a0a0209] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T11:06:56.908+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:06:56.944+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:07:27.487+07:00  INFO 11068 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 11068 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:07:27.489+07:00  INFO 11068 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:07:28.094+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:07:28.094+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:07:28.120+07:00  INFO 11068 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:07:28.227+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 124 ms. Found 1 JPA repository interface.
2024-08-06T11:07:28.487+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:07:28.487+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:07:28.498+07:00  INFO 11068 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:07:28.501+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:07:28.513+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:07:28.514+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:07:28.524+07:00  INFO 11068 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:07:28.524+07:00  INFO 11068 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:07:28.525+07:00  INFO 11068 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:07:29.163+07:00  INFO 11068 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:07:29.177+07:00  INFO 11068 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:07:29.177+07:00  INFO 11068 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:07:29.231+07:00  INFO 11068 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:07:29.231+07:00  INFO 11068 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1697 ms
2024-08-06T11:07:29.361+07:00  INFO 11068 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:07:29.423+07:00  INFO 11068 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:07:29.455+07:00  INFO 11068 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:07:29.519+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:07:29.520+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:07:29.521+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:07:29.522+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:07:29.523+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:07:29.524+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:07:29.525+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:07:29.526+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:07:29.527+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:07:29.528+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:07:29.532+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T11:07:29.532+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T11:07:29.533+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@23b71d24
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:07:29.534+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:07:29.727+07:00  INFO 11068 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:07:29.752+07:00  INFO 11068 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:07:30.097+07:00  INFO 11068 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@492fa72a
2024-08-06T11:07:30.099+07:00  INFO 11068 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T11:07:30.184+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T11:07:30.185+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T11:07:30.185+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T11:07:30.186+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:07:30.187+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:07:30.187+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:07:30.189+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:07:30.189+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:07:30.191+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@17332039
2024-08-06T11:07:30.191+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23b71d24`
2024-08-06T11:07:30.194+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:07:30.194+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:07:30.194+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:07:30.197+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:07:30.198+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:07:30.198+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:07:30.198+07:00 DEBUG 11068 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:07:30.199+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b3bb287]
2024-08-06T11:07:30.947+07:00  INFO 11068 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:07:30.947+07:00 DEBUG 11068 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T11:07:31.007+07:00 TRACE 11068 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T11:07:31.008+07:00  INFO 11068 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:07:31.194+07:00  INFO 11068 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:07:31.560+07:00  INFO 11068 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:07:31.560+07:00  WARN 11068 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:07:31.866+07:00  INFO 11068 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5135b459, com.mongodb.Jep395RecordCodecProvider@3a770af8, com.mongodb.KotlinCodecProvider@779e66e5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:07:31.882+07:00  INFO 11068 --- [Spring_API] [cluster-ClusterId{value='66b1a183f051d96b138d8372', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19360600}
2024-08-06T11:07:32.064+07:00  WARN 11068 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:07:32.817+07:00  INFO 11068 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:07:32.822+07:00  INFO 11068 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.756 seconds (process running for 6.168)
2024-08-06T11:07:42.956+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:07:42.957+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:07:42.958+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:08:02.904+07:00 ERROR 11068 --- [Spring_API] [http-nio-8080-exec-4] c.e.s.c.AuthenticationController         : Error: 

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:08:20.088+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:08:20.089+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T11:08:20.151+07:00 ERROR 11068 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:failed to lazily initialize a collection: could not initialize proxy - no Session (through reference chain: com.example.spring.entity.User["roles"]) ] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:353) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:223) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:184) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:27) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:120) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserializeWithType(StringCollectionDeserializer.java:268) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:138) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:46) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:08:43.562+07:00 ERROR 11068 --- [Spring_API] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because the return value of "org.springframework.security.core.context.SecurityContext.getAuthentication()" is null] with root cause

java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because the return value of "org.springframework.security.core.context.SecurityContext.getAuthentication()" is null
	at com.example.spring.controller.UserController.currentUser(UserController.java:40) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:10:31.131+07:00  WARN 11068 --- [Spring_API] [http-nio-8080-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "{1}"]
2024-08-06T11:10:39.153+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-10] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:10:39.153+07:00  INFO 11068 --- [Spring_API] [http-nio-8080-exec-10] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:10:39.156+07:00 ERROR 11068 --- [Spring_API] [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:46) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:16:51.580+07:00  INFO 11068 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:16:51.593+07:00 TRACE 11068 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T11:16:51.593+07:00 DEBUG 11068 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e8e3503] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T11:16:51.598+07:00  INFO 11068 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:16:51.620+07:00  INFO 11068 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:18:29.400+07:00  INFO 27548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 27548 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:18:29.402+07:00  INFO 27548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:18:29.988+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:18:29.988+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:18:30.010+07:00  INFO 27548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:18:30.116+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 120 ms. Found 1 JPA repository interface.
2024-08-06T11:18:30.362+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:18:30.363+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:18:30.374+07:00  INFO 27548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:18:30.377+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:18:30.388+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:18:30.390+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:18:30.399+07:00  INFO 27548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:18:30.399+07:00  INFO 27548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:18:30.399+07:00  INFO 27548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:18:31.049+07:00  INFO 27548 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:18:31.067+07:00  INFO 27548 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:18:31.067+07:00  INFO 27548 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:18:31.128+07:00  INFO 27548 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:18:31.128+07:00  INFO 27548 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1680 ms
2024-08-06T11:18:31.274+07:00  INFO 27548 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:18:31.331+07:00  INFO 27548 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:18:31.366+07:00  INFO 27548 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T11:18:31.437+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:18:31.438+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:18:31.439+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:18:31.440+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:18:31.441+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:18:31.442+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:18:31.443+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:18:31.444+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:18:31.445+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:18:31.446+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:18:31.447+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:18:31.452+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T11:18:31.452+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:18:31.453+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:18:31.659+07:00  INFO 27548 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:18:31.679+07:00  INFO 27548 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:18:31.989+07:00  INFO 27548 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T11:18:31.990+07:00  INFO 27548 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T11:18:32.082+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T11:18:32.084+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:18:32.084+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:18:32.084+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:18:32.087+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:18:32.087+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:18:32.089+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T11:18:32.090+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T11:18:32.092+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:18:32.092+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:18:32.092+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:18:32.094+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:18:32.095+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:18:32.095+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:18:32.095+07:00 DEBUG 27548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:18:32.095+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T11:18:32.829+07:00  INFO 27548 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:18:32.829+07:00 DEBUG 27548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T11:18:32.890+07:00 TRACE 27548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T11:18:32.891+07:00  INFO 27548 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:18:33.104+07:00  INFO 27548 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:18:33.502+07:00  INFO 27548 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:18:33.503+07:00  WARN 27548 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:18:33.812+07:00  INFO 27548 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45c5cd9a, com.mongodb.Jep395RecordCodecProvider@858bf8c, com.mongodb.KotlinCodecProvider@30c1447e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:18:33.833+07:00  INFO 27548 --- [Spring_API] [cluster-ClusterId{value='66b1a419339d9213f02c1d05', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26553000}
2024-08-06T11:18:34.036+07:00  WARN 27548 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:18:34.828+07:00  INFO 27548 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:18:34.836+07:00  INFO 27548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.84 seconds (process running for 6.253)
2024-08-06T11:18:43.860+07:00  INFO 27548 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:18:43.860+07:00  INFO 27548 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:18:43.861+07:00  INFO 27548 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:18:44.150+07:00  INFO 27548 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:18:44.167+07:00  INFO 27548 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:18:44.235+07:00 ERROR 27548 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.11.jar:6.1.11]
	at com.example.spring.service.UserService$$SpringCGLIB$$0.findUserById(<generated>) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:18:58.213+07:00  INFO 27548 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:18:58.214+07:00 TRACE 27548 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T11:18:58.214+07:00 DEBUG 27548 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27bc245f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T11:18:58.215+07:00  INFO 27548 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:18:58.225+07:00  INFO 27548 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:22:06.461+07:00  INFO 2740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2740 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:22:06.463+07:00  INFO 2740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:22:07.080+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:22:07.081+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:22:07.112+07:00  INFO 2740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:22:07.229+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 140 ms. Found 1 JPA repository interface.
2024-08-06T11:22:07.489+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:22:07.490+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:22:07.501+07:00  INFO 2740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:22:07.504+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:22:07.516+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:22:07.517+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:22:07.530+07:00  INFO 2740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:22:07.530+07:00  INFO 2740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:22:07.530+07:00  INFO 2740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T11:22:08.215+07:00  INFO 2740 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:22:08.235+07:00  INFO 2740 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:22:08.236+07:00  INFO 2740 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:22:08.286+07:00  INFO 2740 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:22:08.286+07:00  INFO 2740 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1779 ms
2024-08-06T11:22:08.426+07:00  INFO 2740 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:22:08.495+07:00  INFO 2740 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:22:08.531+07:00  INFO 2740 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:22:08.600+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:22:08.601+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:22:08.602+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:22:08.603+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:22:08.604+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:22:08.605+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:22:08.606+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:22:08.607+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:22:08.607+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:22:08.607+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:22:08.607+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:22:08.607+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:22:08.610+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:22:08.611+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6f8667bb
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T11:22:08.612+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T11:22:08.812+07:00  INFO 2740 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:22:08.836+07:00  INFO 2740 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:22:09.159+07:00  INFO 2740 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f68eec6
2024-08-06T11:22:09.161+07:00  INFO 2740 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T11:22:09.234+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T11:22:09.235+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T11:22:09.236+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:22:09.237+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:22:09.237+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:22:09.239+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:22:09.239+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:22:09.242+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6d5508a5
2024-08-06T11:22:09.242+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6f8667bb`
2024-08-06T11:22:09.245+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:22:09.245+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:22:09.245+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:22:09.247+07:00 DEBUG 2740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:22:09.248+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7dd7ec56]
2024-08-06T11:22:10.045+07:00  INFO 2740 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:22:10.045+07:00 DEBUG 2740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:22:10.106+07:00 TRACE 2740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:22:10.106+07:00  INFO 2740 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:22:10.397+07:00  INFO 2740 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:22:10.793+07:00  INFO 2740 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:22:10.794+07:00  WARN 2740 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:22:11.094+07:00  INFO 2740 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4d462edc, com.mongodb.Jep395RecordCodecProvider@312ddc51, com.mongodb.KotlinCodecProvider@330f3046]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:22:11.106+07:00  INFO 2740 --- [Spring_API] [cluster-ClusterId{value='66b1a4f3f1728612faf4b581', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17552700}
2024-08-06T11:22:11.284+07:00  WARN 2740 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:22:12.053+07:00  INFO 2740 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:22:12.060+07:00  INFO 2740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.029 seconds (process running for 6.504)
2024-08-06T11:22:20.530+07:00  INFO 2740 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:22:20.530+07:00  INFO 2740 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:22:20.532+07:00  INFO 2740 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T11:22:21.099+07:00  INFO 2740 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:22:21.125+07:00  INFO 2740 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:22:21.200+07:00 ERROR 2740 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.11.jar:6.1.11]
	at com.example.spring.service.UserService$$SpringCGLIB$$0.findUserById(<generated>) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:54) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:30:11.211+07:00  INFO 2740 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:30:11.220+07:00 TRACE 2740 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:30:11.220+07:00 DEBUG 2740 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3d199b79] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:30:11.224+07:00  INFO 2740 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:30:11.280+07:00  INFO 2740 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:30:22.441+07:00  INFO 15500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 15500 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:30:22.443+07:00  INFO 15500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:30:23.031+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:30:23.031+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:30:23.054+07:00  INFO 15500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:30:23.138+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99 ms. Found 1 JPA repository interface.
2024-08-06T11:30:23.371+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:30:23.371+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:30:23.381+07:00  INFO 15500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:30:23.385+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:30:23.395+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:30:23.396+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:30:23.404+07:00  INFO 15500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:30:23.404+07:00  INFO 15500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:30:23.404+07:00  INFO 15500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-08-06T11:30:24.019+07:00  INFO 15500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:30:24.032+07:00  INFO 15500 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:30:24.033+07:00  INFO 15500 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:30:24.090+07:00  INFO 15500 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:30:24.091+07:00  INFO 15500 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1607 ms
2024-08-06T11:30:24.211+07:00  INFO 15500 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:30:24.275+07:00  INFO 15500 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:30:24.312+07:00  INFO 15500 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:30:24.373+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:30:24.374+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:30:24.374+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:30:24.374+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:30:24.375+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:30:24.376+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:30:24.377+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:30:24.378+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:30:24.379+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:30:24.380+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:30:24.380+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:30:24.380+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:30:24.380+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:30:24.381+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:30:24.382+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:30:24.386+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@577bfadb
2024-08-06T11:30:24.386+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@577bfadb
2024-08-06T11:30:24.387+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@43588265
2024-08-06T11:30:24.387+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T11:30:24.388+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T11:30:24.608+07:00  INFO 15500 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:30:24.634+07:00  INFO 15500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:30:24.977+07:00  INFO 15500 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7323dce7
2024-08-06T11:30:24.978+07:00  INFO 15500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:30:25.053+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T11:30:25.054+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0)
2024-08-06T11:30:25.055+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ac0ed65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb)
2024-08-06T11:30:25.056+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:30:25.056+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:30:25.056+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:30:25.059+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:30:25.059+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:30:25.061+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@69d021c1
2024-08-06T11:30:25.062+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@43588265`
2024-08-06T11:30:25.065+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:30:25.065+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:30:25.065+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:30:25.068+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:30:25.069+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:30:25.069+07:00 DEBUG 15500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:30:25.069+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e62ca19] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@188bf4d8]
2024-08-06T11:30:25.772+07:00  INFO 15500 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:30:25.773+07:00 DEBUG 15500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e62ca19] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@233d2b76]
2024-08-06T11:30:25.831+07:00 TRACE 15500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@233d2b76] for TypeConfiguration
2024-08-06T11:30:25.831+07:00  INFO 15500 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:30:25.997+07:00  INFO 15500 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:30:26.373+07:00  INFO 15500 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:30:26.374+07:00  WARN 15500 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:30:26.635+07:00  INFO 15500 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@37a2d18c, com.mongodb.Jep395RecordCodecProvider@4b6e296a, com.mongodb.KotlinCodecProvider@14feab02]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:30:26.645+07:00  INFO 15500 --- [Spring_API] [cluster-ClusterId{value='66b1a6e2709d302a6fe35fa6', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16899500}
2024-08-06T11:30:26.840+07:00  WARN 15500 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:30:27.568+07:00  INFO 15500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:30:27.575+07:00  INFO 15500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.513 seconds (process running for 5.866)
2024-08-06T11:30:31.215+07:00  INFO 15500 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:30:31.215+07:00  INFO 15500 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:30:31.216+07:00  INFO 15500 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:30:31.482+07:00  INFO 15500 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:30:31.497+07:00  INFO 15500 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:30:31.536+07:00 ERROR 15500 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720) ~[spring-aop-6.1.11.jar:6.1.11]
	at com.example.spring.service.UserService$$SpringCGLIB$$0.findUserById(<generated>) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:31:40.611+07:00  INFO 15500 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:31:40.612+07:00 TRACE 15500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@233d2b76] for TypeConfiguration
2024-08-06T11:31:40.612+07:00 DEBUG 15500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@787619be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@233d2b76]
2024-08-06T11:31:40.613+07:00  INFO 15500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:31:40.620+07:00  INFO 15500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:31:58.340+07:00  INFO 5940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 5940 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:31:58.342+07:00  INFO 5940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:31:58.923+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:31:58.923+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:31:58.945+07:00  INFO 5940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:31:59.035+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105 ms. Found 1 JPA repository interface.
2024-08-06T11:31:59.263+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:31:59.263+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:31:59.274+07:00  INFO 5940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:31:59.277+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:31:59.286+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:31:59.287+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:31:59.295+07:00  INFO 5940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:31:59.296+07:00  INFO 5940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:31:59.296+07:00  INFO 5940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:31:59.965+07:00  INFO 5940 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:31:59.979+07:00  INFO 5940 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:31:59.979+07:00  INFO 5940 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:32:00.037+07:00  INFO 5940 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:32:00.037+07:00  INFO 5940 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1654 ms
2024-08-06T11:32:00.175+07:00  INFO 5940 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:32:00.232+07:00  INFO 5940 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:32:00.264+07:00  INFO 5940 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:32:00.325+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:32:00.326+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:32:00.327+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:32:00.328+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:32:00.329+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:32:00.330+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:32:00.331+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:32:00.332+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-06T11:32:00.333+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@bf2aa32
2024-08-06T11:32:00.334+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56da96b3
2024-08-06T11:32:00.337+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-06T11:32:00.338+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@61ab6521
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@68fc9167
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52c46334
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@12fccff0
2024-08-06T11:32:00.339+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d767218
2024-08-06T11:32:00.340+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@510da778
2024-08-06T11:32:00.340+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20a1b3ae
2024-08-06T11:32:00.340+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54567b05
2024-08-06T11:32:00.524+07:00  INFO 5940 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:32:00.547+07:00  INFO 5940 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:32:00.861+07:00  INFO 5940 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e482ecd
2024-08-06T11:32:00.864+07:00  INFO 5940 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:32:00.943+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b)
2024-08-06T11:32:00.943+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4adcc981) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73aae7a)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3856d0cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2125535d)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d190639) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f82209e)
2024-08-06T11:32:00.944+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@515c732d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ae87de0)
2024-08-06T11:32:00.946+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:32:00.946+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:32:00.946+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:32:00.947+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:32:00.947+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:32:00.949+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ff0706c
2024-08-06T11:32:00.949+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@61ab6521`
2024-08-06T11:32:00.951+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:32:00.951+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:32:00.951+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:32:00.953+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:32:00.953+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:32:00.953+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:32:00.954+07:00 DEBUG 5940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:32:00.955+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ce18cec]
2024-08-06T11:32:01.706+07:00  INFO 5940 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:32:01.706+07:00 DEBUG 5940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
2024-08-06T11:32:01.761+07:00 TRACE 5940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
2024-08-06T11:32:01.762+07:00  INFO 5940 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:32:01.926+07:00  INFO 5940 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:32:02.279+07:00  INFO 5940 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:32:02.280+07:00  WARN 5940 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:32:02.543+07:00  INFO 5940 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45a9f3d4, com.mongodb.Jep395RecordCodecProvider@246ee6d8, com.mongodb.KotlinCodecProvider@33e69162]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:32:02.550+07:00  INFO 5940 --- [Spring_API] [cluster-ClusterId{value='66b1a74269654c3eb0b76efa', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15570100}
2024-08-06T11:32:02.723+07:00  WARN 5940 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:32:03.422+07:00  INFO 5940 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:32:03.427+07:00  INFO 5940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.449 seconds (process running for 5.81)
2024-08-06T11:32:06.914+07:00  INFO 5940 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:32:06.914+07:00  INFO 5940 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:32:06.915+07:00  INFO 5940 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:32:07.110+07:00  INFO 5940 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:32:07.111+07:00  INFO 5940 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:32:07.152+07:00 ERROR 5940 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["authorities"]) ] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["authorities"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.deserializeAndSet(SetterlessProperty.java:113) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:56) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:34:16.918+07:00  INFO 5940 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:34:16.920+07:00 TRACE 5940 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
2024-08-06T11:34:16.920+07:00 DEBUG 5940 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3413d466] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
2024-08-06T11:34:16.923+07:00  INFO 5940 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:34:16.956+07:00  INFO 5940 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:36:01.227+07:00  INFO 17376 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 17376 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:36:01.229+07:00  INFO 17376 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:36:01.741+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:36:01.742+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:36:01.764+07:00  INFO 17376 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:36:01.853+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T11:36:02.113+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:36:02.113+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:36:02.124+07:00  INFO 17376 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:36:02.127+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T11:36:02.136+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:36:02.138+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:36:02.148+07:00  INFO 17376 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:36:02.148+07:00  INFO 17376 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:36:02.148+07:00  INFO 17376 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T11:36:02.764+07:00  INFO 17376 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:36:02.783+07:00  INFO 17376 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:36:02.783+07:00  INFO 17376 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:36:02.838+07:00  INFO 17376 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:36:02.839+07:00  INFO 17376 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1567 ms
2024-08-06T11:36:02.966+07:00  INFO 17376 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:36:03.031+07:00  INFO 17376 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:36:03.067+07:00  INFO 17376 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:36:03.126+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:36:03.127+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:36:03.128+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:36:03.129+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:36:03.130+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:36:03.131+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:36:03.132+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:36:03.135+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T11:36:03.136+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T11:36:03.136+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:36:03.137+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T11:36:03.317+07:00  INFO 17376 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:36:03.340+07:00  INFO 17376 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:36:03.648+07:00  INFO 17376 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T11:36:03.649+07:00  INFO 17376 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:36:03.721+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T11:36:03.721+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T11:36:03.723+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T11:36:03.725+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:36:03.725+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:36:03.725+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:36:03.726+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:36:03.726+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:36:03.729+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T11:36:03.729+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T11:36:03.732+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:36:03.732+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:36:03.732+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:36:03.734+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:36:03.735+07:00 DEBUG 17376 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:36:03.736+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T11:36:04.483+07:00  INFO 17376 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:36:04.483+07:00 DEBUG 17376 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@949f0d]
2024-08-06T11:36:04.717+07:00 TRACE 17376 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@949f0d] for TypeConfiguration
2024-08-06T11:36:04.718+07:00  INFO 17376 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:36:04.891+07:00  INFO 17376 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:36:05.287+07:00  INFO 17376 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:36:05.288+07:00  WARN 17376 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:36:05.533+07:00  INFO 17376 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3d4ea4cf, com.mongodb.Jep395RecordCodecProvider@655e024, com.mongodb.KotlinCodecProvider@5b34e7bd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:36:05.543+07:00  INFO 17376 --- [Spring_API] [cluster-ClusterId{value='66b1a835fb996a7ba9c86642', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14722000}
2024-08-06T11:36:05.698+07:00  WARN 17376 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:36:06.388+07:00  INFO 17376 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:36:06.394+07:00  INFO 17376 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.538 seconds (process running for 5.897)
2024-08-06T11:36:20.986+07:00  INFO 17376 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:36:20.986+07:00  INFO 17376 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:36:20.988+07:00  INFO 17376 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T11:36:21.337+07:00  INFO 17376 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:36:21.341+07:00  INFO 17376 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:36:21.410+07:00 ERROR 17376 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 272] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 272] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:56) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:37:00.606+07:00  INFO 17376 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:37:00.607+07:00 TRACE 17376 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@949f0d] for TypeConfiguration
2024-08-06T11:37:00.608+07:00 DEBUG 17376 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4f5a5f64] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@949f0d]
2024-08-06T11:37:00.608+07:00  INFO 17376 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:37:00.616+07:00  INFO 17376 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:38:05.115+07:00  INFO 4004 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 4004 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:38:05.117+07:00  INFO 4004 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:38:05.712+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:38:05.713+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:38:05.740+07:00  INFO 4004 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:38:05.845+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 124 ms. Found 1 JPA repository interface.
2024-08-06T11:38:06.103+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:38:06.104+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:38:06.114+07:00  INFO 4004 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:38:06.117+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T11:38:06.128+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:38:06.130+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:38:06.140+07:00  INFO 4004 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:38:06.140+07:00  INFO 4004 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:38:06.140+07:00  INFO 4004 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:38:06.809+07:00  INFO 4004 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:38:06.821+07:00  INFO 4004 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:38:06.821+07:00  INFO 4004 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:38:06.870+07:00  INFO 4004 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:38:06.870+07:00  INFO 4004 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1705 ms
2024-08-06T11:38:07.003+07:00  INFO 4004 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:38:07.062+07:00  INFO 4004 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:38:07.098+07:00  INFO 4004 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:38:07.165+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:38:07.165+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:38:07.165+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:38:07.165+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:38:07.166+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:38:07.167+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:38:07.168+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:38:07.169+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:38:07.170+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:38:07.171+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@bf2aa32
2024-08-06T11:38:07.172+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56da96b3
2024-08-06T11:38:07.176+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-06T11:38:07.176+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-06T11:38:07.177+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@61ab6521
2024-08-06T11:38:07.177+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@68fc9167
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52c46334
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@12fccff0
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d767218
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@510da778
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20a1b3ae
2024-08-06T11:38:07.178+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54567b05
2024-08-06T11:38:07.385+07:00  INFO 4004 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:38:07.412+07:00  INFO 4004 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:38:07.905+07:00  INFO 4004 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e482ecd
2024-08-06T11:38:07.907+07:00  INFO 4004 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:38:08.001+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b)
2024-08-06T11:38:08.001+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4)
2024-08-06T11:38:08.001+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749)
2024-08-06T11:38:08.001+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T11:38:08.002+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T11:38:08.002+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4adcc981) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73aae7a)
2024-08-06T11:38:08.002+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3856d0cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2125535d)
2024-08-06T11:38:08.002+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d190639) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f82209e)
2024-08-06T11:38:08.002+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@515c732d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ae87de0)
2024-08-06T11:38:08.003+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:38:08.003+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:38:08.004+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:38:08.006+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:38:08.006+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:38:08.010+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ff0706c
2024-08-06T11:38:08.011+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@61ab6521`
2024-08-06T11:38:08.016+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:38:08.017+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:38:08.017+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:38:08.020+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:38:08.020+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:38:08.020+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:38:08.020+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:38:08.020+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:38:08.021+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:38:08.022+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:38:08.022+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:38:08.022+07:00 DEBUG 4004 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:38:08.024+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ce18cec]
2024-08-06T11:38:08.826+07:00  INFO 4004 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:38:08.827+07:00 DEBUG 4004 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
2024-08-06T11:38:08.884+07:00 TRACE 4004 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
2024-08-06T11:38:08.885+07:00  INFO 4004 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:38:09.072+07:00  INFO 4004 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:38:09.449+07:00  INFO 4004 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:38:09.451+07:00  WARN 4004 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:38:09.756+07:00  INFO 4004 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45a9f3d4, com.mongodb.Jep395RecordCodecProvider@246ee6d8, com.mongodb.KotlinCodecProvider@33e69162]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:38:09.771+07:00  INFO 4004 --- [Spring_API] [cluster-ClusterId{value='66b1a8b1af69bf7729d692fa', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17628700}
2024-08-06T11:38:09.974+07:00  WARN 4004 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:38:10.795+07:00  INFO 4004 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:38:10.801+07:00  INFO 4004 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.118 seconds (process running for 6.567)
2024-08-06T11:38:14.673+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:38:14.673+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:38:14.674+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:38:14.890+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:38:14.892+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:38:14.945+07:00 ERROR 4004 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:56) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:39:12.441+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-6] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:39:12.442+07:00  INFO 4004 --- [Spring_API] [http-nio-8080-exec-6] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:39:12.444+07:00 ERROR 4004 --- [Spring_API] [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:56) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:40:34.174+07:00  INFO 4004 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:40:34.175+07:00 TRACE 4004 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4202bfe8] for TypeConfiguration
2024-08-06T11:40:34.175+07:00 DEBUG 4004 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7516a2b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4202bfe8]
2024-08-06T11:40:34.177+07:00  INFO 4004 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:40:34.184+07:00  INFO 4004 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:41:48.834+07:00  INFO 15608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 15608 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:41:48.836+07:00  INFO 15608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:41:49.388+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:41:49.388+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:41:49.411+07:00  INFO 15608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:41:49.504+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interface.
2024-08-06T11:41:49.787+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:41:49.788+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:41:49.803+07:00  INFO 15608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:41:49.807+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 1 MongoDB repository interface.
2024-08-06T11:41:49.823+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:41:49.824+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:41:49.837+07:00  INFO 15608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:41:49.838+07:00  INFO 15608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:41:49.838+07:00  INFO 15608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T11:41:50.490+07:00  INFO 15608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:41:50.506+07:00  INFO 15608 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:41:50.508+07:00  INFO 15608 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:41:50.555+07:00  INFO 15608 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:41:50.555+07:00  INFO 15608 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1674 ms
2024-08-06T11:41:50.689+07:00  INFO 15608 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:41:50.758+07:00  INFO 15608 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:41:50.794+07:00  INFO 15608 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:41:50.860+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:41:50.861+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:41:50.862+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:41:50.863+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:41:50.863+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:41:50.863+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:41:50.863+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:41:50.863+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:41:50.864+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:41:50.865+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:41:50.866+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:41:50.867+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:41:50.868+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:41:50.872+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T11:41:50.872+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:41:50.873+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:41:51.072+07:00  INFO 15608 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:41:51.097+07:00  INFO 15608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:41:51.414+07:00  INFO 15608 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T11:41:51.416+07:00  INFO 15608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:41:51.492+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T11:41:51.493+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T11:41:51.494+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:41:51.495+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:41:51.495+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:41:51.496+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:41:51.496+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:41:51.498+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T11:41:51.499+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T11:41:51.502+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:41:51.502+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:41:51.502+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:41:51.505+07:00 DEBUG 15608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:41:51.506+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T11:41:52.241+07:00  INFO 15608 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:41:52.242+07:00 DEBUG 15608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T11:41:52.297+07:00 TRACE 15608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T11:41:52.298+07:00  INFO 15608 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:41:52.483+07:00  INFO 15608 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:41:52.858+07:00  INFO 15608 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:41:52.859+07:00  WARN 15608 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:41:53.141+07:00  INFO 15608 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@246f9fa8, com.mongodb.Jep395RecordCodecProvider@4d001a14, com.mongodb.KotlinCodecProvider@7af85b32]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:41:53.153+07:00  INFO 15608 --- [Spring_API] [cluster-ClusterId{value='66b1a991e8b13b76982c8f54', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16092200}
2024-08-06T11:41:53.331+07:00  WARN 15608 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:41:54.125+07:00  INFO 15608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:41:54.132+07:00  INFO 15608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.679 seconds (process running for 6.055)
2024-08-06T11:41:58.342+07:00  INFO 15608 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:41:58.343+07:00  INFO 15608 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:41:58.344+07:00  INFO 15608 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:41:58.531+07:00  INFO 15608 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:41:58.532+07:00  INFO 15608 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:41:58.576+07:00 ERROR 15608 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:44:13.231+07:00  INFO 15608 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:44:13.234+07:00 TRACE 15608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T11:44:13.234+07:00 DEBUG 15608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3413d466] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T11:44:13.235+07:00  INFO 15608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:44:13.253+07:00  INFO 15608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:45:13.983+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25608 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:45:13.985+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:45:14.513+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:45:14.513+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:45:14.539+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:45:14.627+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106 ms. Found 1 JPA repository interface.
2024-08-06T11:45:14.867+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:45:14.867+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:45:14.879+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:45:14.882+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T11:45:14.894+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:45:14.896+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:45:14.905+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:45:14.905+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:45:14.905+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:45:15.511+07:00  INFO 25608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:45:15.531+07:00  INFO 25608 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:45:15.531+07:00  INFO 25608 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:45:15.580+07:00  INFO 25608 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:45:15.580+07:00  INFO 25608 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1554 ms
2024-08-06T11:45:15.695+07:00  INFO 25608 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:45:15.763+07:00  INFO 25608 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:45:15.803+07:00  INFO 25608 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:45:15.862+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:45:15.863+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:45:15.864+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:45:15.865+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:45:15.866+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:45:15.867+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:45:15.868+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:45:15.869+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:45:15.872+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:45:15.872+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:45:15.872+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6f8667bb
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T11:45:15.873+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T11:45:16.054+07:00  INFO 25608 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:45:16.076+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:45:16.397+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f68eec6
2024-08-06T11:45:16.399+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:45:16.472+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T11:45:16.473+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T11:45:16.474+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T11:45:16.474+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T11:45:16.477+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:45:16.477+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:45:16.477+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:45:16.479+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:45:16.479+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:45:16.482+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6d5508a5
2024-08-06T11:45:16.483+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6f8667bb`
2024-08-06T11:45:16.487+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:45:16.488+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:45:16.488+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:45:16.491+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:45:16.492+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:45:16.492+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:45:16.492+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:45:16.493+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7dd7ec56]
2024-08-06T11:45:17.216+07:00  INFO 25608 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:45:17.216+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:45:17.272+07:00 TRACE 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:45:17.272+07:00  INFO 25608 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:45:17.465+07:00  INFO 25608 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:45:17.860+07:00  INFO 25608 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:45:17.861+07:00  WARN 25608 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:45:18.159+07:00  INFO 25608 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4d462edc, com.mongodb.Jep395RecordCodecProvider@312ddc51, com.mongodb.KotlinCodecProvider@330f3046]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:45:18.172+07:00  INFO 25608 --- [Spring_API] [cluster-ClusterId{value='66b1aa5e5834b732c3886c64', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17698700}
2024-08-06T11:45:18.356+07:00  WARN 25608 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:45:19.130+07:00  INFO 25608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:45:19.136+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.519 seconds (process running for 5.88)
2024-08-06T11:45:23.485+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:45:23.485+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:45:23.486+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:45:23.684+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:45:23.685+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:45:23.731+07:00 ERROR 25608 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"]) ] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.deserializeAndSet(SetterlessProperty.java:113) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:47:14.645+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:47:14.646+07:00 TRACE 25608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:47:14.646+07:00 DEBUG 25608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@456d1e00] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:47:14.647+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:47:14.654+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:47:24.545+07:00  INFO 19420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 19420 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:47:24.547+07:00  INFO 19420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:47:25.099+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:47:25.100+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:47:25.124+07:00  INFO 19420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:47:25.211+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T11:47:25.434+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:47:25.435+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:47:25.447+07:00  INFO 19420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:47:25.450+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T11:47:25.460+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:47:25.461+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:47:25.470+07:00  INFO 19420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:47:25.470+07:00  INFO 19420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:47:25.470+07:00  INFO 19420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:47:26.120+07:00  INFO 19420 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:47:26.140+07:00  INFO 19420 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:47:26.140+07:00  INFO 19420 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:47:26.199+07:00  INFO 19420 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:47:26.200+07:00  INFO 19420 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1613 ms
2024-08-06T11:47:26.331+07:00  INFO 19420 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:47:26.397+07:00  INFO 19420 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:47:26.434+07:00  INFO 19420 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:47:26.497+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:47:26.498+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:47:26.499+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:47:26.500+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:47:26.501+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:47:26.502+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:47:26.503+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:47:26.504+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:47:26.505+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:47:26.505+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:47:26.505+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:47:26.505+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:47:26.505+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:47:26.508+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@9729a97
2024-08-06T11:47:26.508+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9729a97
2024-08-06T11:47:26.509+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@655203e3
2024-08-06T11:47:26.509+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T11:47:26.509+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:47:26.510+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:47:26.707+07:00  INFO 19420 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:47:26.729+07:00  INFO 19420 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:47:27.041+07:00  INFO 19420 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3be46d9c
2024-08-06T11:47:27.043+07:00  INFO 19420 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:47:27.114+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T11:47:27.115+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T11:47:27.117+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:47:27.117+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:47:27.117+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:47:27.118+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:47:27.118+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:47:27.120+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3aab42d6
2024-08-06T11:47:27.120+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@655203e3`
2024-08-06T11:47:27.124+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:47:27.124+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:47:27.124+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:47:27.127+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:47:27.128+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:47:27.129+07:00 DEBUG 19420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:47:27.129+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@538905d2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e8c58fd]
2024-08-06T11:47:27.880+07:00  INFO 19420 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:47:27.880+07:00 DEBUG 19420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@538905d2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@623d222]
2024-08-06T11:47:27.937+07:00 TRACE 19420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@623d222] for TypeConfiguration
2024-08-06T11:47:27.937+07:00  INFO 19420 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:47:28.133+07:00  INFO 19420 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:47:28.526+07:00  INFO 19420 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:47:28.527+07:00  WARN 19420 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:47:28.825+07:00  INFO 19420 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4a65ce06, com.mongodb.Jep395RecordCodecProvider@30a0a440, com.mongodb.KotlinCodecProvider@116c43d4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:47:28.837+07:00  INFO 19420 --- [Spring_API] [cluster-ClusterId{value='66b1aae011a19a03c9859961', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18487900}
2024-08-06T11:47:29.017+07:00  WARN 19420 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:47:29.791+07:00  INFO 19420 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:47:29.796+07:00  INFO 19420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.613 seconds (process running for 6.033)
2024-08-06T11:47:42.652+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:47:42.652+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:47:42.653+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:47:42.836+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:47:42.838+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:47:42.878+07:00 ERROR 19420 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:587) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.lang.String.valueOf(String.java:4230) ~[na:na]
	at com.example.spring.entity.User.toString(User.java:26) ~[classes/:na]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:47:56.968+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-5] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:47:56.969+07:00  INFO 19420 --- [Spring_API] [http-nio-8080-exec-5] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:47:56.971+07:00 ERROR 19420 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:587) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.lang.String.valueOf(String.java:4230) ~[na:na]
	at com.example.spring.entity.User.toString(User.java:26) ~[classes/:na]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:49:04.744+07:00  INFO 19420 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:49:04.746+07:00 TRACE 19420 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@623d222] for TypeConfiguration
2024-08-06T11:49:04.746+07:00 DEBUG 19420 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2cafa36e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@623d222]
2024-08-06T11:49:04.746+07:00  INFO 19420 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:49:04.754+07:00  INFO 19420 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:49:37.336+07:00  INFO 16452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16452 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:49:37.338+07:00  INFO 16452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:49:37.907+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:49:37.907+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:49:37.931+07:00  INFO 16452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:49:38.018+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T11:49:38.238+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:49:38.239+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:49:38.250+07:00  INFO 16452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:49:38.253+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:49:38.262+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:49:38.263+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:49:38.272+07:00  INFO 16452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:49:38.273+07:00  INFO 16452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:49:38.273+07:00  INFO 16452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:49:38.925+07:00  INFO 16452 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:49:38.943+07:00  INFO 16452 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:49:38.943+07:00  INFO 16452 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:49:39.008+07:00  INFO 16452 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:49:39.008+07:00  INFO 16452 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1628 ms
2024-08-06T11:49:39.145+07:00  INFO 16452 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:49:39.204+07:00  INFO 16452 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:49:39.238+07:00  INFO 16452 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:49:39.299+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T11:49:39.300+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:49:39.301+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:49:39.302+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:49:39.303+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:49:39.304+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:49:39.305+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:49:39.306+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:49:39.307+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:49:39.308+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:49:39.311+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@38089dae
2024-08-06T11:49:39.312+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@38089dae
2024-08-06T11:49:39.313+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6df791a4
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T11:49:39.314+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:49:39.507+07:00  INFO 16452 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:49:39.530+07:00  INFO 16452 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:49:39.875+07:00  INFO 16452 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4746fb8c
2024-08-06T11:49:39.876+07:00  INFO 16452 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:49:39.946+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T11:49:39.947+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T11:49:39.948+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:49:39.949+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:49:39.949+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:49:39.951+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:49:39.952+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:49:39.954+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1fba3fd6
2024-08-06T11:49:39.954+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6df791a4`
2024-08-06T11:49:39.957+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:49:39.957+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:49:39.957+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:49:39.960+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:49:39.961+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:49:39.961+07:00 DEBUG 16452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:49:39.962+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd591b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@538905d2]
2024-08-06T11:49:40.680+07:00  INFO 16452 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:49:40.681+07:00 DEBUG 16452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd591b9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@23adbd6b]
2024-08-06T11:49:40.737+07:00 TRACE 16452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@23adbd6b] for TypeConfiguration
2024-08-06T11:49:40.738+07:00  INFO 16452 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:49:40.940+07:00  INFO 16452 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:49:41.311+07:00  INFO 16452 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:49:41.312+07:00  WARN 16452 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:49:41.568+07:00  INFO 16452 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@31d96cd6, com.mongodb.Jep395RecordCodecProvider@4e0dec0c, com.mongodb.KotlinCodecProvider@3dd4f91d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:49:41.577+07:00  INFO 16452 --- [Spring_API] [cluster-ClusterId{value='66b1ab655d8e142f3cfca82e', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17197800}
2024-08-06T11:49:41.769+07:00  WARN 16452 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:49:42.475+07:00  INFO 16452 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:49:42.480+07:00  INFO 16452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.507 seconds (process running for 5.864)
2024-08-06T11:49:46.463+07:00  INFO 16452 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:49:46.464+07:00  INFO 16452 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:49:46.465+07:00  INFO 16452 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:49:46.637+07:00  INFO 16452 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:49:46.638+07:00  INFO 16452 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[], authorities=[])
2024-08-06T11:49:46.676+07:00 ERROR 16452 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.toString(PersistentBag.java:587) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/java.lang.String.valueOf(String.java:4230) ~[na:na]
	at com.example.spring.entity.User.toString(User.java:26) ~[classes/:na]
	at com.example.spring.service.UserService.findUserById(UserService.java:49) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:50:43.433+07:00  INFO 16452 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:50:43.436+07:00 TRACE 16452 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@23adbd6b] for TypeConfiguration
2024-08-06T11:50:43.436+07:00 DEBUG 16452 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70a2cf1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@23adbd6b]
2024-08-06T11:50:43.437+07:00  INFO 16452 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:50:43.447+07:00  INFO 16452 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:53:46.540+07:00  INFO 24816 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 24816 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:53:46.542+07:00  INFO 24816 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:53:47.098+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:53:47.098+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:53:47.119+07:00  INFO 24816 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:53:47.205+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 1 JPA repository interface.
2024-08-06T11:53:47.433+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:53:47.433+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:53:47.446+07:00  INFO 24816 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:53:47.450+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T11:53:47.459+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:53:47.460+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:53:47.471+07:00  INFO 24816 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:53:47.471+07:00  INFO 24816 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:53:47.471+07:00  INFO 24816 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T11:53:48.129+07:00  INFO 24816 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:53:48.142+07:00  INFO 24816 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:53:48.142+07:00  INFO 24816 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:53:48.196+07:00  INFO 24816 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:53:48.197+07:00  INFO 24816 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1613 ms
2024-08-06T11:53:48.340+07:00  INFO 24816 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:53:48.395+07:00  INFO 24816 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:53:48.425+07:00  INFO 24816 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:53:48.489+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:53:48.489+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:53:48.490+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:53:48.491+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:53:48.492+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:53:48.493+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:53:48.494+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:53:48.495+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:53:48.495+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:53:48.495+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:53:48.495+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:53:48.495+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:53:48.496+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:53:48.497+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:53:48.498+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:53:48.499+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:53:48.504+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57e4b86c
2024-08-06T11:53:48.504+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57e4b86c
2024-08-06T11:53:48.505+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@568f4faa
2024-08-06T11:53:48.505+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T11:53:48.505+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T11:53:48.505+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T11:53:48.506+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:53:48.506+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T11:53:48.506+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:53:48.506+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:53:48.506+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T11:53:48.704+07:00  INFO 24816 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:53:48.726+07:00  INFO 24816 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:53:49.039+07:00  INFO 24816 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@513fab1e
2024-08-06T11:53:49.041+07:00  INFO 24816 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:53:49.118+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T11:53:49.119+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T11:53:49.120+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:53:49.120+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:53:49.121+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:53:49.122+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:53:49.123+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:53:49.125+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@776e7dfb
2024-08-06T11:53:49.125+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@568f4faa`
2024-08-06T11:53:49.128+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:53:49.128+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:53:49.128+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:53:49.130+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:53:49.131+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:53:49.131+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:53:49.131+07:00 DEBUG 24816 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:53:49.132+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b3bb287] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ec5aad]
2024-08-06T11:53:49.871+07:00  INFO 24816 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:53:49.871+07:00 DEBUG 24816 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b3bb287] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:53:49.922+07:00 TRACE 24816 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:53:49.922+07:00  INFO 24816 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:53:50.121+07:00  INFO 24816 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:53:50.480+07:00  INFO 24816 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:53:50.481+07:00  WARN 24816 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:53:50.756+07:00  INFO 24816 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4b6e296a, com.mongodb.Jep395RecordCodecProvider@14feab02, com.mongodb.KotlinCodecProvider@5e3934db]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:53:50.772+07:00  INFO 24816 --- [Spring_API] [cluster-ClusterId{value='66b1ac5efa4e547bfa8ce935', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20019700}
2024-08-06T11:53:50.964+07:00  WARN 24816 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:53:51.662+07:00  INFO 24816 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:53:51.668+07:00  INFO 24816 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.516 seconds (process running for 5.873)
2024-08-06T11:53:55.088+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:53:55.089+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:53:55.090+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:53:55.269+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:53:55.270+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:53:55.307+07:00 ERROR 24816 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"]) ] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.deserializeAndSet(SetterlessProperty.java:113) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:61) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:55:36.435+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-10] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:55:36.435+07:00  INFO 24816 --- [Spring_API] [http-nio-8080-exec-10] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:55:36.437+07:00 ERROR 24816 --- [Spring_API] [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"]) ] with root cause

com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Problem deserializing 'setterless' property ("authorities"): no way to handle typed deser with setterless yet
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 246] (through reference chain: com.example.spring.entity.User["authorities"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1887) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.deserializeAndSet(SetterlessProperty.java:113) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:61) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:58:06.273+07:00  INFO 24816 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:58:06.275+07:00 TRACE 24816 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:58:06.275+07:00 DEBUG 24816 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1415fca8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:58:06.276+07:00  INFO 24816 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:58:06.285+07:00  INFO 24816 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:58:46.418+07:00  INFO 1604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 1604 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:58:46.420+07:00  INFO 1604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:58:47.174+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:58:47.174+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:58:47.200+07:00  INFO 1604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:58:47.299+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 119 ms. Found 1 JPA repository interface.
2024-08-06T11:58:47.580+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:58:47.581+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:58:47.596+07:00  INFO 1604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:58:47.600+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 1 MongoDB repository interface.
2024-08-06T11:58:47.609+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:58:47.610+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:58:47.620+07:00  INFO 1604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:58:47.621+07:00  INFO 1604 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:58:47.621+07:00  INFO 1604 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T11:58:48.775+07:00  INFO 1604 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T11:58:48.805+07:00  INFO 1604 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T11:58:48.805+07:00  INFO 1604 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T11:58:48.908+07:00  INFO 1604 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T11:58:48.909+07:00  INFO 1604 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2434 ms
2024-08-06T11:58:49.221+07:00  INFO 1604 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T11:58:49.339+07:00  INFO 1604 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T11:58:49.407+07:00  INFO 1604 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T11:58:49.523+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:58:49.524+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T11:58:49.525+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T11:58:49.526+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:58:49.527+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T11:58:49.528+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T11:58:49.529+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:58:49.530+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T11:58:49.531+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-06T11:58:49.536+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:58:49.536+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25ae1f80
2024-08-06T11:58:49.537+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6f8667bb
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T11:58:49.538+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-06T11:58:49.826+07:00  INFO 1604 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T11:58:49.870+07:00  INFO 1604 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T11:58:50.453+07:00  INFO 1604 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f68eec6
2024-08-06T11:58:50.456+07:00  INFO 1604 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T11:58:50.597+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T11:58:50.597+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T11:58:50.598+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-06T11:58:50.601+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T11:58:50.601+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T11:58:50.602+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T11:58:50.603+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:58:50.603+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T11:58:50.606+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6d5508a5
2024-08-06T11:58:50.606+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6f8667bb`
2024-08-06T11:58:50.609+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T11:58:50.609+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:58:50.609+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:58:50.611+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T11:58:50.612+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:58:50.612+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:58:50.612+07:00 DEBUG 1604 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T11:58:50.613+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7dd7ec56]
2024-08-06T11:58:51.789+07:00  INFO 1604 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T11:58:51.790+07:00 DEBUG 1604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@188bf4d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:58:52.113+07:00 TRACE 1604 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:58:52.113+07:00  INFO 1604 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:58:52.369+07:00  INFO 1604 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T11:58:52.840+07:00  INFO 1604 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T11:58:52.841+07:00  WARN 1604 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T11:58:53.310+07:00  INFO 1604 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@14feab02, com.mongodb.Jep395RecordCodecProvider@5e3934db, com.mongodb.KotlinCodecProvider@7f36b021]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T11:58:53.325+07:00  INFO 1604 --- [Spring_API] [cluster-ClusterId{value='66b1ad8db6a09672fed527ce', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17159500}
2024-08-06T11:58:53.540+07:00  WARN 1604 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T11:58:54.488+07:00  INFO 1604 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T11:58:54.494+07:00  INFO 1604 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 8.519 seconds (process running for 8.939)
2024-08-06T11:58:58.912+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T11:58:58.912+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T11:58:58.913+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T11:58:59.009+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:58:59.011+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:58:59.014+07:00  INFO 1604 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T11:58:59.130+07:00  WARN 1604 --- [Spring_API] [http-nio-8080-exec-1] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Encoded password does not look like BCrypt
2024-08-06T11:58:59.133+07:00 ERROR 1604 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Bad credentials] with root cause

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:62) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T11:59:48.702+07:00  INFO 1604 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T11:59:48.703+07:00 TRACE 1604 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T11:59:48.703+07:00 DEBUG 1604 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@54e4d442] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T11:59:48.704+07:00  INFO 1604 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T11:59:48.712+07:00  INFO 1604 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T11:59:58.768+07:00  INFO 1840 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 1840 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T11:59:58.770+07:00  INFO 1840 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T11:59:59.309+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:59:59.309+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T11:59:59.334+07:00  INFO 1840 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T11:59:59.413+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 1 JPA repository interface.
2024-08-06T11:59:59.650+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:59:59.651+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T11:59:59.662+07:00  INFO 1840 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T11:59:59.665+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T11:59:59.675+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T11:59:59.677+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T11:59:59.685+07:00  INFO 1840 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:59:59.685+07:00  INFO 1840 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T11:59:59.685+07:00  INFO 1840 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-08-06T12:00:00.308+07:00  INFO 1840 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T12:00:00.322+07:00  INFO 1840 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T12:00:00.322+07:00  INFO 1840 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T12:00:00.374+07:00  INFO 1840 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T12:00:00.376+07:00  INFO 1840 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1566 ms
2024-08-06T12:00:00.514+07:00  INFO 1840 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T12:00:00.578+07:00  INFO 1840 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T12:00:00.613+07:00  INFO 1840 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T12:00:00.676+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T12:00:00.676+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T12:00:00.677+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:00:00.678+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T12:00:00.679+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T12:00:00.680+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T12:00:00.681+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T12:00:00.682+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T12:00:00.683+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T12:00:00.686+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57e4b86c
2024-08-06T12:00:00.687+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57e4b86c
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@568f4faa
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T12:00:00.688+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T12:00:00.884+07:00  INFO 1840 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T12:00:00.909+07:00  INFO 1840 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T12:00:01.228+07:00  INFO 1840 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@513fab1e
2024-08-06T12:00:01.230+07:00  INFO 1840 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T12:00:01.313+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T12:00:01.314+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T12:00:01.315+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T12:00:01.316+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T12:00:01.316+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T12:00:01.318+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T12:00:01.318+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T12:00:01.321+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@776e7dfb
2024-08-06T12:00:01.322+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@568f4faa`
2024-08-06T12:00:01.325+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T12:00:01.325+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T12:00:01.325+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:00:01.328+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:00:01.329+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:00:01.329+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:00:01.329+07:00 DEBUG 1840 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:00:01.330+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b3bb287] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ec5aad]
2024-08-06T12:00:02.067+07:00  INFO 1840 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T12:00:02.067+07:00 DEBUG 1840 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b3bb287] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T12:00:02.118+07:00 TRACE 1840 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T12:00:02.118+07:00  INFO 1840 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T12:00:02.287+07:00  INFO 1840 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T12:00:02.685+07:00  INFO 1840 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T12:00:02.686+07:00  WARN 1840 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T12:00:02.938+07:00  INFO 1840 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@779e66e5, com.mongodb.Jep395RecordCodecProvider@4d462edc, com.mongodb.KotlinCodecProvider@312ddc51]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T12:00:02.949+07:00  INFO 1840 --- [Spring_API] [cluster-ClusterId{value='66b1add2f9407c5a51edc498', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15517800}
2024-08-06T12:00:03.114+07:00  WARN 1840 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T12:00:03.892+07:00  INFO 1840 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T12:00:03.899+07:00  INFO 1840 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.494 seconds (process running for 5.862)
2024-08-06T12:00:07.273+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T12:00:07.273+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T12:00:07.274+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T12:00:07.367+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T12:00:07.367+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T12:00:07.371+07:00  INFO 1840 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-06T12:01:33.811+07:00  INFO 1840 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T12:01:33.812+07:00 TRACE 1840 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T12:01:33.812+07:00 DEBUG 1840 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@63f19d1c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T12:01:33.812+07:00  INFO 1840 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T12:01:33.821+07:00  INFO 1840 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T12:01:49.766+07:00  INFO 18124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18124 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T12:01:49.767+07:00  INFO 18124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T12:01:50.335+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T12:01:50.335+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T12:01:50.358+07:00  INFO 18124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T12:01:50.441+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99 ms. Found 1 JPA repository interface.
2024-08-06T12:01:50.664+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T12:01:50.665+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T12:01:50.676+07:00  INFO 18124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T12:01:50.679+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T12:01:50.688+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T12:01:50.689+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T12:01:50.698+07:00  INFO 18124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T12:01:50.698+07:00  INFO 18124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T12:01:50.698+07:00  INFO 18124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T12:01:51.321+07:00  INFO 18124 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T12:01:51.333+07:00  INFO 18124 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T12:01:51.333+07:00  INFO 18124 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T12:01:51.389+07:00  INFO 18124 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T12:01:51.389+07:00  INFO 18124 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1583 ms
2024-08-06T12:01:51.522+07:00  INFO 18124 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T12:01:51.582+07:00  INFO 18124 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T12:01:51.616+07:00  INFO 18124 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T12:01:51.676+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T12:01:51.677+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T12:01:51.678+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T12:01:51.679+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T12:01:51.680+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T12:01:51.681+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T12:01:51.682+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T12:01:51.683+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T12:01:51.686+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T12:01:51.687+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T12:01:51.687+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T12:01:51.688+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T12:01:51.875+07:00  INFO 18124 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T12:01:51.898+07:00  INFO 18124 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T12:01:52.223+07:00  INFO 18124 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T12:01:52.225+07:00  INFO 18124 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T12:01:52.300+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T12:01:52.300+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T12:01:52.300+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T12:01:52.300+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T12:01:52.300+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T12:01:52.301+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T12:01:52.301+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T12:01:52.301+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T12:01:52.301+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T12:01:52.302+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T12:01:52.302+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T12:01:52.303+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T12:01:52.305+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T12:01:52.305+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T12:01:52.308+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T12:01:52.308+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T12:01:52.311+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T12:01:52.312+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T12:01:52.312+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:01:52.315+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T12:01:52.316+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:01:52.316+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:01:52.316+07:00 DEBUG 18124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T12:01:52.317+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T12:01:53.044+07:00  INFO 18124 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T12:01:53.044+07:00 DEBUG 18124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T12:01:53.095+07:00 TRACE 18124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T12:01:53.096+07:00  INFO 18124 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T12:01:53.274+07:00  INFO 18124 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T12:01:53.643+07:00  INFO 18124 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T12:01:53.644+07:00  WARN 18124 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T12:01:53.906+07:00  INFO 18124 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@246f9fa8, com.mongodb.Jep395RecordCodecProvider@4d001a14, com.mongodb.KotlinCodecProvider@7af85b32]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T12:01:53.912+07:00  INFO 18124 --- [Spring_API] [cluster-ClusterId{value='66b1ae416c03872190113191', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16262200}
2024-08-06T12:01:54.086+07:00  WARN 18124 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T12:01:54.784+07:00  INFO 18124 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T12:01:54.790+07:00  INFO 18124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.393 seconds (process running for 5.726)
2024-08-06T12:02:05.564+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T12:02:05.565+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T12:02:05.566+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T12:02:05.693+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T12:02:05.695+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T12:02:05.699+07:00  INFO 18124 --- [Spring_API] [http-nio-8080-exec-1] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T12:02:15.768+07:00  INFO 18124 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T12:02:15.768+07:00 TRACE 18124 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T12:02:15.768+07:00 DEBUG 18124 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@65753fb3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T12:02:15.770+07:00  INFO 18124 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T12:02:15.781+07:00  INFO 18124 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T13:43:05.103+07:00  INFO 788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 788 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T13:43:05.105+07:00  INFO 788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T13:43:05.688+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:43:05.689+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T13:43:05.713+07:00  INFO 788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T13:43:05.830+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 132 ms. Found 1 JPA repository interface.
2024-08-06T13:43:06.104+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:43:06.105+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T13:43:06.116+07:00  INFO 788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T13:43:06.118+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T13:43:06.129+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:43:06.130+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T13:43:06.140+07:00  INFO 788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:43:06.141+07:00  INFO 788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:43:06.141+07:00  INFO 788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T13:43:06.783+07:00  INFO 788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T13:43:06.794+07:00  INFO 788 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T13:43:06.795+07:00  INFO 788 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T13:43:06.845+07:00  INFO 788 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T13:43:06.845+07:00  INFO 788 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1700 ms
2024-08-06T13:43:06.975+07:00  INFO 788 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T13:43:07.039+07:00  INFO 788 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T13:43:07.075+07:00  INFO 788 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T13:43:07.142+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:43:07.143+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:43:07.144+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:43:07.145+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T13:43:07.146+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:43:07.147+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T13:43:07.148+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T13:43:07.149+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T13:43:07.153+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:43:07.154+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:43:07.154+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T13:43:07.155+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T13:43:07.351+07:00  INFO 788 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T13:43:07.374+07:00  INFO 788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T13:43:07.731+07:00  INFO 788 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T13:43:07.733+07:00  INFO 788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T13:43:07.830+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T13:43:07.831+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T13:43:07.831+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T13:43:07.832+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T13:43:07.833+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T13:43:07.833+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T13:43:07.834+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T13:43:07.835+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:43:07.835+07:00 DEBUG 788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:43:07.837+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T13:43:07.837+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T13:43:07.841+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T13:43:07.841+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:43:07.841+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:43:07.843+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:43:07.844+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:43:07.844+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:43:07.844+07:00 DEBUG 788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:43:07.844+07:00 DEBUG 788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T13:43:08.581+07:00  INFO 788 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T13:43:08.581+07:00 DEBUG 788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T13:43:08.665+07:00 TRACE 788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T13:43:08.666+07:00  INFO 788 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:43:08.854+07:00  INFO 788 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T13:43:09.250+07:00  INFO 788 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T13:43:09.251+07:00  WARN 788 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T13:43:09.541+07:00  INFO 788 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@45c5cd9a, com.mongodb.Jep395RecordCodecProvider@858bf8c, com.mongodb.KotlinCodecProvider@30c1447e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T13:43:09.565+07:00  INFO 788 --- [Spring_API] [cluster-ClusterId{value='66b1c5fd00919b199d1d6db5', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27806600}
2024-08-06T13:43:09.745+07:00  WARN 788 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T13:43:10.528+07:00  INFO 788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T13:43:10.534+07:00  INFO 788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.856 seconds (process running for 6.27)
2024-08-06T13:43:15.944+07:00  INFO 788 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T13:43:15.944+07:00  INFO 788 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T13:43:15.946+07:00  INFO 788 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T13:43:16.150+07:00  INFO 788 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T13:43:16.152+07:00  INFO 788 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T13:43:16.193+07:00 ERROR 788 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:failed to lazily initialize a collection: could not initialize proxy - no Session (through reference chain: com.example.spring.entity.User["roles"]) ] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:353) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:223) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:184) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:27) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:120) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserializeWithType(StringCollectionDeserializer.java:268) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:138) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:62) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T13:44:12.337+07:00  INFO 788 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:44:12.338+07:00 TRACE 788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T13:44:12.338+07:00 DEBUG 788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@50750ad7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T13:44:12.339+07:00  INFO 788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T13:44:12.350+07:00  INFO 788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T13:49:14.830+07:00  INFO 18564 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18564 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T13:49:14.833+07:00  INFO 18564 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T13:49:15.459+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:15.459+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T13:49:15.487+07:00  INFO 18564 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T13:49:15.593+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 1 JPA repository interface.
2024-08-06T13:49:15.882+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:15.882+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T13:49:15.893+07:00  INFO 18564 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T13:49:15.896+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T13:49:15.907+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:15.908+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T13:49:15.918+07:00  INFO 18564 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:49:15.919+07:00  INFO 18564 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:49:15.919+07:00  INFO 18564 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T13:49:16.645+07:00  INFO 18564 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T13:49:16.657+07:00  INFO 18564 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T13:49:16.658+07:00  INFO 18564 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T13:49:16.709+07:00  INFO 18564 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T13:49:16.710+07:00  INFO 18564 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1833 ms
2024-08-06T13:49:16.868+07:00  INFO 18564 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T13:49:16.942+07:00  INFO 18564 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T13:49:16.974+07:00  INFO 18564 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:49:17.044+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:17.045+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:17.046+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:49:17.047+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T13:49:17.048+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T13:49:17.049+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:49:17.050+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:49:17.051+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:17.052+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:49:17.053+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:49:17.054+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:49:17.054+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:49:17.054+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:49:17.054+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T13:49:17.054+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T13:49:17.057+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:49:17.058+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:49:17.059+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T13:49:17.059+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T13:49:17.060+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T13:49:17.257+07:00  INFO 18564 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T13:49:17.278+07:00  INFO 18564 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T13:49:17.612+07:00  INFO 18564 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T13:49:17.613+07:00  INFO 18564 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T13:49:17.698+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T13:49:17.699+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T13:49:17.700+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T13:49:17.700+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T13:49:17.701+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T13:49:17.702+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:49:17.702+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:49:17.704+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T13:49:17.704+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T13:49:17.706+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:17.706+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:17.706+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:17.708+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:17.709+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:17.709+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:17.709+07:00 DEBUG 18564 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:17.710+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T13:49:18.450+07:00  INFO 18564 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T13:49:18.451+07:00 DEBUG 18564 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@272f5373]
2024-08-06T13:49:18.513+07:00 TRACE 18564 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@272f5373] for TypeConfiguration
2024-08-06T13:49:18.513+07:00  INFO 18564 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:49:18.720+07:00  INFO 18564 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T13:49:19.104+07:00  INFO 18564 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T13:49:19.104+07:00  WARN 18564 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T13:49:19.401+07:00  INFO 18564 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2fb5e706, com.mongodb.Jep395RecordCodecProvider@4a35aed6, com.mongodb.KotlinCodecProvider@54c76c23]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T13:49:19.417+07:00  INFO 18564 --- [Spring_API] [cluster-ClusterId{value='66b1c76fa217510423ddb64e', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19640800}
2024-08-06T13:49:19.634+07:00  WARN 18564 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T13:49:20.792+07:00  INFO 18564 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T13:49:20.799+07:00  INFO 18564 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.431 seconds (process running for 6.891)
2024-08-06T13:49:23.204+07:00  INFO 18564 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:49:23.205+07:00 TRACE 18564 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@272f5373] for TypeConfiguration
2024-08-06T13:49:23.205+07:00 DEBUG 18564 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@398560c2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@272f5373]
2024-08-06T13:49:23.206+07:00  INFO 18564 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T13:49:23.213+07:00  INFO 18564 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T13:49:35.628+07:00  INFO 15544 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 15544 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T13:49:35.630+07:00  INFO 15544 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T13:49:36.183+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:36.183+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T13:49:36.203+07:00  INFO 15544 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T13:49:36.273+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 1 JPA repository interface.
2024-08-06T13:49:36.504+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:36.504+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T13:49:36.515+07:00  INFO 15544 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T13:49:36.518+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T13:49:36.528+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:49:36.529+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T13:49:36.538+07:00  INFO 15544 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:49:36.538+07:00  INFO 15544 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:49:36.538+07:00  INFO 15544 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T13:49:37.175+07:00  INFO 15544 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T13:49:37.193+07:00  INFO 15544 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T13:49:37.194+07:00  INFO 15544 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T13:49:37.243+07:00  INFO 15544 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T13:49:37.244+07:00  INFO 15544 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1572 ms
2024-08-06T13:49:37.375+07:00  INFO 15544 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T13:49:37.434+07:00  INFO 15544 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T13:49:37.456+07:00  INFO 15544 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:49:37.511+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:49:37.512+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:49:37.513+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:37.514+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T13:49:37.515+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:49:37.516+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:49:37.517+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T13:49:37.518+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:49:37.519+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T13:49:37.519+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T13:49:37.519+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T13:49:37.522+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:49:37.522+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T13:49:37.523+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T13:49:37.524+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T13:49:37.704+07:00  INFO 15544 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T13:49:37.721+07:00  INFO 15544 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T13:49:37.972+07:00  INFO 15544 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T13:49:37.975+07:00  INFO 15544 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T13:49:38.043+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T13:49:38.043+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T13:49:38.043+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T13:49:38.044+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T13:49:38.045+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T13:49:38.045+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T13:49:38.045+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T13:49:38.046+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:49:38.047+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:49:38.049+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T13:49:38.049+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T13:49:38.052+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:38.052+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:38.052+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:38.054+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:49:38.055+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:38.055+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:38.055+07:00 DEBUG 15544 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:49:38.055+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T13:49:38.704+07:00  INFO 15544 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T13:49:38.704+07:00 DEBUG 15544 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@272f5373]
2024-08-06T13:49:38.765+07:00 TRACE 15544 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@272f5373] for TypeConfiguration
2024-08-06T13:49:38.766+07:00  INFO 15544 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:49:38.946+07:00  INFO 15544 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T13:49:39.311+07:00  INFO 15544 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T13:49:39.311+07:00  WARN 15544 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T13:49:39.555+07:00  INFO 15544 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2fb5e706, com.mongodb.Jep395RecordCodecProvider@4a35aed6, com.mongodb.KotlinCodecProvider@54c76c23]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T13:49:39.569+07:00  INFO 15544 --- [Spring_API] [cluster-ClusterId{value='66b1c783a19178783acc34f2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17174900}
2024-08-06T13:49:39.749+07:00  WARN 15544 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T13:49:40.517+07:00  INFO 15544 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T13:49:40.524+07:00  INFO 15544 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.257 seconds (process running for 5.605)
2024-08-06T13:50:12.258+07:00  INFO 15544 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T13:50:12.258+07:00  INFO 15544 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T13:50:12.259+07:00  INFO 15544 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T13:50:12.478+07:00  INFO 15544 --- [Spring_API] [http-nio-8080-exec-3] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T13:50:12.478+07:00  INFO 15544 --- [Spring_API] [http-nio-8080-exec-3] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T13:50:12.528+07:00 ERROR 15544 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:failed to lazily initialize a collection: could not initialize proxy - no Session (through reference chain: com.example.spring.entity.User["roles"]) ] with root cause

org.hibernate.LazyInitializationException: failed to lazily initialize a collection: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:148) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.collection.spi.PersistentBag.size(PersistentBag.java:353) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:223) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:184) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:27) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:120) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserializeWithType(StringCollectionDeserializer.java:268) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:138) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:310) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:48) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:62) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T13:50:24.146+07:00  INFO 15544 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:50:24.148+07:00 TRACE 15544 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@272f5373] for TypeConfiguration
2024-08-06T13:50:24.148+07:00 DEBUG 15544 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c043095] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@272f5373]
2024-08-06T13:50:24.149+07:00  INFO 15544 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T13:50:24.157+07:00  INFO 15544 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T13:52:16.852+07:00  INFO 26188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26188 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T13:52:16.854+07:00  INFO 26188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T13:52:17.424+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:52:17.424+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T13:52:17.446+07:00  INFO 26188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T13:52:17.535+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T13:52:17.778+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:52:17.779+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T13:52:17.791+07:00  INFO 26188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T13:52:17.794+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T13:52:17.803+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T13:52:17.804+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T13:52:17.812+07:00  INFO 26188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:52:17.812+07:00  INFO 26188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T13:52:17.813+07:00  INFO 26188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T13:52:18.502+07:00  INFO 26188 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T13:52:18.520+07:00  INFO 26188 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T13:52:18.520+07:00  INFO 26188 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T13:52:18.579+07:00  INFO 26188 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T13:52:18.579+07:00  INFO 26188 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1685 ms
2024-08-06T13:52:18.725+07:00  INFO 26188 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T13:52:18.776+07:00  INFO 26188 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T13:52:18.806+07:00  INFO 26188 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T13:52:18.876+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T13:52:18.876+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T13:52:18.876+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T13:52:18.876+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T13:52:18.877+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T13:52:18.878+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T13:52:18.879+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T13:52:18.880+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T13:52:18.881+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:52:18.882+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:52:18.883+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T13:52:18.884+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T13:52:18.887+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T13:52:18.888+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T13:52:18.888+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T13:52:18.889+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T13:52:19.113+07:00  INFO 26188 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T13:52:19.133+07:00  INFO 26188 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T13:52:19.475+07:00  INFO 26188 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T13:52:19.476+07:00  INFO 26188 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T13:52:19.560+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T13:52:19.561+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T13:52:19.561+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T13:52:19.562+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T13:52:19.562+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T13:52:19.562+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T13:52:19.563+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:52:19.563+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T13:52:19.565+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T13:52:19.565+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T13:52:19.568+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T13:52:19.568+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:52:19.568+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T13:52:19.570+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:52:19.571+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:52:19.571+07:00 DEBUG 26188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T13:52:19.572+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T13:52:20.352+07:00  INFO 26188 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T13:52:20.353+07:00 DEBUG 26188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T13:52:20.408+07:00 TRACE 26188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T13:52:20.409+07:00  INFO 26188 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:52:20.615+07:00  INFO 26188 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T13:52:21.044+07:00  INFO 26188 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T13:52:21.045+07:00  WARN 26188 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T13:52:21.184+07:00  INFO 26188 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76a41af0, com.mongodb.Jep395RecordCodecProvider@7a1148f2, com.mongodb.KotlinCodecProvider@641bd93e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T13:52:21.194+07:00  INFO 26188 --- [Spring_API] [cluster-ClusterId{value='66b1c8251f49644472e43104', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17893100}
2024-08-06T13:52:21.559+07:00  WARN 26188 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T13:52:22.387+07:00  INFO 26188 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T13:52:22.393+07:00  INFO 26188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.932 seconds (process running for 6.347)
2024-08-06T13:52:35.942+07:00  INFO 26188 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T13:52:35.942+07:00  INFO 26188 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T13:52:35.943+07:00  INFO 26188 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T13:52:36.037+07:00  INFO 26188 --- [Spring_API] [http-nio-8080-exec-1] c.e.spring.controller.UserController     : User UserController User(id=252, name=mod, username=moo, email=mumu@mail.com, password=$2a$10$OdL98nfEBJZ/jYJRBo1PiOS1IKAIvFEtdXXiui3LfNzHRlsiHpa1e, createdAt=2024-08-05T17:46:35.277, roles=[ROLE_MODERATOR])
2024-08-06T13:55:15.657+07:00  WARN 26188 --- [Spring_API] [http-nio-8080-exec-5] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-08-06T13:56:57.933+07:00  INFO 26188 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T13:56:57.934+07:00 TRACE 26188 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T13:56:57.934+07:00 DEBUG 26188 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5300979c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T13:56:57.934+07:00  INFO 26188 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T13:56:57.941+07:00  INFO 26188 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:18:46.647+07:00  INFO 26144 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26144 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:18:46.650+07:00  INFO 26144 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:18:47.277+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:18:47.277+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:18:47.305+07:00  INFO 26144 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:18:47.423+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 136 ms. Found 1 JPA repository interface.
2024-08-06T14:18:47.719+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:18:47.719+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:18:47.731+07:00  INFO 26144 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:18:47.734+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T14:18:47.746+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:18:47.747+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:18:47.759+07:00  INFO 26144 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:18:47.759+07:00  INFO 26144 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:18:47.759+07:00  INFO 26144 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T14:18:48.443+07:00  INFO 26144 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:18:48.456+07:00  INFO 26144 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:18:48.456+07:00  INFO 26144 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:18:48.515+07:00  INFO 26144 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:18:48.516+07:00  INFO 26144 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1820 ms
2024-08-06T14:18:48.727+07:00  INFO 26144 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:18:48.796+07:00  INFO 26144 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:18:48.836+07:00  INFO 26144 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:18:48.908+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:18:48.910+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:18:48.910+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:18:48.910+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:18:48.911+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:18:48.912+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:18:48.913+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:18:48.914+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:18:48.915+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:18:48.916+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:18:48.917+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:18:48.921+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:18:48.921+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:18:48.922+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T14:18:48.923+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T14:18:48.923+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:18:48.924+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:18:49.145+07:00  INFO 26144 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:18:49.168+07:00  INFO 26144 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:18:49.510+07:00  INFO 26144 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T14:18:49.511+07:00  INFO 26144 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T14:18:49.590+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T14:18:49.591+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:18:49.591+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:18:49.591+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:18:49.594+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:18:49.594+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:18:49.598+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T14:18:49.598+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T14:18:49.600+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:18:49.600+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:18:49.600+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:18:49.603+07:00 DEBUG 26144 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:18:49.604+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T14:18:50.365+07:00  INFO 26144 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:18:50.366+07:00 DEBUG 26144 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:18:50.433+07:00 TRACE 26144 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:18:50.433+07:00  INFO 26144 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:18:50.621+07:00  INFO 26144 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:18:51.140+07:00  INFO 26144 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:18:51.140+07:00  WARN 26144 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:18:51.334+07:00  INFO 26144 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1435b17, com.mongodb.Jep395RecordCodecProvider@2b3b25ad, com.mongodb.KotlinCodecProvider@f507d33]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:18:51.350+07:00  INFO 26144 --- [Spring_API] [cluster-ClusterId{value='66b1ce5b93a07b3fbb2abb40', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19279500}
2024-08-06T14:18:51.724+07:00  WARN 26144 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:18:52.487+07:00  INFO 26144 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:18:52.492+07:00  INFO 26144 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.344 seconds (process running for 7.007)
2024-08-06T14:18:57.401+07:00  INFO 26144 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:18:57.401+07:00  INFO 26144 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:18:57.403+07:00  INFO 26144 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T14:18:57.442+07:00  WARN 26144 --- [Spring_API] [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; For input string: "all"]
2024-08-06T14:19:05.629+07:00  INFO 26144 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:19:05.636+07:00 TRACE 26144 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:19:05.636+07:00 DEBUG 26144 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5de0b3a8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:19:05.637+07:00  INFO 26144 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:19:05.663+07:00  INFO 26144 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:19:24.179+07:00  INFO 4680 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 4680 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:19:24.182+07:00  INFO 4680 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:19:24.805+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:19:24.806+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:19:24.832+07:00  INFO 4680 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:19:24.959+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 146 ms. Found 1 JPA repository interface.
2024-08-06T14:19:25.219+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:19:25.219+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:19:25.230+07:00  INFO 4680 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:19:25.235+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T14:19:25.248+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:19:25.249+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:19:25.260+07:00  INFO 4680 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:19:25.260+07:00  INFO 4680 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:19:25.261+07:00  INFO 4680 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T14:19:25.918+07:00  INFO 4680 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:19:25.929+07:00  INFO 4680 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:19:25.929+07:00  INFO 4680 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:19:25.980+07:00  INFO 4680 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:19:25.980+07:00  INFO 4680 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1746 ms
2024-08-06T14:19:26.113+07:00  INFO 4680 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:19:26.182+07:00  INFO 4680 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:19:26.222+07:00  INFO 4680 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:19:26.295+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:19:26.296+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:19:26.297+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:19:26.298+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:19:26.299+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:19:26.300+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:19:26.301+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:19:26.302+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:19:26.305+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:19:26.305+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:19:26.306+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:19:26.307+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:19:26.545+07:00  INFO 4680 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:19:26.567+07:00  INFO 4680 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:19:26.899+07:00  INFO 4680 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T14:19:26.901+07:00  INFO 4680 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:19:26.973+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T14:19:26.974+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T14:19:26.974+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T14:19:26.974+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T14:19:26.974+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T14:19:26.974+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T14:19:26.975+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T14:19:26.975+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T14:19:26.975+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T14:19:26.976+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:19:26.977+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:19:26.978+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:19:26.979+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:19:26.979+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:19:26.981+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T14:19:26.982+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T14:19:26.984+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:19:26.984+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:19:26.984+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:19:26.986+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:19:26.987+07:00 DEBUG 4680 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:19:26.988+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T14:19:27.737+07:00  INFO 4680 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:19:27.737+07:00 DEBUG 4680 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T14:19:27.796+07:00 TRACE 4680 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T14:19:27.796+07:00  INFO 4680 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:19:27.977+07:00  INFO 4680 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:19:28.365+07:00  INFO 4680 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:19:28.366+07:00  WARN 4680 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:19:28.517+07:00  INFO 4680 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2b3b25ad, com.mongodb.Jep395RecordCodecProvider@f507d33, com.mongodb.KotlinCodecProvider@1fc02a84]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:19:28.530+07:00  INFO 4680 --- [Spring_API] [cluster-ClusterId{value='66b1ce800560e13c4bc4f31a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21266000}
2024-08-06T14:19:28.873+07:00  WARN 4680 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:19:29.621+07:00  INFO 4680 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:19:29.628+07:00  INFO 4680 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.873 seconds (process running for 6.398)
2024-08-06T14:19:39.230+07:00  INFO 4680 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:19:39.231+07:00  INFO 4680 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:19:39.233+07:00  INFO 4680 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T14:21:07.445+07:00  INFO 4680 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:21:07.446+07:00 TRACE 4680 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T14:21:07.446+07:00 DEBUG 4680 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e2a39a3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T14:21:07.447+07:00  INFO 4680 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:21:07.453+07:00  INFO 4680 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:48:50.492+07:00  INFO 18108 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18108 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:48:50.494+07:00  INFO 18108 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:48:51.143+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:48:51.143+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:48:51.168+07:00  INFO 18108 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:48:51.281+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 129 ms. Found 1 JPA repository interface.
2024-08-06T14:48:51.553+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:48:51.553+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:48:51.566+07:00  INFO 18108 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:48:51.569+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T14:48:51.579+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:48:51.580+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:48:51.591+07:00  INFO 18108 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:48:51.592+07:00  INFO 18108 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:48:51.592+07:00  INFO 18108 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T14:48:52.365+07:00  INFO 18108 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:48:52.385+07:00  INFO 18108 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:48:52.385+07:00  INFO 18108 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:48:52.441+07:00  INFO 18108 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:48:52.442+07:00  INFO 18108 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1904 ms
2024-08-06T14:48:52.597+07:00  INFO 18108 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:48:52.668+07:00  INFO 18108 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:48:52.699+07:00  INFO 18108 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:48:52.775+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:48:52.775+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:48:52.776+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:48:52.777+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:48:52.778+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:48:52.779+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:48:52.780+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:48:52.781+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:48:52.782+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:48:52.783+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:48:52.784+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:48:52.787+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:48:52.787+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:48:52.788+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:48:52.789+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:48:52.986+07:00  INFO 18108 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:48:53.009+07:00  INFO 18108 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:48:53.361+07:00  INFO 18108 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T14:48:53.363+07:00  INFO 18108 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:48:53.440+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T14:48:53.441+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T14:48:53.443+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:48:53.443+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:48:53.443+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:48:53.445+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:48:53.445+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:48:53.447+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T14:48:53.447+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T14:48:53.449+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:48:53.449+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:48:53.449+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:48:53.452+07:00 DEBUG 18108 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:48:53.453+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T14:48:54.196+07:00  INFO 18108 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:48:54.197+07:00 DEBUG 18108 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T14:48:54.264+07:00 TRACE 18108 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T14:48:54.264+07:00  INFO 18108 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:48:54.461+07:00  INFO 18108 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:48:54.849+07:00  INFO 18108 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:48:54.849+07:00  WARN 18108 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:48:54.979+07:00  INFO 18108 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@62d10834, com.mongodb.Jep395RecordCodecProvider@34f4fd04, com.mongodb.KotlinCodecProvider@445265b0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:48:55.010+07:00  INFO 18108 --- [Spring_API] [cluster-ClusterId{value='66b1d566b7b38c20387ea365', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31725000}
2024-08-06T14:48:55.416+07:00  WARN 18108 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:48:56.227+07:00  INFO 18108 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:48:56.240+07:00  INFO 18108 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.151 seconds (process running for 6.594)
2024-08-06T14:49:08.415+07:00  INFO 18108 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:49:08.416+07:00  INFO 18108 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:49:08.417+07:00  INFO 18108 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T14:49:36.355+07:00  INFO 18108 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:49:36.356+07:00 TRACE 18108 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T14:49:36.356+07:00 DEBUG 18108 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@13d6f8b0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T14:49:36.357+07:00  INFO 18108 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:49:36.365+07:00  INFO 18108 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:50:40.335+07:00  INFO 17476 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 17476 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:50:40.337+07:00  INFO 17476 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:50:40.870+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:50:40.870+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:50:40.890+07:00  INFO 17476 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:50:40.980+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T14:50:41.208+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:50:41.208+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:50:41.219+07:00  INFO 17476 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:50:41.221+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T14:50:41.230+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:50:41.231+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:50:41.240+07:00  INFO 17476 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:50:41.241+07:00  INFO 17476 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:50:41.241+07:00  INFO 17476 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T14:50:41.848+07:00  INFO 17476 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:50:41.875+07:00  INFO 17476 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:50:41.875+07:00  INFO 17476 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:50:41.929+07:00  INFO 17476 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:50:41.929+07:00  INFO 17476 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1555 ms
2024-08-06T14:50:42.092+07:00  INFO 17476 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:50:42.154+07:00  INFO 17476 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:50:42.188+07:00  INFO 17476 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:50:42.248+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:50:42.249+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:50:42.250+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:50:42.251+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:50:42.252+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:50:42.253+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:50:42.254+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:50:42.255+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:50:42.256+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:50:42.260+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:50:42.260+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T14:50:42.261+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:50:42.262+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T14:50:42.262+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:50:42.262+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:50:42.472+07:00  INFO 17476 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:50:42.496+07:00  INFO 17476 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:50:42.813+07:00  INFO 17476 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T14:50:42.814+07:00  INFO 17476 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:50:42.882+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T14:50:42.883+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T14:50:42.884+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:50:42.885+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:50:42.885+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:50:42.886+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:50:42.886+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:50:42.889+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T14:50:42.889+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T14:50:42.892+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:50:42.892+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:50:42.892+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:50:42.894+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:50:42.895+07:00 DEBUG 17476 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:50:42.896+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T14:50:43.626+07:00  INFO 17476 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:50:43.626+07:00 DEBUG 17476 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:50:43.681+07:00 TRACE 17476 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:50:43.681+07:00  INFO 17476 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:50:43.850+07:00  INFO 17476 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:50:44.240+07:00  INFO 17476 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:50:44.240+07:00  WARN 17476 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:50:44.363+07:00  INFO 17476 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:50:44.379+07:00  INFO 17476 --- [Spring_API] [cluster-ClusterId{value='66b1d5d4dda9b3329da3b769', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20617900}
2024-08-06T14:50:44.689+07:00  WARN 17476 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:50:45.380+07:00  INFO 17476 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:50:45.387+07:00  INFO 17476 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.426 seconds (process running for 5.764)
2024-08-06T14:50:51.637+07:00  INFO 17476 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:50:51.637+07:00  INFO 17476 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:50:51.638+07:00  INFO 17476 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T14:51:23.568+07:00  INFO 17476 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:51:23.569+07:00 TRACE 17476 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:51:23.569+07:00 DEBUG 17476 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6976a185] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:51:23.570+07:00  INFO 17476 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:51:23.576+07:00  INFO 17476 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:53:41.276+07:00  INFO 26724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26724 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:53:41.278+07:00  INFO 26724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:53:41.826+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:53:41.826+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:53:41.848+07:00  INFO 26724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:53:41.937+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 104 ms. Found 1 JPA repository interface.
2024-08-06T14:53:42.170+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:53:42.171+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:53:42.182+07:00  INFO 26724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:53:42.186+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T14:53:42.196+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:53:42.197+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:53:42.210+07:00  INFO 26724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:53:42.210+07:00  INFO 26724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:53:42.210+07:00  INFO 26724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T14:53:42.873+07:00  INFO 26724 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:53:42.888+07:00  INFO 26724 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:53:42.889+07:00  INFO 26724 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:53:42.944+07:00  INFO 26724 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:53:42.945+07:00  INFO 26724 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1624 ms
2024-08-06T14:53:43.088+07:00  INFO 26724 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:53:43.122+07:00  INFO 26724 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:53:43.145+07:00  INFO 26724 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:53:43.203+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T14:53:43.204+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:53:43.205+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:53:43.206+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:53:43.207+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:53:43.208+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:53:43.209+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:53:43.210+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:53:43.211+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:53:43.212+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:53:43.216+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:53:43.216+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T14:53:43.216+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T14:53:43.217+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T14:53:43.217+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T14:53:43.217+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T14:53:43.217+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T14:53:43.218+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:53:43.218+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T14:53:43.218+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:53:43.218+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:53:43.384+07:00  INFO 26724 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:53:43.401+07:00  INFO 26724 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:53:43.658+07:00  INFO 26724 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T14:53:43.660+07:00  INFO 26724 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T14:53:43.725+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T14:53:43.726+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T14:53:43.727+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:53:43.727+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:53:43.727+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:53:43.729+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:53:43.729+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:53:43.731+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T14:53:43.731+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T14:53:43.734+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:53:43.734+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:53:43.734+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:53:43.736+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:53:43.737+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:53:43.737+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:53:43.737+07:00 DEBUG 26724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:53:43.737+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T14:53:44.400+07:00  INFO 26724 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:53:44.401+07:00 DEBUG 26724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:53:44.456+07:00 TRACE 26724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:53:44.457+07:00  INFO 26724 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:53:44.647+07:00  INFO 26724 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:53:45.024+07:00  INFO 26724 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:53:45.024+07:00  WARN 26724 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:53:45.177+07:00  INFO 26724 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:53:45.186+07:00  INFO 26724 --- [Spring_API] [cluster-ClusterId{value='66b1d689be1db05c418e385a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19622600}
2024-08-06T14:53:45.525+07:00  WARN 26724 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:53:46.287+07:00  INFO 26724 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:53:46.293+07:00  INFO 26724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.413 seconds (process running for 5.763)
2024-08-06T14:53:52.956+07:00  INFO 26724 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:53:52.957+07:00  INFO 26724 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:53:52.958+07:00  INFO 26724 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T14:53:59.694+07:00  WARN 26724 --- [Spring_API] [http-nio-8080-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'page' for method parameter type int is not present]
2024-08-06T14:54:07.298+07:00  WARN 26724 --- [Spring_API] [http-nio-8080-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'page' for method parameter type int is not present]
2024-08-06T14:55:35.678+07:00  INFO 26724 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:55:35.679+07:00 TRACE 26724 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T14:55:35.679+07:00 DEBUG 26724 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71aa8a88] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T14:55:35.679+07:00  INFO 26724 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:55:35.690+07:00  INFO 26724 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T14:55:54.563+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 14396 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T14:55:54.565+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T14:55:55.144+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:55:55.144+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T14:55:55.165+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T14:55:55.255+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T14:55:55.496+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:55:55.497+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T14:55:55.508+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T14:55:55.511+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T14:55:55.520+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T14:55:55.521+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T14:55:55.532+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:55:55.532+07:00  INFO 14396 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T14:55:55.532+07:00  INFO 14396 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-08-06T14:55:56.275+07:00  INFO 14396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T14:55:56.289+07:00  INFO 14396 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T14:55:56.289+07:00  INFO 14396 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T14:55:56.347+07:00  INFO 14396 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T14:55:56.348+07:00  INFO 14396 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1740 ms
2024-08-06T14:55:56.498+07:00  INFO 14396 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T14:55:56.554+07:00  INFO 14396 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T14:55:56.582+07:00  INFO 14396 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T14:55:56.658+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:55:56.659+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:55:56.660+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T14:55:56.661+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T14:55:56.662+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T14:55:56.663+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T14:55:56.664+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T14:55:56.665+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T14:55:56.666+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T14:55:56.667+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T14:55:56.671+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T14:55:56.671+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T14:55:56.672+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T14:55:56.673+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T14:55:56.673+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T14:55:56.847+07:00  INFO 14396 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T14:55:56.866+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T14:55:57.202+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T14:55:57.204+07:00  INFO 14396 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T14:55:57.286+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T14:55:57.287+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T14:55:57.287+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T14:55:57.287+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T14:55:57.287+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T14:55:57.287+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T14:55:57.288+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T14:55:57.288+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T14:55:57.288+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T14:55:57.289+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T14:55:57.289+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T14:55:57.289+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T14:55:57.290+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:55:57.290+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T14:55:57.292+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T14:55:57.292+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T14:55:57.295+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T14:55:57.295+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:55:57.295+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T14:55:57.297+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:55:57.297+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:55:57.297+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T14:55:57.297+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:55:57.297+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:55:57.298+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T14:55:57.298+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:55:57.298+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:55:57.298+07:00 DEBUG 14396 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T14:55:57.299+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T14:55:58.064+07:00  INFO 14396 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T14:55:58.064+07:00 DEBUG 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T14:55:58.119+07:00 TRACE 14396 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T14:55:58.120+07:00  INFO 14396 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:55:58.317+07:00  INFO 14396 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T14:55:58.669+07:00  INFO 14396 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T14:55:58.670+07:00  WARN 14396 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T14:55:58.800+07:00  INFO 14396 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T14:55:58.815+07:00  INFO 14396 --- [Spring_API] [cluster-ClusterId{value='66b1d70e754f291e8c08b248', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18969800}
2024-08-06T14:55:59.206+07:00  WARN 14396 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T14:55:59.954+07:00  INFO 14396 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T14:55:59.959+07:00  INFO 14396 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.76 seconds (process running for 6.117)
2024-08-06T14:56:04.699+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T14:56:04.699+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T14:56:04.700+07:00  INFO 14396 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T14:56:25.337+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T14:56:25.338+07:00 TRACE 14396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T14:56:25.338+07:00 DEBUG 14396 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6f29f1dc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T14:56:25.339+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T14:56:25.348+07:00  INFO 14396 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:05:14.176+07:00  INFO 4200 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 4200 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:05:14.178+07:00  INFO 4200 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:05:14.805+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:05:14.805+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:05:14.840+07:00  INFO 4200 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:05:14.950+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 136 ms. Found 1 JPA repository interface.
2024-08-06T15:05:15.216+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:05:15.217+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:05:15.228+07:00  INFO 4200 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:05:15.231+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T15:05:15.243+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:05:15.244+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:05:15.255+07:00  INFO 4200 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:05:15.255+07:00  INFO 4200 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:05:15.256+07:00  INFO 4200 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:05:15.956+07:00  INFO 4200 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:05:15.970+07:00  INFO 4200 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:05:15.970+07:00  INFO 4200 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:05:16.026+07:00  INFO 4200 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:05:16.026+07:00  INFO 4200 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1807 ms
2024-08-06T15:05:16.161+07:00  INFO 4200 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:05:16.227+07:00  INFO 4200 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:05:16.263+07:00  INFO 4200 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:05:16.329+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:05:16.330+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:05:16.331+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:05:16.332+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:05:16.333+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:05:16.334+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T15:05:16.335+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T15:05:16.340+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T15:05:16.340+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T15:05:16.341+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@23b71d24
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T15:05:16.342+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T15:05:16.577+07:00  INFO 4200 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:05:16.600+07:00  INFO 4200 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:05:16.934+07:00  INFO 4200 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@492fa72a
2024-08-06T15:05:16.936+07:00  INFO 4200 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:05:17.016+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T15:05:17.016+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T15:05:17.016+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T15:05:17.016+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T15:05:17.016+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T15:05:17.017+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T15:05:17.017+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T15:05:17.017+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T15:05:17.017+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T15:05:17.018+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:05:17.018+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:05:17.018+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:05:17.020+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:05:17.020+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:05:17.024+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@17332039
2024-08-06T15:05:17.024+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23b71d24`
2024-08-06T15:05:17.026+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:05:17.026+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:05:17.026+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:05:17.028+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:05:17.029+07:00 DEBUG 4200 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:05:17.030+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b3bb287]
2024-08-06T15:05:17.763+07:00  INFO 4200 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:05:17.764+07:00 DEBUG 4200 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T15:05:17.821+07:00 TRACE 4200 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T15:05:17.821+07:00  INFO 4200 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:05:18.012+07:00  INFO 4200 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:05:18.398+07:00  INFO 4200 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:05:18.399+07:00  WARN 4200 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:05:18.566+07:00  INFO 4200 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:05:18.583+07:00  INFO 4200 --- [Spring_API] [cluster-ClusterId{value='66b1d93e8b843f30d1fd6b15', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26275000}
2024-08-06T15:05:18.941+07:00  WARN 4200 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:05:19.700+07:00  INFO 4200 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:05:19.706+07:00  INFO 4200 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.958 seconds (process running for 6.496)
2024-08-06T15:05:26.828+07:00  INFO 4200 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:05:26.828+07:00  INFO 4200 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:05:26.829+07:00  INFO 4200 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:11:00.545+07:00  INFO 4200 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:11:00.546+07:00 TRACE 4200 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T15:11:00.546+07:00 DEBUG 4200 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c45757f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T15:11:00.547+07:00  INFO 4200 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:11:00.556+07:00  INFO 4200 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:11:26.598+07:00  INFO 10096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 10096 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:11:26.600+07:00  INFO 10096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:11:27.265+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:11:27.266+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:11:27.293+07:00  INFO 10096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:11:27.397+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 1 JPA repository interface.
2024-08-06T15:11:27.672+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:11:27.672+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:11:27.685+07:00  INFO 10096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:11:27.689+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T15:11:27.701+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:11:27.703+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:11:27.714+07:00  INFO 10096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:11:27.715+07:00  INFO 10096 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:11:27.715+07:00  INFO 10096 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:11:28.390+07:00  INFO 10096 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:11:28.403+07:00  INFO 10096 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:11:28.404+07:00  INFO 10096 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:11:28.452+07:00  INFO 10096 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:11:28.453+07:00  INFO 10096 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1806 ms
2024-08-06T15:11:28.579+07:00  INFO 10096 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:11:28.650+07:00  INFO 10096 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:11:28.693+07:00  INFO 10096 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:11:28.775+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:11:28.776+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:11:28.777+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:11:28.778+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:11:28.779+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:11:28.780+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:11:28.785+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:11:28.786+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:11:28.787+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T15:11:28.982+07:00  INFO 10096 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:11:29.005+07:00  INFO 10096 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:11:29.329+07:00  INFO 10096 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T15:11:29.330+07:00  INFO 10096 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T15:11:29.415+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T15:11:29.416+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T15:11:29.417+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:11:29.417+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:11:29.417+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:11:29.418+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:11:29.418+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:11:29.421+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T15:11:29.421+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T15:11:29.424+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:11:29.424+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:11:29.424+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:11:29.427+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:11:29.428+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:11:29.428+07:00 DEBUG 10096 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:11:29.428+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T15:11:30.158+07:00  INFO 10096 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:11:30.159+07:00 DEBUG 10096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T15:11:30.220+07:00 TRACE 10096 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T15:11:30.221+07:00  INFO 10096 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:11:30.418+07:00  INFO 10096 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:11:30.827+07:00  INFO 10096 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:11:30.828+07:00  WARN 10096 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:11:30.966+07:00  INFO 10096 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:11:30.979+07:00  INFO 10096 --- [Spring_API] [cluster-ClusterId{value='66b1dab24a2d582ee656f12f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18106200}
2024-08-06T15:11:31.328+07:00  WARN 10096 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:11:32.117+07:00  INFO 10096 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:11:32.123+07:00  INFO 10096 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.894 seconds (process running for 6.265)
2024-08-06T15:11:38.560+07:00  INFO 10096 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:11:38.560+07:00  INFO 10096 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:11:38.561+07:00  INFO 10096 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:11:58.403+07:00  INFO 10096 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:11:58.403+07:00 TRACE 10096 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T15:11:58.404+07:00 DEBUG 10096 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@693b0aff] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T15:11:58.405+07:00  INFO 10096 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:11:58.415+07:00  INFO 10096 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:12:29.796+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25608 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:12:29.797+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:12:30.348+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:12:30.349+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:12:30.370+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:12:30.453+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 98 ms. Found 1 JPA repository interface.
2024-08-06T15:12:30.682+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:12:30.682+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:12:30.694+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:12:30.697+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T15:12:30.706+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:12:30.708+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:12:30.716+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:12:30.717+07:00  INFO 25608 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:12:30.717+07:00  INFO 25608 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:12:31.392+07:00  INFO 25608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:12:31.408+07:00  INFO 25608 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:12:31.408+07:00  INFO 25608 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:12:31.463+07:00  INFO 25608 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:12:31.464+07:00  INFO 25608 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1626 ms
2024-08-06T15:12:31.595+07:00  INFO 25608 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:12:31.640+07:00  INFO 25608 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:12:31.667+07:00  INFO 25608 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:12:31.724+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T15:12:31.724+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T15:12:31.724+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T15:12:31.724+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:12:31.725+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:12:31.726+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:12:31.727+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:12:31.728+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:12:31.729+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:12:31.730+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:12:31.737+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T15:12:31.737+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T15:12:31.738+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@b3857e2
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25a290ee
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4052913c
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@99c4993
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T15:12:31.739+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T15:12:31.936+07:00  INFO 25608 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:12:31.953+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:12:32.199+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7507d96c
2024-08-06T15:12:32.201+07:00  INFO 25608 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:12:32.268+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23d978b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cf70afa)
2024-08-06T15:12:32.268+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66dd04e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3)
2024-08-06T15:12:32.269+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T15:12:32.269+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b511e61)
2024-08-06T15:12:32.269+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c6919ff)
2024-08-06T15:12:32.270+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T15:12:32.270+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T15:12:32.270+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T15:12:32.270+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T15:12:32.271+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:12:32.271+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:12:32.271+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:12:32.272+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:12:32.273+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:12:32.275+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@57920d6c
2024-08-06T15:12:32.275+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b3857e2`
2024-08-06T15:12:32.277+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:12:32.277+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:12:32.277+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:12:32.279+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:12:32.280+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:12:32.280+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:12:32.280+07:00 DEBUG 25608 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:12:32.281+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@190bf8e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a8b7e11]
2024-08-06T15:12:32.933+07:00  INFO 25608 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:12:32.933+07:00 DEBUG 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@190bf8e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6afb240d]
2024-08-06T15:12:32.991+07:00 TRACE 25608 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6afb240d] for TypeConfiguration
2024-08-06T15:12:32.991+07:00  INFO 25608 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:12:33.204+07:00  INFO 25608 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:12:33.568+07:00  INFO 25608 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:12:33.568+07:00  WARN 25608 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:12:33.698+07:00  INFO 25608 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6298dafb, com.mongodb.Jep395RecordCodecProvider@30741e9b, com.mongodb.KotlinCodecProvider@1435b17]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:12:33.710+07:00  INFO 25608 --- [Spring_API] [cluster-ClusterId{value='66b1daf124e985540efd639d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16287000}
2024-08-06T15:12:34.032+07:00  WARN 25608 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:12:34.751+07:00  INFO 25608 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:12:34.757+07:00  INFO 25608 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.334 seconds (process running for 5.691)
2024-08-06T15:12:40.260+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:12:40.260+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:12:40.261+07:00  INFO 25608 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:13:13.651+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:13:13.652+07:00 TRACE 25608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6afb240d] for TypeConfiguration
2024-08-06T15:13:13.653+07:00 DEBUG 25608 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c45757f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6afb240d]
2024-08-06T15:13:13.654+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:13:13.661+07:00  INFO 25608 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:16:57.976+07:00  INFO 17856 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 17856 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:16:57.978+07:00  INFO 17856 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:16:58.714+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:16:58.715+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:16:58.740+07:00  INFO 17856 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:16:58.838+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface.
2024-08-06T15:16:59.094+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:16:59.095+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:16:59.106+07:00  INFO 17856 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:16:59.109+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T15:16:59.120+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:16:59.122+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:16:59.131+07:00  INFO 17856 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:16:59.131+07:00  INFO 17856 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:16:59.131+07:00  INFO 17856 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:16:59.785+07:00  INFO 17856 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:16:59.797+07:00  INFO 17856 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:16:59.798+07:00  INFO 17856 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:16:59.855+07:00  INFO 17856 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:16:59.856+07:00  INFO 17856 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1836 ms
2024-08-06T15:17:00.004+07:00  INFO 17856 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:17:00.065+07:00  INFO 17856 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:17:00.095+07:00  INFO 17856 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:17:00.168+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:17:00.169+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:17:00.170+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:17:00.171+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:17:00.172+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:17:00.173+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:17:00.174+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:17:00.175+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:17:00.176+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T15:17:00.177+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T15:17:00.178+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T15:17:00.184+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T15:17:00.184+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T15:17:00.185+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@589dfa6f
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T15:17:00.186+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T15:17:00.385+07:00  INFO 17856 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:17:00.406+07:00  INFO 17856 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:17:00.730+07:00  INFO 17856 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@470135da
2024-08-06T15:17:00.732+07:00  INFO 17856 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:17:00.811+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T15:17:00.812+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T15:17:00.814+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:17:00.814+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:17:00.814+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:17:00.815+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:17:00.815+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:17:00.818+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@67ecf7ed
2024-08-06T15:17:00.818+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@589dfa6f`
2024-08-06T15:17:00.820+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:17:00.820+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:17:00.820+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:17:00.822+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:17:00.823+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:17:00.823+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:17:00.823+07:00 DEBUG 17856 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:17:00.824+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e62ca19]
2024-08-06T15:17:01.551+07:00  INFO 17856 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:17:01.552+07:00 DEBUG 17856 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T15:17:01.606+07:00 TRACE 17856 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T15:17:01.606+07:00  INFO 17856 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:17:01.806+07:00  INFO 17856 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:17:02.205+07:00  INFO 17856 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:17:02.206+07:00  WARN 17856 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:17:02.341+07:00  INFO 17856 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@50e7f88b, com.mongodb.Jep395RecordCodecProvider@7a461744, com.mongodb.KotlinCodecProvider@6b1cc2fb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:17:02.373+07:00  INFO 17856 --- [Spring_API] [cluster-ClusterId{value='66b1dbfe8ef42c5a183e2cd0', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33150400}
2024-08-06T15:17:02.736+07:00  WARN 17856 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:17:03.529+07:00  INFO 17856 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:17:03.534+07:00  INFO 17856 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.985 seconds (process running for 6.412)
2024-08-06T15:17:12.823+07:00  INFO 17856 --- [Spring_API] [http-nio-8080-exec-6] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:17:12.823+07:00  INFO 17856 --- [Spring_API] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:17:12.825+07:00  INFO 17856 --- [Spring_API] [http-nio-8080-exec-6] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:17:35.793+07:00  INFO 17856 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:17:35.794+07:00 TRACE 17856 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T15:17:35.794+07:00 DEBUG 17856 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5619cdc3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T15:17:35.795+07:00  INFO 17856 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:17:35.800+07:00  INFO 17856 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:18:21.188+07:00  INFO 4984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 4984 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:18:21.191+07:00  INFO 4984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:18:21.756+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:18:21.756+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:18:21.778+07:00  INFO 4984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:18:21.852+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88 ms. Found 1 JPA repository interface.
2024-08-06T15:18:22.078+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:18:22.078+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:18:22.090+07:00  INFO 4984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:18:22.093+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T15:18:22.102+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:18:22.103+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:18:22.112+07:00  INFO 4984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:18:22.113+07:00  INFO 4984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:18:22.113+07:00  INFO 4984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:18:22.756+07:00  INFO 4984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:18:22.767+07:00  INFO 4984 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:18:22.767+07:00  INFO 4984 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:18:22.820+07:00  INFO 4984 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:18:22.822+07:00  INFO 4984 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1589 ms
2024-08-06T15:18:22.951+07:00  INFO 4984 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:18:23.011+07:00  INFO 4984 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:18:23.034+07:00  INFO 4984 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:18:23.091+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T15:18:23.091+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T15:18:23.091+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T15:18:23.091+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T15:18:23.091+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:18:23.092+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:18:23.093+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:18:23.094+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:18:23.095+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:18:23.096+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:18:23.097+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:18:23.098+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:18:23.099+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:18:23.099+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:18:23.101+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@16bbaab3
2024-08-06T15:18:23.102+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@16bbaab3
2024-08-06T15:18:23.102+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@9729a97
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T15:18:23.103+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T15:18:23.271+07:00  INFO 4984 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:18:23.290+07:00  INFO 4984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:18:23.539+07:00  INFO 4984 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ebf524
2024-08-06T15:18:23.542+07:00  INFO 4984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T15:18:23.611+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T15:18:23.613+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:18:23.613+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:18:23.613+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:18:23.615+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:18:23.615+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:18:23.617+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@75d7297d
2024-08-06T15:18:23.617+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@9729a97`
2024-08-06T15:18:23.619+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:18:23.619+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:18:23.619+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:18:23.621+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:18:23.621+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:18:23.622+07:00 DEBUG 4984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:18:23.623+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3412a3fd]
2024-08-06T15:18:24.287+07:00  INFO 4984 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:18:24.288+07:00 DEBUG 4984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T15:18:24.339+07:00 TRACE 4984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T15:18:24.340+07:00  INFO 4984 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:18:24.535+07:00  INFO 4984 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:18:24.914+07:00  INFO 4984 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:18:24.914+07:00  WARN 4984 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:18:25.024+07:00  INFO 4984 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1435b17, com.mongodb.Jep395RecordCodecProvider@2b3b25ad, com.mongodb.KotlinCodecProvider@f507d33]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:18:25.036+07:00  INFO 4984 --- [Spring_API] [cluster-ClusterId{value='66b1dc500e342317d97da1ca', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17035400}
2024-08-06T15:18:25.367+07:00  WARN 4984 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:18:26.134+07:00  INFO 4984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:18:26.140+07:00  INFO 4984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.311 seconds (process running for 5.655)
2024-08-06T15:18:30.937+07:00  INFO 4984 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:18:30.938+07:00  INFO 4984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:18:30.939+07:00  INFO 4984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:19:33.396+07:00  INFO 4984 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:19:33.398+07:00 TRACE 4984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T15:19:33.398+07:00 DEBUG 4984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45087a78] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T15:19:33.399+07:00  INFO 4984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:19:33.407+07:00  INFO 4984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:21:31.486+07:00  INFO 16656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16656 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:21:31.489+07:00  INFO 16656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:21:32.031+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:21:32.031+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:21:32.054+07:00  INFO 16656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:21:32.151+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111 ms. Found 1 JPA repository interface.
2024-08-06T15:21:32.388+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:21:32.388+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:21:32.399+07:00  INFO 16656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:21:32.402+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T15:21:32.415+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:21:32.416+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:21:32.426+07:00  INFO 16656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:21:32.426+07:00  INFO 16656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:21:32.426+07:00  INFO 16656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T15:21:33.069+07:00  INFO 16656 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:21:33.091+07:00  INFO 16656 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:21:33.091+07:00  INFO 16656 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:21:33.138+07:00  INFO 16656 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:21:33.139+07:00  INFO 16656 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1611 ms
2024-08-06T15:21:33.241+07:00  INFO 16656 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:21:33.282+07:00  INFO 16656 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:21:33.312+07:00  INFO 16656 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:21:33.371+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:21:33.372+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:21:33.373+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:21:33.374+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:21:33.375+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:21:33.376+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:21:33.377+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:21:33.380+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T15:21:33.381+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T15:21:33.382+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T15:21:33.544+07:00  INFO 16656 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:21:33.566+07:00  INFO 16656 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:21:33.811+07:00  INFO 16656 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T15:21:33.813+07:00  INFO 16656 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:21:33.874+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T15:21:33.875+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T15:21:33.875+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T15:21:33.875+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T15:21:33.875+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T15:21:33.875+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T15:21:33.876+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T15:21:33.876+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T15:21:33.876+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T15:21:33.879+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:21:33.879+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:21:33.879+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:21:33.881+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:21:33.881+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:21:33.884+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T15:21:33.884+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T15:21:33.887+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:21:33.887+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:21:33.887+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:21:33.889+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:21:33.890+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:21:33.890+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:21:33.890+07:00 DEBUG 16656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:21:33.891+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T15:21:34.553+07:00  INFO 16656 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:21:34.554+07:00 DEBUG 16656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T15:21:34.608+07:00 TRACE 16656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T15:21:34.609+07:00  INFO 16656 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:21:34.780+07:00  INFO 16656 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:21:35.118+07:00  INFO 16656 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:21:35.119+07:00  WARN 16656 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:21:35.237+07:00  INFO 16656 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:21:35.245+07:00  INFO 16656 --- [Spring_API] [cluster-ClusterId{value='66b1dd0f8be458437babbdf9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16907400}
2024-08-06T15:21:35.548+07:00  WARN 16656 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:21:36.248+07:00  INFO 16656 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:21:36.254+07:00  INFO 16656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.146 seconds (process running for 5.483)
2024-08-06T15:21:39.916+07:00  INFO 16656 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:21:39.916+07:00  INFO 16656 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:21:39.919+07:00  INFO 16656 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-08-06T15:24:25.944+07:00  INFO 16656 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:24:25.949+07:00 TRACE 16656 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T15:24:25.950+07:00 DEBUG 16656 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45087a78] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T15:24:25.953+07:00  INFO 16656 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:24:25.982+07:00  INFO 16656 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:24:39.157+07:00  INFO 27480 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 27480 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:24:39.159+07:00  INFO 27480 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:24:39.739+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:24:39.740+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:24:39.764+07:00  INFO 27480 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:24:39.870+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2024-08-06T15:24:40.334+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:24:40.335+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:24:40.350+07:00  INFO 27480 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:24:40.354+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 1 MongoDB repository interface.
2024-08-06T15:24:40.366+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:24:40.368+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:24:40.381+07:00  INFO 27480 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:24:40.382+07:00  INFO 27480 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:24:40.382+07:00  INFO 27480 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:24:41.130+07:00  INFO 27480 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:24:41.145+07:00  INFO 27480 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:24:41.145+07:00  INFO 27480 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:24:41.213+07:00  INFO 27480 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:24:41.214+07:00  INFO 27480 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2016 ms
2024-08-06T15:24:41.355+07:00  INFO 27480 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:24:41.419+07:00  INFO 27480 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:24:41.452+07:00  INFO 27480 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:24:41.515+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:24:41.515+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:24:41.515+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:24:41.516+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:24:41.517+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:24:41.518+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:24:41.519+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:24:41.520+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:24:41.521+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:24:41.522+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:24:41.523+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:24:41.527+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:24:41.527+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:24:41.528+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T15:24:41.528+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T15:24:41.528+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T15:24:41.528+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T15:24:41.528+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T15:24:41.529+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T15:24:41.529+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T15:24:41.529+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:24:41.529+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T15:24:41.737+07:00  INFO 27480 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:24:41.762+07:00  INFO 27480 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:24:42.182+07:00  INFO 27480 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T15:24:42.183+07:00  INFO 27480 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:24:42.295+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T15:24:42.296+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T15:24:42.297+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T15:24:42.297+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T15:24:42.298+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:24:42.298+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:24:42.299+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:24:42.300+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:24:42.300+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:24:42.306+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T15:24:42.307+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T15:24:42.313+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:24:42.313+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:24:42.313+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:24:42.318+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:24:42.319+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:24:42.319+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:24:42.319+07:00 DEBUG 27480 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:24:42.320+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T15:24:43.108+07:00  INFO 27480 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:24:43.108+07:00 DEBUG 27480 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T15:24:43.188+07:00 TRACE 27480 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T15:24:43.189+07:00  INFO 27480 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:24:43.362+07:00  INFO 27480 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:24:43.738+07:00  INFO 27480 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:24:43.739+07:00  WARN 27480 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:24:43.865+07:00  INFO 27480 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1fc02a84, com.mongodb.Jep395RecordCodecProvider@4c04188, com.mongodb.KotlinCodecProvider@76a41af0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:24:43.879+07:00  INFO 27480 --- [Spring_API] [cluster-ClusterId{value='66b1ddcb67a8331f83c42f07', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16361500}
2024-08-06T15:24:44.235+07:00  WARN 27480 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:24:44.994+07:00  INFO 27480 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:24:45.000+07:00  INFO 27480 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.246 seconds (process running for 6.751)
2024-08-06T15:24:57.896+07:00  INFO 27480 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:24:57.896+07:00  INFO 27480 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:24:57.897+07:00  INFO 27480 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-06T15:33:57.366+07:00  INFO 27480 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:33:57.371+07:00 TRACE 27480 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T15:33:57.371+07:00 DEBUG 27480 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f468bdd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T15:33:57.373+07:00  INFO 27480 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:33:57.390+07:00  INFO 27480 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:43:50.992+07:00  INFO 22308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 22308 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:43:50.994+07:00  INFO 22308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:43:51.624+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:43:51.625+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:43:51.648+07:00  INFO 22308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:43:51.754+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-08-06T15:43:52.029+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:43:52.031+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:43:52.044+07:00  INFO 22308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:43:52.047+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T15:43:52.061+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:43:52.063+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:43:52.078+07:00  INFO 22308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:43:52.079+07:00  INFO 22308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:43:52.080+07:00  INFO 22308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-06T15:43:52.830+07:00  INFO 22308 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:43:52.858+07:00  INFO 22308 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:43:52.858+07:00  INFO 22308 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:43:52.919+07:00  INFO 22308 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:43:52.919+07:00  INFO 22308 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1879 ms
2024-08-06T15:43:53.110+07:00  INFO 22308 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:43:53.170+07:00  INFO 22308 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:43:53.201+07:00  INFO 22308 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:43:53.268+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:43:53.268+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:43:53.268+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:43:53.269+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:43:53.269+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:43:53.269+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:43:53.269+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:43:53.270+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:43:53.270+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:43:53.270+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:43:53.270+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:43:53.271+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:43:53.272+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:43:53.272+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:43:53.272+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:43:53.272+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:43:53.273+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:43:53.274+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:43:53.275+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:43:53.275+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:43:53.276+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:43:53.276+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:43:53.276+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:43:53.277+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:43:53.278+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:43:53.279+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T15:43:53.280+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T15:43:53.286+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T15:43:53.286+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T15:43:53.287+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@23b71d24
2024-08-06T15:43:53.288+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T15:43:53.289+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T15:43:53.487+07:00  INFO 22308 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:43:53.508+07:00  INFO 22308 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:43:53.861+07:00  INFO 22308 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@492fa72a
2024-08-06T15:43:53.863+07:00  INFO 22308 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:43:53.951+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T15:43:53.952+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T15:43:53.953+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:43:53.954+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:43:53.954+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:43:53.955+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:43:53.955+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:43:53.957+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@17332039
2024-08-06T15:43:53.958+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23b71d24`
2024-08-06T15:43:53.960+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:43:53.960+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:43:53.960+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:43:53.962+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:43:53.963+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:43:53.963+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:43:53.963+07:00 DEBUG 22308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:43:53.964+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b3bb287]
2024-08-06T15:43:54.725+07:00  INFO 22308 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:43:54.726+07:00 DEBUG 22308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T15:43:54.783+07:00 TRACE 22308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T15:43:54.784+07:00  INFO 22308 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:43:54.969+07:00  INFO 22308 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:43:55.385+07:00  INFO 22308 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:43:55.386+07:00  WARN 22308 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:43:55.531+07:00  INFO 22308 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:43:55.543+07:00  INFO 22308 --- [Spring_API] [cluster-ClusterId{value='66b1e24bef0b772fbe4346cd', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16194100}
2024-08-06T15:43:55.902+07:00  WARN 22308 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:43:56.709+07:00  INFO 22308 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:43:56.715+07:00  INFO 22308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.136 seconds (process running for 6.663)
2024-08-06T15:44:08.926+07:00  INFO 22308 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:44:08.927+07:00  INFO 22308 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:44:08.928+07:00  INFO 22308 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:52:02.393+07:00  INFO 22308 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:52:02.408+07:00 TRACE 22308 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T15:52:02.408+07:00 DEBUG 22308 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4edeb5fd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T15:52:02.411+07:00  INFO 22308 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:52:02.446+07:00  INFO 22308 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:52:10.511+07:00  INFO 13724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 13724 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:52:10.513+07:00  INFO 13724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:52:11.156+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:52:11.157+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:52:11.179+07:00  INFO 13724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:52:11.289+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 125 ms. Found 1 JPA repository interface.
2024-08-06T15:52:11.523+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:52:11.523+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:52:11.536+07:00  INFO 13724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:52:11.539+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T15:52:11.548+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:52:11.549+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:52:11.557+07:00  INFO 13724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:52:11.558+07:00  INFO 13724 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:52:11.558+07:00  INFO 13724 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:52:12.211+07:00  INFO 13724 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:52:12.224+07:00  INFO 13724 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:52:12.224+07:00  INFO 13724 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:52:12.284+07:00  INFO 13724 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:52:12.284+07:00  INFO 13724 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1728 ms
2024-08-06T15:52:12.434+07:00  INFO 13724 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:52:12.505+07:00  INFO 13724 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:52:12.546+07:00  INFO 13724 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:52:12.619+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:52:12.620+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:52:12.621+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:52:12.622+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:52:12.623+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:52:12.624+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:52:12.625+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T15:52:12.626+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T15:52:12.629+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:52:12.629+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T15:52:12.630+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T15:52:12.630+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T15:52:12.631+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T15:52:12.830+07:00  INFO 13724 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:52:12.851+07:00  INFO 13724 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:52:13.178+07:00  INFO 13724 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T15:52:13.179+07:00  INFO 13724 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T15:52:13.258+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T15:52:13.259+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:52:13.260+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:52:13.260+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:52:13.261+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:52:13.261+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:52:13.263+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T15:52:13.263+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T15:52:13.265+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:52:13.266+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:52:13.266+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:52:13.267+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:52:13.268+07:00 DEBUG 13724 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:52:13.269+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T15:52:14.000+07:00  INFO 13724 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:52:14.001+07:00 DEBUG 13724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T15:52:14.056+07:00 TRACE 13724 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T15:52:14.057+07:00  INFO 13724 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:52:14.237+07:00  INFO 13724 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:52:14.624+07:00  INFO 13724 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:52:14.625+07:00  WARN 13724 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:52:14.761+07:00  INFO 13724 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:52:14.783+07:00  INFO 13724 --- [Spring_API] [cluster-ClusterId{value='66b1e43ea98eb33f3228ca4d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25470500}
2024-08-06T15:52:15.165+07:00  WARN 13724 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:52:15.993+07:00  INFO 13724 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:52:16.005+07:00  INFO 13724 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.868 seconds (process running for 6.308)
2024-08-06T15:52:22.026+07:00  INFO 13724 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:52:22.026+07:00  INFO 13724 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:52:22.027+07:00  INFO 13724 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T15:53:23.221+07:00  INFO 13724 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:53:23.222+07:00 TRACE 13724 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T15:53:23.222+07:00 DEBUG 13724 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b857060] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T15:53:23.226+07:00  INFO 13724 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T15:53:23.236+07:00  INFO 13724 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T15:59:21.586+07:00  INFO 19892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 19892 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T15:59:21.588+07:00  INFO 19892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T15:59:22.390+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:59:22.391+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T15:59:22.415+07:00  INFO 19892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T15:59:22.525+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
2024-08-06T15:59:22.828+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:59:22.829+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T15:59:22.840+07:00  INFO 19892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T15:59:22.844+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T15:59:22.855+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T15:59:22.856+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T15:59:22.867+07:00  INFO 19892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:59:22.867+07:00  INFO 19892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T15:59:22.868+07:00  INFO 19892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T15:59:23.563+07:00  INFO 19892 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T15:59:23.575+07:00  INFO 19892 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T15:59:23.575+07:00  INFO 19892 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T15:59:23.630+07:00  INFO 19892 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T15:59:23.631+07:00  INFO 19892 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1963 ms
2024-08-06T15:59:23.768+07:00  INFO 19892 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T15:59:23.828+07:00  INFO 19892 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T15:59:23.859+07:00  INFO 19892 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T15:59:23.925+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T15:59:23.926+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:59:23.927+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:59:23.928+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T15:59:23.929+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:59:23.930+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T15:59:23.931+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:59:23.931+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:59:23.931+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T15:59:23.931+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T15:59:23.932+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T15:59:23.933+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:59:23.934+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:59:23.935+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T15:59:23.936+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:59:23.936+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T15:59:23.936+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T15:59:23.936+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T15:59:23.939+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1ffd0114
2024-08-06T15:59:23.939+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ffd0114
2024-08-06T15:59:23.940+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@57e4b86c
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T15:59:23.941+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T15:59:24.138+07:00  INFO 19892 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T15:59:24.161+07:00  INFO 19892 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T15:59:24.491+07:00  INFO 19892 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bdaa81
2024-08-06T15:59:24.493+07:00  INFO 19892 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T15:59:24.566+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T15:59:24.567+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T15:59:24.568+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T15:59:24.568+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T15:59:24.569+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T15:59:24.571+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:59:24.571+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T15:59:24.572+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4e20a985
2024-08-06T15:59:24.572+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@57e4b86c`
2024-08-06T15:59:24.574+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T15:59:24.574+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:59:24.574+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T15:59:24.577+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3412a3fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36ecf9f6]
2024-08-06T15:59:25.297+07:00  INFO 19892 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T15:59:25.297+07:00 DEBUG 19892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3412a3fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T15:59:25.349+07:00 TRACE 19892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T15:59:25.350+07:00  INFO 19892 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T15:59:25.537+07:00  INFO 19892 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T15:59:25.934+07:00  INFO 19892 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T15:59:25.935+07:00  WARN 19892 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T15:59:26.075+07:00  INFO 19892 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6298dafb, com.mongodb.Jep395RecordCodecProvider@30741e9b, com.mongodb.KotlinCodecProvider@1435b17]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T15:59:26.103+07:00  INFO 19892 --- [Spring_API] [cluster-ClusterId{value='66b1e5ee2c0b2616843532c3', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29621300}
2024-08-06T15:59:26.506+07:00  WARN 19892 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T15:59:27.280+07:00  INFO 19892 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T15:59:27.294+07:00  INFO 19892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.151 seconds (process running for 6.705)
2024-08-06T15:59:32.443+07:00  INFO 19892 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T15:59:32.443+07:00  INFO 19892 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T15:59:32.444+07:00  INFO 19892 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:02:04.760+07:00  INFO 19892 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:02:04.762+07:00 TRACE 19892 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T16:02:04.762+07:00 DEBUG 19892 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@19ab42b5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T16:02:04.764+07:00  INFO 19892 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:02:04.770+07:00  INFO 19892 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:07:59.856+07:00  INFO 22788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 22788 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:07:59.859+07:00  INFO 22788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:08:00.480+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:08:00.480+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:08:00.503+07:00  INFO 22788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:08:00.609+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-08-06T16:08:00.895+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:08:00.896+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:08:00.906+07:00  INFO 22788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:08:00.910+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T16:08:00.920+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:08:00.921+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:08:00.932+07:00  INFO 22788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:08:00.933+07:00  INFO 22788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:08:00.933+07:00  INFO 22788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T16:08:01.634+07:00  INFO 22788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:08:01.652+07:00  INFO 22788 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:08:01.653+07:00  INFO 22788 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:08:01.704+07:00  INFO 22788 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:08:01.704+07:00  INFO 22788 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1805 ms
2024-08-06T16:08:01.875+07:00  INFO 22788 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:08:01.945+07:00  INFO 22788 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:08:01.975+07:00  INFO 22788 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:08:02.058+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:08:02.059+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:08:02.059+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:08:02.059+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:08:02.059+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:08:02.060+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:08:02.061+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:08:02.062+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:08:02.063+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:08:02.064+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:08:02.065+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:08:02.066+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:08:02.067+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:08:02.068+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:08:02.069+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:08:02.070+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:08:02.070+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T16:08:02.070+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T16:08:02.070+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T16:08:02.071+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T16:08:02.072+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-06T16:08:02.078+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@577bfadb
2024-08-06T16:08:02.078+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@577bfadb
2024-08-06T16:08:02.080+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@43588265
2024-08-06T16:08:02.080+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T16:08:02.081+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-06T16:08:02.288+07:00  INFO 22788 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:08:02.308+07:00  INFO 22788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:08:02.670+07:00  INFO 22788 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7323dce7
2024-08-06T16:08:02.671+07:00  INFO 22788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0)
2024-08-06T16:08:02.755+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ac0ed65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb)
2024-08-06T16:08:02.757+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:08:02.757+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:08:02.758+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:08:02.759+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:08:02.759+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:08:02.761+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@69d021c1
2024-08-06T16:08:02.761+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@43588265`
2024-08-06T16:08:02.763+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:08:02.764+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:08:02.764+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:08:02.766+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:08:02.768+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:08:02.768+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:08:02.768+07:00 DEBUG 22788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:08:02.769+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e62ca19] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@188bf4d8]
2024-08-06T16:08:03.530+07:00  INFO 22788 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:08:03.530+07:00 DEBUG 22788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e62ca19] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T16:08:03.585+07:00 TRACE 22788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T16:08:03.585+07:00  INFO 22788 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:08:03.767+07:00  INFO 22788 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:08:04.177+07:00  INFO 22788 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:08:04.177+07:00  WARN 22788 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:08:04.314+07:00  INFO 22788 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1440a166, com.mongodb.Jep395RecordCodecProvider@74f6237, com.mongodb.KotlinCodecProvider@50e7f88b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:08:04.332+07:00  INFO 22788 --- [Spring_API] [cluster-ClusterId{value='66b1e7f4ad7a8236aeb1c4aa', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24124500}
2024-08-06T16:08:04.686+07:00  WARN 22788 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:08:05.449+07:00  INFO 22788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:08:05.455+07:00  INFO 22788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.007 seconds (process running for 6.506)
2024-08-06T16:08:09.047+07:00  INFO 22788 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:08:09.047+07:00  INFO 22788 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:08:09.048+07:00  INFO 22788 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:08:18.914+07:00  INFO 22788 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:08:18.915+07:00 TRACE 22788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T16:08:18.915+07:00 DEBUG 22788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@265a431c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T16:08:18.916+07:00  INFO 22788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:08:18.922+07:00  INFO 22788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:14:50.242+07:00  INFO 22400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 22400 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:14:50.244+07:00  INFO 22400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:14:50.870+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:14:50.871+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:14:50.893+07:00  INFO 22400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:14:50.998+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 119 ms. Found 1 JPA repository interface.
2024-08-06T16:14:51.273+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:14:51.273+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:14:51.284+07:00  INFO 22400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:14:51.288+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:14:51.298+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:14:51.299+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:14:51.309+07:00  INFO 22400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:14:51.310+07:00  INFO 22400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:14:51.310+07:00  INFO 22400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T16:14:52.013+07:00  INFO 22400 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:14:52.033+07:00  INFO 22400 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:14:52.033+07:00  INFO 22400 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:14:52.082+07:00  INFO 22400 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:14:52.082+07:00  INFO 22400 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1800 ms
2024-08-06T16:14:52.221+07:00  INFO 22400 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:14:52.278+07:00  INFO 22400 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:14:52.307+07:00  INFO 22400 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:14:52.378+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:14:52.379+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:14:52.380+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:14:52.381+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:14:52.381+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:14:52.381+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:14:52.381+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:14:52.382+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:14:52.383+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:14:52.384+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:14:52.385+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:14:52.386+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:14:52.387+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:14:52.388+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T16:14:52.389+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T16:14:52.394+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T16:14:52.394+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T16:14:52.395+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@589dfa6f
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T16:14:52.396+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T16:14:52.611+07:00  INFO 22400 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:14:52.632+07:00  INFO 22400 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:14:52.961+07:00  INFO 22400 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@470135da
2024-08-06T16:14:52.962+07:00  INFO 22400 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:14:53.043+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec)
2024-08-06T16:14:53.043+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T16:14:53.043+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T16:14:53.043+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T16:14:53.043+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T16:14:53.044+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T16:14:53.044+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T16:14:53.044+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T16:14:53.044+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T16:14:53.045+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:14:53.045+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:14:53.045+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:14:53.047+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:14:53.047+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:14:53.049+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@67ecf7ed
2024-08-06T16:14:53.049+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@589dfa6f`
2024-08-06T16:14:53.052+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:14:53.052+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:14:53.052+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:14:53.054+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:14:53.054+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:14:53.054+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:14:53.055+07:00 DEBUG 22400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:14:53.056+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e62ca19]
2024-08-06T16:14:53.780+07:00  INFO 22400 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:14:53.781+07:00 DEBUG 22400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T16:14:53.836+07:00 TRACE 22400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T16:14:53.837+07:00  INFO 22400 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:14:54.037+07:00  INFO 22400 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:14:54.443+07:00  INFO 22400 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:14:54.444+07:00  WARN 22400 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:14:54.591+07:00  INFO 22400 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@32441ed4, com.mongodb.Jep395RecordCodecProvider@3fc2197d, com.mongodb.KotlinCodecProvider@5a429813]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:14:54.607+07:00  INFO 22400 --- [Spring_API] [cluster-ClusterId{value='66b1e98e386be2106ff613e4', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21808000}
2024-08-06T16:14:55.002+07:00  WARN 22400 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:14:55.744+07:00  INFO 22400 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:14:55.751+07:00  INFO 22400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.902 seconds (process running for 6.424)
2024-08-06T16:15:04.232+07:00  INFO 22400 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:15:04.232+07:00  INFO 22400 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:15:04.234+07:00  INFO 22400 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:15:35.670+07:00  INFO 22400 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:15:35.671+07:00 TRACE 22400 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T16:15:35.671+07:00 DEBUG 22400 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e464324] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T16:15:35.672+07:00  INFO 22400 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:15:35.678+07:00  INFO 22400 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:15:48.772+07:00  INFO 11984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 11984 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:15:48.774+07:00  INFO 11984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:15:49.289+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:15:49.290+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:15:49.311+07:00  INFO 11984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:15:49.403+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 108 ms. Found 1 JPA repository interface.
2024-08-06T16:15:49.647+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:15:49.647+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:15:49.659+07:00  INFO 11984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:15:49.662+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:15:49.671+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:15:49.672+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:15:49.683+07:00  INFO 11984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:15:49.684+07:00  INFO 11984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:15:49.684+07:00  INFO 11984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-08-06T16:15:50.319+07:00  INFO 11984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:15:50.331+07:00  INFO 11984 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:15:50.331+07:00  INFO 11984 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:15:50.381+07:00  INFO 11984 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:15:50.382+07:00  INFO 11984 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1569 ms
2024-08-06T16:15:50.512+07:00  INFO 11984 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:15:50.568+07:00  INFO 11984 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:15:50.605+07:00  INFO 11984 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:15:50.671+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:15:50.671+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:15:50.672+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T16:15:50.673+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:15:50.674+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:15:50.675+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:15:50.676+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:15:50.677+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:15:50.678+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:15:50.679+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:15:50.680+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:15:50.685+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T16:15:50.685+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T16:15:50.686+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T16:15:50.687+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T16:15:50.860+07:00  INFO 11984 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:15:50.882+07:00  INFO 11984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:15:51.135+07:00  INFO 11984 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T16:15:51.136+07:00  INFO 11984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:15:51.204+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T16:15:51.205+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T16:15:51.206+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:15:51.207+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:15:51.207+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:15:51.209+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:15:51.209+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:15:51.211+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T16:15:51.211+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T16:15:51.213+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:15:51.214+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:15:51.214+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:15:51.216+07:00 DEBUG 11984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:15:51.217+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T16:15:51.872+07:00  INFO 11984 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:15:51.873+07:00 DEBUG 11984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T16:15:51.921+07:00 TRACE 11984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T16:15:51.921+07:00  INFO 11984 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:15:52.088+07:00  INFO 11984 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:15:52.468+07:00  INFO 11984 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:15:52.469+07:00  WARN 11984 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:15:52.590+07:00  INFO 11984 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:15:52.603+07:00  INFO 11984 --- [Spring_API] [cluster-ClusterId{value='66b1e9c8852d9a151fffc30f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17450900}
2024-08-06T16:15:52.909+07:00  WARN 11984 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:15:53.670+07:00  INFO 11984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:15:53.676+07:00  INFO 11984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.276 seconds (process running for 5.603)
2024-08-06T16:15:57.634+07:00  INFO 11984 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:15:57.634+07:00  INFO 11984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:15:57.635+07:00  INFO 11984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:16:14.039+07:00  INFO 11984 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:16:14.039+07:00 TRACE 11984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T16:16:14.040+07:00 DEBUG 11984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@43dbcc6c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T16:16:14.040+07:00  INFO 11984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:16:14.047+07:00  INFO 11984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:23:25.675+07:00  INFO 9908 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 9908 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:23:25.677+07:00  INFO 9908 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:23:26.311+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:23:26.311+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:23:26.333+07:00  INFO 9908 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:23:26.428+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 110 ms. Found 1 JPA repository interface.
2024-08-06T16:23:26.691+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:23:26.691+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:23:26.702+07:00  INFO 9908 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:23:26.706+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:23:26.717+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:23:26.719+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:23:26.729+07:00  INFO 9908 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:23:26.729+07:00  INFO 9908 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:23:26.729+07:00  INFO 9908 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T16:23:27.444+07:00  INFO 9908 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:23:27.456+07:00  INFO 9908 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:23:27.456+07:00  INFO 9908 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:23:27.512+07:00  INFO 9908 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:23:27.512+07:00  INFO 9908 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1794 ms
2024-08-06T16:23:27.666+07:00  INFO 9908 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:23:27.724+07:00  INFO 9908 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:23:27.752+07:00  INFO 9908 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:23:27.824+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:23:27.825+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:23:27.826+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:23:27.826+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:23:27.826+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:23:27.826+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:23:27.827+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:23:27.828+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:23:27.829+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:23:27.830+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:23:27.831+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:23:27.832+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:23:27.833+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:23:27.835+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:23:27.835+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:23:27.835+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:23:27.835+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:23:27.841+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:23:27.842+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:23:27.843+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T16:23:27.844+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T16:23:27.844+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T16:23:27.845+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T16:23:28.071+07:00  INFO 9908 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:23:28.092+07:00  INFO 9908 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:23:28.439+07:00  INFO 9908 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T16:23:28.442+07:00  INFO 9908 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:23:28.529+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T16:23:28.530+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T16:23:28.532+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:23:28.532+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:23:28.532+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:23:28.534+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:23:28.534+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:23:28.536+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T16:23:28.536+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T16:23:28.538+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:23:28.538+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:23:28.538+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:23:28.541+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:23:28.541+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:23:28.541+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:23:28.542+07:00 DEBUG 9908 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:23:28.543+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T16:23:29.318+07:00  INFO 9908 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:23:29.318+07:00 DEBUG 9908 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T16:23:29.375+07:00 TRACE 9908 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T16:23:29.375+07:00  INFO 9908 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:23:29.579+07:00  INFO 9908 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:23:29.997+07:00  INFO 9908 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:23:29.998+07:00  WARN 9908 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:23:30.140+07:00  INFO 9908 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:23:30.157+07:00  INFO 9908 --- [Spring_API] [cluster-ClusterId{value='66b1eb92d52dd76eef65f228', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21609500}
2024-08-06T16:23:30.543+07:00  WARN 9908 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:23:31.338+07:00  INFO 9908 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:23:31.344+07:00  INFO 9908 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.109 seconds (process running for 6.628)
2024-08-06T16:23:43.562+07:00  INFO 9908 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:23:43.562+07:00  INFO 9908 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:23:43.563+07:00  INFO 9908 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:24:25.430+07:00  INFO 9908 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:24:25.430+07:00 TRACE 9908 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T16:24:25.430+07:00 DEBUG 9908 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@265a431c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T16:24:25.431+07:00  INFO 9908 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:24:25.436+07:00  INFO 9908 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:24:29.268+07:00  INFO 12044 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 12044 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:24:29.270+07:00  INFO 12044 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:24:29.805+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:24:29.805+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:24:29.827+07:00  INFO 12044 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:24:29.914+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 101 ms. Found 1 JPA repository interface.
2024-08-06T16:24:30.145+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:24:30.145+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:24:30.156+07:00  INFO 12044 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:24:30.160+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:24:30.170+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:24:30.171+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:24:30.180+07:00  INFO 12044 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:24:30.180+07:00  INFO 12044 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:24:30.180+07:00  INFO 12044 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T16:24:30.835+07:00  INFO 12044 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:24:30.847+07:00  INFO 12044 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:24:30.847+07:00  INFO 12044 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:24:30.897+07:00  INFO 12044 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:24:30.897+07:00  INFO 12044 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1585 ms
2024-08-06T16:24:31.031+07:00  INFO 12044 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:24:31.081+07:00  INFO 12044 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:24:31.108+07:00  INFO 12044 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:24:31.165+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:24:31.166+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:24:31.167+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:24:31.168+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:24:31.169+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:24:31.170+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:24:31.171+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:24:31.172+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:24:31.173+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:24:31.176+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T16:24:31.176+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T16:24:31.177+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T16:24:31.178+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T16:24:31.365+07:00  INFO 12044 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:24:31.382+07:00  INFO 12044 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:24:31.627+07:00  INFO 12044 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T16:24:31.629+07:00  INFO 12044 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:24:31.693+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T16:24:31.693+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T16:24:31.693+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T16:24:31.693+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T16:24:31.694+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T16:24:31.694+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T16:24:31.694+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T16:24:31.694+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T16:24:31.694+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T16:24:31.695+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:24:31.695+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:24:31.695+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:24:31.696+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:24:31.696+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:24:31.698+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T16:24:31.698+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T16:24:31.701+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:24:31.701+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:24:31.701+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:24:31.703+07:00 DEBUG 12044 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:24:31.705+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T16:24:32.367+07:00  INFO 12044 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:24:32.367+07:00 DEBUG 12044 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T16:24:32.421+07:00 TRACE 12044 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T16:24:32.422+07:00  INFO 12044 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:24:32.606+07:00  INFO 12044 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:24:32.940+07:00  INFO 12044 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:24:32.941+07:00  WARN 12044 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:24:33.073+07:00  INFO 12044 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:24:33.094+07:00  INFO 12044 --- [Spring_API] [cluster-ClusterId{value='66b1ebd143ad5167d22520e6', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25126600}
2024-08-06T16:24:33.425+07:00  WARN 12044 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:24:34.127+07:00  INFO 12044 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:24:34.133+07:00  INFO 12044 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.214 seconds (process running for 5.592)
2024-08-06T16:25:04.540+07:00  INFO 12044 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:25:04.540+07:00  INFO 12044 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:25:04.541+07:00  INFO 12044 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:27:47.246+07:00  INFO 12044 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:27:47.247+07:00 TRACE 12044 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T16:27:47.247+07:00 DEBUG 12044 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2bc37e12] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T16:27:47.248+07:00  INFO 12044 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:27:47.254+07:00  INFO 12044 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:28:42.216+07:00  INFO 13864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 13864 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:28:42.218+07:00  INFO 13864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:28:42.753+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:28:42.754+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:28:42.774+07:00  INFO 13864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:28:42.862+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 101 ms. Found 1 JPA repository interface.
2024-08-06T16:28:43.095+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:28:43.096+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:28:43.107+07:00  INFO 13864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:28:43.110+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:28:43.120+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:28:43.121+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:28:43.131+07:00  INFO 13864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:28:43.131+07:00  INFO 13864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:28:43.131+07:00  INFO 13864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T16:28:43.775+07:00  INFO 13864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:28:43.788+07:00  INFO 13864 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:28:43.789+07:00  INFO 13864 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:28:43.846+07:00  INFO 13864 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:28:43.847+07:00  INFO 13864 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1587 ms
2024-08-06T16:28:43.989+07:00  INFO 13864 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:28:44.045+07:00  INFO 13864 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:28:44.080+07:00  INFO 13864 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:28:44.147+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:28:44.148+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:28:44.149+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:28:44.150+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:28:44.151+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:28:44.152+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:28:44.153+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:28:44.154+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:28:44.155+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:28:44.156+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:28:44.157+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:28:44.160+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T16:28:44.160+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T16:28:44.161+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T16:28:44.162+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T16:28:44.341+07:00  INFO 13864 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:28:44.358+07:00  INFO 13864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:28:44.595+07:00  INFO 13864 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T16:28:44.597+07:00  INFO 13864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:28:44.666+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T16:28:44.667+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T16:28:44.668+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:28:44.668+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:28:44.668+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:28:44.670+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:28:44.670+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:28:44.672+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T16:28:44.672+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T16:28:44.674+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:28:44.674+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:28:44.674+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:28:44.676+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:28:44.677+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:28:44.677+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:28:44.677+07:00 DEBUG 13864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:28:44.678+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T16:28:45.304+07:00  INFO 13864 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:28:45.304+07:00 DEBUG 13864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T16:28:45.357+07:00 TRACE 13864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T16:28:45.357+07:00  INFO 13864 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:28:45.550+07:00  INFO 13864 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:28:45.908+07:00  INFO 13864 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:28:45.909+07:00  WARN 13864 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:28:46.033+07:00  INFO 13864 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@68c06a2, com.mongodb.Jep395RecordCodecProvider@5a95090a, com.mongodb.KotlinCodecProvider@34ccce55]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:28:46.045+07:00  INFO 13864 --- [Spring_API] [cluster-ClusterId{value='66b1eccd82626f5538771f28', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16177200}
2024-08-06T16:28:46.396+07:00  WARN 13864 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:28:47.083+07:00  INFO 13864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:28:47.089+07:00  INFO 13864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.252 seconds (process running for 5.618)
2024-08-06T16:28:51.526+07:00  INFO 13864 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:28:51.527+07:00  INFO 13864 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:28:51.528+07:00  INFO 13864 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:29:46.723+07:00  INFO 13864 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:29:46.724+07:00 TRACE 13864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T16:29:46.724+07:00 DEBUG 13864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68238c9b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T16:29:46.725+07:00  INFO 13864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:29:46.737+07:00  INFO 13864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:31:15.651+07:00  INFO 22176 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 22176 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:31:15.653+07:00  INFO 22176 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:31:16.242+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:31:16.242+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:31:16.264+07:00  INFO 22176 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:31:16.338+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 89 ms. Found 1 JPA repository interface.
2024-08-06T16:31:16.584+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:31:16.584+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:31:16.596+07:00  INFO 22176 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:31:16.599+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:31:16.609+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:31:16.610+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:31:16.619+07:00  INFO 22176 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:31:16.620+07:00  INFO 22176 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:31:16.620+07:00  INFO 22176 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T16:31:17.338+07:00  INFO 22176 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:31:17.350+07:00  INFO 22176 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:31:17.350+07:00  INFO 22176 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:31:17.399+07:00  INFO 22176 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:31:17.399+07:00  INFO 22176 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1707 ms
2024-08-06T16:31:17.557+07:00  INFO 22176 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:31:17.627+07:00  INFO 22176 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:31:17.658+07:00  INFO 22176 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:31:17.728+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:31:17.729+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:31:17.730+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:31:17.731+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:31:17.732+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:31:17.733+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:31:17.734+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:31:17.735+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:31:17.736+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:31:17.737+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:31:17.738+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:31:17.739+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:31:17.743+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:31:17.743+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:31:17.744+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T16:31:17.745+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T16:31:17.932+07:00  INFO 22176 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:31:17.954+07:00  INFO 22176 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:31:18.270+07:00  INFO 22176 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T16:31:18.272+07:00  INFO 22176 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T16:31:18.350+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T16:31:18.351+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T16:31:18.351+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T16:31:18.351+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T16:31:18.352+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:31:18.352+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:31:18.352+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:31:18.354+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:31:18.354+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:31:18.356+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T16:31:18.356+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T16:31:18.358+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:31:18.359+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:31:18.359+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:31:18.361+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:31:18.362+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:31:18.362+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:31:18.362+07:00 DEBUG 22176 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:31:18.363+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T16:31:19.089+07:00  INFO 22176 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:31:19.089+07:00 DEBUG 22176 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T16:31:19.140+07:00 TRACE 22176 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T16:31:19.141+07:00  INFO 22176 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:31:19.312+07:00  INFO 22176 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:31:19.686+07:00  INFO 22176 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:31:19.687+07:00  WARN 22176 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:31:19.822+07:00  INFO 22176 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76a41af0, com.mongodb.Jep395RecordCodecProvider@7a1148f2, com.mongodb.KotlinCodecProvider@641bd93e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:31:19.834+07:00  INFO 22176 --- [Spring_API] [cluster-ClusterId{value='66b1ed67a246fb277c883697', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17836300}
2024-08-06T16:31:20.207+07:00  WARN 22176 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:31:20.930+07:00  INFO 22176 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:31:20.936+07:00  INFO 22176 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.679 seconds (process running for 6.059)
2024-08-06T16:31:26.217+07:00  INFO 22176 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:31:26.218+07:00  INFO 22176 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:31:26.219+07:00  INFO 22176 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T16:31:59.461+07:00  INFO 22176 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:31:59.462+07:00 TRACE 22176 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T16:31:59.462+07:00 DEBUG 22176 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5fc179cd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T16:31:59.463+07:00  INFO 22176 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:31:59.469+07:00  INFO 22176 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T16:57:59.455+07:00  INFO 26984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26984 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T16:57:59.457+07:00  INFO 26984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T16:58:00.066+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:58:00.066+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T16:58:00.094+07:00  INFO 26984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T16:58:00.207+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 134 ms. Found 1 JPA repository interface.
2024-08-06T16:58:00.497+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:58:00.498+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T16:58:00.509+07:00  INFO 26984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T16:58:00.513+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T16:58:00.523+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T16:58:00.525+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T16:58:00.535+07:00  INFO 26984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:58:00.535+07:00  INFO 26984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T16:58:00.535+07:00  INFO 26984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T16:58:01.250+07:00  INFO 26984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T16:58:01.264+07:00  INFO 26984 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T16:58:01.265+07:00  INFO 26984 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T16:58:01.326+07:00  INFO 26984 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T16:58:01.326+07:00  INFO 26984 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1828 ms
2024-08-06T16:58:01.512+07:00  INFO 26984 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T16:58:01.585+07:00  INFO 26984 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T16:58:01.613+07:00  INFO 26984 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T16:58:01.687+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:58:01.688+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:58:01.689+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T16:58:01.690+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T16:58:01.691+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T16:58:01.692+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T16:58:01.693+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T16:58:01.694+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T16:58:01.698+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:58:01.698+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T16:58:01.699+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T16:58:01.700+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T16:58:01.927+07:00  INFO 26984 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T16:58:01.946+07:00  INFO 26984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T16:58:02.289+07:00  INFO 26984 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T16:58:02.291+07:00  INFO 26984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T16:58:02.375+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T16:58:02.376+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T16:58:02.378+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T16:58:02.378+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T16:58:02.378+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T16:58:02.380+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:58:02.380+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T16:58:02.382+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T16:58:02.382+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T16:58:02.385+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T16:58:02.385+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:58:02.385+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:58:02.387+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:58:02.388+07:00 DEBUG 26984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T16:58:02.389+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T16:58:03.099+07:00  INFO 26984 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T16:58:03.100+07:00 DEBUG 26984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T16:58:03.168+07:00 TRACE 26984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T16:58:03.169+07:00  INFO 26984 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:58:03.377+07:00  INFO 26984 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T16:58:03.757+07:00  INFO 26984 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T16:58:03.758+07:00  WARN 26984 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T16:58:03.893+07:00  INFO 26984 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76a41af0, com.mongodb.Jep395RecordCodecProvider@7a1148f2, com.mongodb.KotlinCodecProvider@641bd93e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T16:58:03.913+07:00  INFO 26984 --- [Spring_API] [cluster-ClusterId{value='66b1f3abf04e131c0031e629', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24958900}
2024-08-06T16:58:04.284+07:00  WARN 26984 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T16:58:05.042+07:00  INFO 26984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T16:58:05.052+07:00  INFO 26984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.056 seconds (process running for 6.603)
2024-08-06T16:58:13.931+07:00  INFO 26984 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T16:58:13.931+07:00  INFO 26984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T16:58:13.933+07:00  INFO 26984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T16:58:57.485+07:00  INFO 26984 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T16:58:57.486+07:00 TRACE 26984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T16:58:57.487+07:00 DEBUG 26984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4a8d4ebd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T16:58:57.487+07:00  INFO 26984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T16:58:57.495+07:00  INFO 26984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:00:44.550+07:00  INFO 16864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16864 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:00:44.552+07:00  INFO 16864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:00:45.181+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:00:45.181+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:00:45.204+07:00  INFO 16864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:00:45.313+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
2024-08-06T17:00:45.570+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:00:45.570+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:00:45.582+07:00  INFO 16864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:00:45.586+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:00:45.596+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:00:45.598+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:00:45.608+07:00  INFO 16864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:00:45.608+07:00  INFO 16864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:00:45.608+07:00  INFO 16864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:00:46.251+07:00  INFO 16864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:00:46.273+07:00  INFO 16864 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:00:46.273+07:00  INFO 16864 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:00:46.326+07:00  INFO 16864 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:00:46.326+07:00  INFO 16864 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1733 ms
2024-08-06T17:00:46.453+07:00  INFO 16864 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:00:46.515+07:00  INFO 16864 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:00:46.547+07:00  INFO 16864 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:00:46.613+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:00:46.613+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:00:46.613+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:00:46.613+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:00:46.613+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:00:46.614+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:00:46.615+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:00:46.616+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:00:46.618+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:00:46.619+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T17:00:46.620+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T17:00:46.623+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T17:00:46.623+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4adf3582
2024-08-06T17:00:46.624+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@23b71d24
2024-08-06T17:00:46.624+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T17:00:46.625+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T17:00:46.853+07:00  INFO 16864 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:00:46.878+07:00  INFO 16864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:00:47.200+07:00  INFO 16864 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@492fa72a
2024-08-06T17:00:47.202+07:00  INFO 16864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:00:47.277+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:00:47.278+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-06T17:00:47.280+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:00:47.280+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:00:47.280+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:00:47.281+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:00:47.281+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:00:47.283+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@17332039
2024-08-06T17:00:47.283+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23b71d24`
2024-08-06T17:00:47.286+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:00:47.286+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:00:47.286+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:00:47.289+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b3bb287]
2024-08-06T17:00:48.056+07:00  INFO 16864 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:00:48.056+07:00 DEBUG 16864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@780c0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T17:00:48.109+07:00 TRACE 16864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T17:00:48.109+07:00  INFO 16864 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:00:48.295+07:00  INFO 16864 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:00:48.687+07:00  INFO 16864 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:00:48.688+07:00  WARN 16864 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:00:48.810+07:00  INFO 16864 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:00:48.825+07:00  INFO 16864 --- [Spring_API] [cluster-ClusterId{value='66b1f450a708467053fd49c4', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19002800}
2024-08-06T17:00:49.176+07:00  WARN 16864 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:00:49.935+07:00  INFO 16864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:00:49.943+07:00  INFO 16864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.824 seconds (process running for 6.351)
2024-08-06T17:00:58.482+07:00  INFO 16864 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:00:58.482+07:00  INFO 16864 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:00:58.483+07:00  INFO 16864 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:03:30.311+07:00  INFO 16864 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:03:30.312+07:00 TRACE 16864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5fafd099] for TypeConfiguration
2024-08-06T17:03:30.313+07:00 DEBUG 16864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@72df0b9c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5fafd099]
2024-08-06T17:03:30.313+07:00  INFO 16864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:03:30.323+07:00  INFO 16864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:05:54.827+07:00  INFO 23964 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 23964 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:05:54.829+07:00  INFO 23964 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:05:55.429+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:05:55.429+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:05:55.458+07:00  INFO 23964 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:05:55.598+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 160 ms. Found 1 JPA repository interface.
2024-08-06T17:05:55.897+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:05:55.897+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:05:55.909+07:00  INFO 23964 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:05:55.912+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:05:55.926+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:05:55.929+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:05:55.941+07:00  INFO 23964 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:05:55.943+07:00  INFO 23964 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:05:55.943+07:00  INFO 23964 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:05:56.626+07:00  INFO 23964 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:05:56.642+07:00  INFO 23964 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:05:56.643+07:00  INFO 23964 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:05:56.697+07:00  INFO 23964 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:05:56.698+07:00  INFO 23964 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1832 ms
2024-08-06T17:05:56.847+07:00  INFO 23964 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:05:56.924+07:00  INFO 23964 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:05:56.958+07:00  INFO 23964 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:05:57.027+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:05:57.028+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:05:57.029+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:05:57.030+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:05:57.031+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:05:57.032+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:05:57.033+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:05:57.034+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:05:57.035+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:05:57.036+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:05:57.039+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@1ffd0114
2024-08-06T17:05:57.040+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ffd0114
2024-08-06T17:05:57.041+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@57e4b86c
2024-08-06T17:05:57.041+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:05:57.041+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:05:57.041+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:05:57.042+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T17:05:57.042+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:05:57.042+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:05:57.042+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:05:57.042+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:05:57.239+07:00  INFO 23964 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:05:57.260+07:00  INFO 23964 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:05:57.595+07:00  INFO 23964 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41bdaa81
2024-08-06T17:05:57.598+07:00  INFO 23964 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04)
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077)
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da)
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T17:05:57.676+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T17:05:57.677+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T17:05:57.677+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:05:57.677+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:05:57.678+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:05:57.678+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:05:57.679+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:05:57.681+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:05:57.681+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:05:57.683+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4e20a985
2024-08-06T17:05:57.683+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@57e4b86c`
2024-08-06T17:05:57.686+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:05:57.686+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:05:57.686+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:05:57.688+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:05:57.689+07:00 DEBUG 23964 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:05:57.690+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3412a3fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36ecf9f6]
2024-08-06T17:05:58.431+07:00  INFO 23964 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:05:58.432+07:00 DEBUG 23964 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3412a3fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T17:05:58.496+07:00 TRACE 23964 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T17:05:58.497+07:00  INFO 23964 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:05:58.706+07:00  INFO 23964 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:05:59.079+07:00  INFO 23964 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:05:59.085+07:00  WARN 23964 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:05:59.221+07:00  INFO 23964 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6298dafb, com.mongodb.Jep395RecordCodecProvider@30741e9b, com.mongodb.KotlinCodecProvider@1435b17]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:05:59.233+07:00  INFO 23964 --- [Spring_API] [cluster-ClusterId{value='66b1f58797306d29be21981c', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17790500}
2024-08-06T17:05:59.590+07:00  WARN 23964 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:06:00.388+07:00  INFO 23964 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:06:00.395+07:00  INFO 23964 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.989 seconds (process running for 6.488)
2024-08-06T17:06:05.072+07:00  INFO 23964 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:06:05.072+07:00  INFO 23964 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:06:05.073+07:00  INFO 23964 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:06:37.800+07:00  INFO 23964 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:06:37.800+07:00 TRACE 23964 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T17:06:37.800+07:00 DEBUG 23964 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@64be78e8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T17:06:37.801+07:00  INFO 23964 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:06:37.806+07:00  INFO 23964 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:07:55.674+07:00  INFO 27528 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 27528 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:07:55.675+07:00  INFO 27528 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:07:56.194+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:07:56.196+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:07:56.216+07:00  INFO 27528 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:07:56.317+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 115 ms. Found 1 JPA repository interface.
2024-08-06T17:07:56.559+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:07:56.559+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:07:56.572+07:00  INFO 27528 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:07:56.575+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:07:56.584+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:07:56.585+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:07:56.593+07:00  INFO 27528 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:07:56.594+07:00  INFO 27528 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:07:56.594+07:00  INFO 27528 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:07:57.224+07:00  INFO 27528 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:07:57.234+07:00  INFO 27528 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:07:57.234+07:00  INFO 27528 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:07:57.288+07:00  INFO 27528 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:07:57.288+07:00  INFO 27528 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1573 ms
2024-08-06T17:07:57.428+07:00  INFO 27528 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:07:57.459+07:00  INFO 27528 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:07:57.484+07:00  INFO 27528 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:07:57.549+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:07:57.550+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:07:57.551+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:07:57.552+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:07:57.553+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:07:57.554+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:07:57.555+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:07:57.556+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:07:57.559+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:07:57.559+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:07:57.560+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T17:07:57.560+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:07:57.561+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:07:57.733+07:00  INFO 27528 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:07:57.750+07:00  INFO 27528 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:07:57.988+07:00  INFO 27528 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T17:07:57.989+07:00  INFO 27528 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:07:58.064+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:07:58.065+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:07:58.065+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:07:58.066+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:07:58.067+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:07:58.067+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:07:58.069+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T17:07:58.069+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T17:07:58.071+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:07:58.071+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:07:58.071+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:07:58.073+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:07:58.073+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:07:58.074+07:00 DEBUG 27528 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:07:58.075+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T17:07:58.760+07:00  INFO 27528 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:07:58.760+07:00 DEBUG 27528 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:07:58.816+07:00 TRACE 27528 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:07:58.816+07:00  INFO 27528 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:07:59.007+07:00  INFO 27528 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:07:59.382+07:00  INFO 27528 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:07:59.383+07:00  WARN 27528 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:07:59.498+07:00  INFO 27528 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:07:59.508+07:00  INFO 27528 --- [Spring_API] [cluster-ClusterId{value='66b1f5ff539e5969d2dc6a4a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15595400}
2024-08-06T17:07:59.844+07:00  WARN 27528 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:08:00.604+07:00  INFO 27528 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:08:00.614+07:00  INFO 27528 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.295 seconds (process running for 5.66)
2024-08-06T17:08:06.965+07:00  INFO 27528 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:08:06.966+07:00  INFO 27528 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:08:06.967+07:00  INFO 27528 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:08:36.333+07:00  INFO 27528 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:08:36.333+07:00 TRACE 27528 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:08:36.333+07:00 DEBUG 27528 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5fe0f7a7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:08:36.334+07:00  INFO 27528 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:08:36.340+07:00  INFO 27528 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:09:16.758+07:00  INFO 26996 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26996 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:09:16.761+07:00  INFO 26996 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:09:17.333+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:09:17.333+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:09:17.355+07:00  INFO 26996 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:09:17.427+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 1 JPA repository interface.
2024-08-06T17:09:17.667+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:09:17.667+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:09:17.679+07:00  INFO 26996 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:09:17.683+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:09:17.692+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:09:17.693+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:09:17.703+07:00  INFO 26996 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:09:17.703+07:00  INFO 26996 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:09:17.704+07:00  INFO 26996 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:09:18.377+07:00  INFO 26996 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:09:18.390+07:00  INFO 26996 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:09:18.391+07:00  INFO 26996 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:09:18.449+07:00  INFO 26996 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:09:18.450+07:00  INFO 26996 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1646 ms
2024-08-06T17:09:18.579+07:00  INFO 26996 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:09:18.632+07:00  INFO 26996 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:09:18.667+07:00  INFO 26996 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:09:18.727+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:09:18.728+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:09:18.729+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:09:18.730+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:09:18.731+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:09:18.732+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:09:18.733+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:09:18.734+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:09:18.735+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:09:18.742+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:09:18.742+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:09:18.743+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:09:18.744+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:09:18.954+07:00  INFO 26996 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:09:18.972+07:00  INFO 26996 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:09:19.196+07:00  INFO 26996 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:09:19.198+07:00  INFO 26996 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:09:19.266+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:09:19.267+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:09:19.269+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:09:19.269+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:09:19.269+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:09:19.270+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:09:19.270+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:09:19.272+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:09:19.273+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:09:19.276+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:09:19.276+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:09:19.276+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:09:19.279+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:09:19.280+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:09:19.280+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:09:19.280+07:00 DEBUG 26996 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:09:19.281+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:09:19.924+07:00  INFO 26996 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:09:19.924+07:00 DEBUG 26996 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:09:19.971+07:00 TRACE 26996 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:09:19.971+07:00  INFO 26996 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:09:20.143+07:00  INFO 26996 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:09:20.499+07:00  INFO 26996 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:09:20.500+07:00  WARN 26996 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:09:20.622+07:00  INFO 26996 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:09:20.640+07:00  INFO 26996 --- [Spring_API] [cluster-ClusterId{value='66b1f6507b38fa455e754d0a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21460300}
2024-08-06T17:09:20.960+07:00  WARN 26996 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:09:21.680+07:00  INFO 26996 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:09:21.686+07:00  INFO 26996 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.293 seconds (process running for 5.623)
2024-08-06T17:09:29.075+07:00  INFO 26996 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:09:29.076+07:00  INFO 26996 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:09:29.079+07:00  INFO 26996 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-08-06T17:10:15.029+07:00  INFO 26996 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:10:15.030+07:00 TRACE 26996 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:10:15.030+07:00 DEBUG 26996 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@216d5683] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:10:15.031+07:00  INFO 26996 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:10:15.038+07:00  INFO 26996 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:11:03.737+07:00  INFO 5696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 5696 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:11:03.739+07:00  INFO 5696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:11:04.281+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:04.281+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:11:04.303+07:00  INFO 5696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:11:04.394+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interface.
2024-08-06T17:11:04.626+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:04.626+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:11:04.638+07:00  INFO 5696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:11:04.642+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:11:04.651+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:04.651+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:11:04.660+07:00  INFO 5696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:11:04.661+07:00  INFO 5696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:11:04.661+07:00  INFO 5696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:11:05.320+07:00  INFO 5696 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:11:05.333+07:00  INFO 5696 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:11:05.333+07:00  INFO 5696 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:11:05.389+07:00  INFO 5696 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:11:05.389+07:00  INFO 5696 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1607 ms
2024-08-06T17:11:05.520+07:00  INFO 5696 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:11:05.572+07:00  INFO 5696 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:11:05.604+07:00  INFO 5696 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:11:05.660+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:11:05.660+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:11:05.660+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:11:05.661+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:11:05.662+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:11:05.663+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:11:05.664+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:11:05.665+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:11:05.666+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:11:05.667+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:11:05.668+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:11:05.669+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:11:05.670+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:11:05.671+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:11:05.674+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:11:05.674+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:11:05.675+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T17:11:05.675+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:11:05.676+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:11:05.848+07:00  INFO 5696 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:11:05.865+07:00  INFO 5696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:11:06.107+07:00  INFO 5696 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T17:11:06.110+07:00  INFO 5696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:11:06.185+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:11:06.185+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:11:06.185+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:11:06.186+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:11:06.188+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:11:06.188+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:11:06.188+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:11:06.189+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:11:06.189+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:11:06.191+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T17:11:06.191+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T17:11:06.194+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:06.194+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:06.194+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:06.196+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:06.197+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:06.197+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:06.197+07:00 DEBUG 5696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:06.198+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T17:11:06.834+07:00  INFO 5696 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:11:06.835+07:00 DEBUG 5696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:11:06.888+07:00 TRACE 5696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:11:06.889+07:00  INFO 5696 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:11:07.079+07:00  INFO 5696 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:11:07.443+07:00  INFO 5696 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:11:07.444+07:00  WARN 5696 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:11:07.552+07:00  INFO 5696 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:11:07.573+07:00  INFO 5696 --- [Spring_API] [cluster-ClusterId{value='66b1f6bbf6ed87006f26e566', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23828700}
2024-08-06T17:11:07.900+07:00  WARN 5696 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:11:08.643+07:00  INFO 5696 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:11:08.649+07:00  INFO 5696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.275 seconds (process running for 5.615)
2024-08-06T17:11:16.602+07:00  INFO 5696 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:11:16.603+07:00  INFO 5696 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:11:16.606+07:00  INFO 5696 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:11:51.203+07:00  INFO 5696 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:11:51.204+07:00 TRACE 5696 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:11:51.204+07:00 DEBUG 5696 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7219668c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:11:51.204+07:00  INFO 5696 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:11:51.211+07:00  INFO 5696 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:11:57.498+07:00  INFO 25672 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25672 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:11:57.500+07:00  INFO 25672 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:11:58.070+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:58.070+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:11:58.091+07:00  INFO 25672 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:11:58.158+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 1 JPA repository interface.
2024-08-06T17:11:58.399+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:58.399+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:11:58.409+07:00  INFO 25672 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:11:58.412+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T17:11:58.422+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:11:58.423+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:11:58.432+07:00  INFO 25672 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:11:58.433+07:00  INFO 25672 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:11:58.433+07:00  INFO 25672 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:11:59.124+07:00  INFO 25672 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:11:59.137+07:00  INFO 25672 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:11:59.137+07:00  INFO 25672 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:11:59.203+07:00  INFO 25672 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:11:59.203+07:00  INFO 25672 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1662 ms
2024-08-06T17:11:59.333+07:00  INFO 25672 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:11:59.379+07:00  INFO 25672 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:11:59.406+07:00  INFO 25672 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:11:59.468+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:11:59.469+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:59.470+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:11:59.471+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:11:59.472+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:11:59.473+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-06T17:11:59.474+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T17:11:59.475+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-06T17:11:59.475+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T17:11:59.475+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2296127
2024-08-06T17:11:59.475+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-06T17:11:59.475+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-06T17:11:59.478+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T17:11:59.478+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64bba0eb
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@589dfa6f
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@20b829d5
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5280688
2024-08-06T17:11:59.479+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-06T17:11:59.659+07:00  INFO 25672 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:11:59.674+07:00  INFO 25672 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:11:59.920+07:00  INFO 25672 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@470135da
2024-08-06T17:11:59.922+07:00  INFO 25672 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39f68aec)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2759749)
2024-08-06T17:11:59.984+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-06T17:11:59.985+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:11:59.986+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:11:59.986+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:11:59.987+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:11:59.987+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:11:59.989+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@67ecf7ed
2024-08-06T17:11:59.989+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@589dfa6f`
2024-08-06T17:11:59.992+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:59.992+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:59.992+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:59.994+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:11:59.995+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:59.995+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:59.995+07:00 DEBUG 25672 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:11:59.995+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5e62ca19]
2024-08-06T17:12:00.674+07:00  INFO 25672 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:12:00.674+07:00 DEBUG 25672 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@625f5712] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T17:12:00.727+07:00 TRACE 25672 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T17:12:00.727+07:00  INFO 25672 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:12:00.910+07:00  INFO 25672 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:12:01.267+07:00  INFO 25672 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:12:01.267+07:00  WARN 25672 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:12:01.408+07:00  INFO 25672 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@32441ed4, com.mongodb.Jep395RecordCodecProvider@3fc2197d, com.mongodb.KotlinCodecProvider@5a429813]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:12:01.421+07:00  INFO 25672 --- [Spring_API] [cluster-ClusterId{value='66b1f6f1063dfe2f88d62d6b', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16800800}
2024-08-06T17:12:01.745+07:00  WARN 25672 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:12:02.487+07:00  INFO 25672 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:12:02.493+07:00  INFO 25672 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.355 seconds (process running for 5.692)
2024-08-06T17:12:21.984+07:00  INFO 25672 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:12:21.984+07:00  INFO 25672 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:12:21.985+07:00  INFO 25672 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:12:32.463+07:00  INFO 25672 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:12:32.464+07:00 TRACE 25672 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2370c90] for TypeConfiguration
2024-08-06T17:12:32.464+07:00 DEBUG 25672 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@53f9d45] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2370c90]
2024-08-06T17:12:32.465+07:00  INFO 25672 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:12:32.471+07:00  INFO 25672 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:12:51.246+07:00  INFO 5348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 5348 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:12:51.248+07:00  INFO 5348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:12:51.788+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:12:51.788+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:12:51.810+07:00  INFO 5348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:12:51.895+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 99 ms. Found 1 JPA repository interface.
2024-08-06T17:12:52.122+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:12:52.122+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:12:52.133+07:00  INFO 5348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:12:52.138+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:12:52.146+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:12:52.147+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:12:52.156+07:00  INFO 5348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:12:52.157+07:00  INFO 5348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:12:52.157+07:00  INFO 5348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:12:52.790+07:00  INFO 5348 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:12:52.802+07:00  INFO 5348 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:12:52.803+07:00  INFO 5348 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:12:52.855+07:00  INFO 5348 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:12:52.855+07:00  INFO 5348 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1568 ms
2024-08-06T17:12:52.981+07:00  INFO 5348 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:12:53.019+07:00  INFO 5348 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:12:53.043+07:00  INFO 5348 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:12:53.104+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:12:53.105+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:12:53.106+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:12:53.107+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:12:53.108+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:12:53.109+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:12:53.110+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:12:53.111+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:12:53.115+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:12:53.115+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:12:53.116+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:12:53.116+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:12:53.116+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:12:53.116+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:12:53.116+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:12:53.117+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:12:53.117+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:12:53.117+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:12:53.117+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:12:53.282+07:00  INFO 5348 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:12:53.299+07:00  INFO 5348 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:12:53.541+07:00  INFO 5348 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:12:53.544+07:00  INFO 5348 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:12:53.614+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:12:53.614+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:12:53.614+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:12:53.614+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:12:53.614+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:12:53.615+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:12:53.615+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:12:53.615+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:12:53.615+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:12:53.616+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:12:53.616+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:12:53.617+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:12:53.618+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:12:53.618+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:12:53.620+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:12:53.620+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:12:53.623+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:12:53.623+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:12:53.624+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:12:53.625+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:12:53.625+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:12:53.625+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:12:53.626+07:00 DEBUG 5348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:12:53.627+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:12:54.256+07:00  INFO 5348 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:12:54.256+07:00 DEBUG 5348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:12:54.303+07:00 TRACE 5348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:12:54.304+07:00  INFO 5348 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:12:54.489+07:00  INFO 5348 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:12:54.841+07:00  INFO 5348 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:12:54.842+07:00  WARN 5348 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:12:54.972+07:00  INFO 5348 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:12:54.981+07:00  INFO 5348 --- [Spring_API] [cluster-ClusterId{value='66b1f7263656e415e4130fd6', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16895100}
2024-08-06T17:12:55.277+07:00  WARN 5348 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:12:55.985+07:00  INFO 5348 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:12:55.991+07:00  INFO 5348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.114 seconds (process running for 5.446)
2024-08-06T17:13:04.034+07:00  INFO 5348 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:13:04.035+07:00  INFO 5348 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:13:04.035+07:00  INFO 5348 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-06T17:14:40.568+07:00  INFO 5348 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:14:40.569+07:00 TRACE 5348 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:14:40.569+07:00 DEBUG 5348 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a7dfb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:14:40.570+07:00  INFO 5348 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:14:40.577+07:00  INFO 5348 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:17:32.915+07:00  INFO 16256 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16256 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:17:32.918+07:00  INFO 16256 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:17:33.469+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:17:33.469+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:17:33.490+07:00  INFO 16256 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:17:33.578+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-06T17:17:33.811+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:17:33.811+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:17:33.824+07:00  INFO 16256 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:17:33.827+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:17:33.836+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:17:33.837+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:17:33.845+07:00  INFO 16256 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:17:33.846+07:00  INFO 16256 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:17:33.846+07:00  INFO 16256 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:17:34.508+07:00  INFO 16256 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:17:34.526+07:00  INFO 16256 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:17:34.527+07:00  INFO 16256 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:17:34.580+07:00  INFO 16256 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:17:34.581+07:00  INFO 16256 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1619 ms
2024-08-06T17:17:34.751+07:00  INFO 16256 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:17:34.825+07:00  INFO 16256 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:17:34.861+07:00  INFO 16256 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:17:34.926+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:17:34.926+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:17:34.926+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:17:34.927+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:17:34.928+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:17:34.929+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:17:34.930+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:17:34.932+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:17:34.933+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:17:34.934+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:17:34.934+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:17:34.935+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:17:34.935+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:17:34.935+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:17:34.936+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:17:34.937+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:17:34.938+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:17:34.939+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:17:34.947+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:17:34.948+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:17:34.949+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T17:17:34.949+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:17:34.949+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:17:34.950+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:17:35.148+07:00  INFO 16256 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:17:35.168+07:00  INFO 16256 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:17:35.480+07:00  INFO 16256 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T17:17:35.482+07:00  INFO 16256 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:17:35.560+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:17:35.561+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:17:35.562+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:17:35.562+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:17:35.563+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:17:35.564+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:17:35.564+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:17:35.567+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T17:17:35.567+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T17:17:35.569+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:17:35.570+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:17:35.570+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:17:35.572+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:17:35.573+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:17:35.573+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:17:35.573+07:00 DEBUG 16256 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:17:35.573+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T17:17:36.267+07:00  INFO 16256 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:17:36.267+07:00 DEBUG 16256 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:17:36.325+07:00 TRACE 16256 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:17:36.326+07:00  INFO 16256 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:17:36.529+07:00  INFO 16256 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:17:36.886+07:00  INFO 16256 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:17:36.890+07:00  WARN 16256 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:17:37.010+07:00  INFO 16256 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7a1148f2, com.mongodb.Jep395RecordCodecProvider@641bd93e, com.mongodb.KotlinCodecProvider@62d10834]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:17:37.026+07:00  INFO 16256 --- [Spring_API] [cluster-ClusterId{value='66b1f840f329b50f0ad9b2f5', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20041600}
2024-08-06T17:17:37.373+07:00  WARN 16256 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:17:38.100+07:00  INFO 16256 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:17:38.105+07:00  INFO 16256 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.57 seconds (process running for 5.947)
2024-08-06T17:17:43.783+07:00  INFO 16256 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:17:43.783+07:00  INFO 16256 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:17:43.784+07:00  INFO 16256 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:18:13.828+07:00  INFO 16256 --- [Spring_API] [http-nio-8080-exec-3] c.e.s.c.AuthenticationController         : User logout!
2024-08-06T17:19:29.441+07:00  INFO 16256 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:19:29.442+07:00 TRACE 16256 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:19:29.442+07:00 DEBUG 16256 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@546d020a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:19:29.443+07:00  INFO 16256 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:19:29.450+07:00  INFO 16256 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:19:38.165+07:00  INFO 2848 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2848 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:19:38.169+07:00  INFO 2848 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:19:38.719+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:19:38.719+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:19:38.742+07:00  INFO 2848 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:19:38.826+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 1 JPA repository interface.
2024-08-06T17:19:39.060+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:19:39.061+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:19:39.073+07:00  INFO 2848 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:19:39.076+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:19:39.085+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:19:39.086+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:19:39.096+07:00  INFO 2848 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:19:39.096+07:00  INFO 2848 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:19:39.096+07:00  INFO 2848 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:19:39.755+07:00  INFO 2848 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:19:39.774+07:00  INFO 2848 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:19:39.774+07:00  INFO 2848 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:19:39.830+07:00  INFO 2848 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:19:39.831+07:00  INFO 2848 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1619 ms
2024-08-06T17:19:39.963+07:00  INFO 2848 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:19:40.009+07:00  INFO 2848 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:19:40.035+07:00  INFO 2848 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:19:40.097+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:19:40.098+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:19:40.099+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:19:40.100+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:19:40.101+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:19:40.102+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:19:40.103+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:19:40.104+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:19:40.104+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:19:40.104+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:19:40.110+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:19:40.110+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:19:40.111+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:19:40.112+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:19:40.315+07:00  INFO 2848 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:19:40.333+07:00  INFO 2848 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:19:40.581+07:00  INFO 2848 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:19:40.583+07:00  INFO 2848 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:19:40.648+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:19:40.648+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:19:40.648+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:19:40.649+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:19:40.651+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:19:40.651+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:19:40.652+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:19:40.653+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:19:40.653+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:19:40.655+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:19:40.655+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:19:40.657+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:19:40.657+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:19:40.658+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:19:40.659+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:19:40.660+07:00 DEBUG 2848 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:19:40.661+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:19:41.339+07:00  INFO 2848 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:19:41.339+07:00 DEBUG 2848 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:19:41.394+07:00 TRACE 2848 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:19:41.395+07:00  INFO 2848 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:19:41.569+07:00  INFO 2848 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:19:41.940+07:00  INFO 2848 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:19:41.941+07:00  WARN 2848 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:19:42.069+07:00  INFO 2848 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@68c06a2, com.mongodb.Jep395RecordCodecProvider@5a95090a, com.mongodb.KotlinCodecProvider@34ccce55]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:19:42.080+07:00  INFO 2848 --- [Spring_API] [cluster-ClusterId{value='66b1f8be8125c63332f0468a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16496000}
2024-08-06T17:19:42.394+07:00  WARN 2848 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:19:43.079+07:00  INFO 2848 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:19:43.085+07:00  INFO 2848 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.284 seconds (process running for 5.61)
2024-08-06T17:19:51.579+07:00  INFO 2848 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:19:51.580+07:00  INFO 2848 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:19:51.582+07:00  INFO 2848 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:21:06.565+07:00  INFO 2848 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:21:06.566+07:00 TRACE 2848 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:21:06.566+07:00 DEBUG 2848 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45c220da] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:21:06.567+07:00  INFO 2848 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:21:06.574+07:00  INFO 2848 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:21:14.564+07:00  INFO 3812 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 3812 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:21:14.566+07:00  INFO 3812 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:21:15.113+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:15.113+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:21:15.134+07:00  INFO 3812 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:21:15.217+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 97 ms. Found 1 JPA repository interface.
2024-08-06T17:21:15.437+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:15.438+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:21:15.448+07:00  INFO 3812 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:21:15.452+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T17:21:15.462+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:15.463+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:21:15.472+07:00  INFO 3812 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:21:15.473+07:00  INFO 3812 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:21:15.473+07:00  INFO 3812 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:21:16.112+07:00  INFO 3812 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:21:16.122+07:00  INFO 3812 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:21:16.123+07:00  INFO 3812 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:21:16.172+07:00  INFO 3812 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:21:16.173+07:00  INFO 3812 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1567 ms
2024-08-06T17:21:16.304+07:00  INFO 3812 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:21:16.351+07:00  INFO 3812 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:21:16.374+07:00  INFO 3812 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:21:16.431+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:21:16.432+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:21:16.433+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:21:16.434+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:21:16.435+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:21:16.436+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:21:16.437+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:21:16.438+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:21:16.438+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:21:16.438+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:21:16.438+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:21:16.438+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:21:16.439+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:21:16.442+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:21:16.442+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:21:16.444+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:21:16.445+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:21:16.589+07:00  INFO 3812 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:21:16.608+07:00  INFO 3812 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:21:16.856+07:00  INFO 3812 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T17:21:16.858+07:00  INFO 3812 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:21:16.923+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:21:16.923+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:21:16.924+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:21:16.925+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:21:16.925+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:21:16.926+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:21:16.927+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:21:16.927+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:21:16.929+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T17:21:16.929+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T17:21:16.932+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:21:16.932+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:21:16.932+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:21:16.934+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:21:16.935+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:21:16.935+07:00 DEBUG 3812 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:21:16.935+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T17:21:17.622+07:00  INFO 3812 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:21:17.623+07:00 DEBUG 3812 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:21:17.680+07:00 TRACE 3812 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:21:17.680+07:00  INFO 3812 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:21:17.881+07:00  INFO 3812 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:21:18.242+07:00  INFO 3812 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:21:18.242+07:00  WARN 3812 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:21:18.375+07:00  INFO 3812 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@34f4fd04, com.mongodb.Jep395RecordCodecProvider@445265b0, com.mongodb.KotlinCodecProvider@7eba962d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:21:18.390+07:00  INFO 3812 --- [Spring_API] [cluster-ClusterId{value='66b1f91e343d417877a26e0a', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18770300}
2024-08-06T17:21:18.734+07:00  WARN 3812 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:21:19.501+07:00  INFO 3812 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:21:19.506+07:00  INFO 3812 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.309 seconds (process running for 5.622)
2024-08-06T17:21:27.174+07:00  INFO 3812 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:21:27.175+07:00  INFO 3812 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:21:27.177+07:00  INFO 3812 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:21:35.068+07:00  INFO 3812 --- [Spring_API] [http-nio-8080-exec-5] c.e.s.c.AuthenticationController         : User logout!
2024-08-06T17:21:52.202+07:00  INFO 3812 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:21:52.203+07:00 TRACE 3812 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:21:52.203+07:00 DEBUG 3812 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e9484d3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:21:52.204+07:00  INFO 3812 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:21:52.209+07:00  INFO 3812 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:21:58.493+07:00  INFO 26892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26892 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:21:58.495+07:00  INFO 26892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:21:59.051+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:59.052+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:21:59.073+07:00  INFO 26892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:21:59.160+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 101 ms. Found 1 JPA repository interface.
2024-08-06T17:21:59.397+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:59.397+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:21:59.407+07:00  INFO 26892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:21:59.410+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T17:21:59.420+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:21:59.421+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:21:59.430+07:00  INFO 26892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:21:59.431+07:00  INFO 26892 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:21:59.431+07:00  INFO 26892 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:22:00.087+07:00  INFO 26892 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:22:00.100+07:00  INFO 26892 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:22:00.100+07:00  INFO 26892 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:22:00.151+07:00  INFO 26892 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:22:00.151+07:00  INFO 26892 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1614 ms
2024-08-06T17:22:00.295+07:00  INFO 26892 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:22:00.346+07:00  INFO 26892 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:22:00.371+07:00  INFO 26892 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:22:00.430+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:22:00.431+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:00.432+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:22:00.433+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:22:00.434+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:22:00.435+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:22:00.436+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:22:00.437+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:22:00.438+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:22:00.442+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@2de3b052
2024-08-06T17:22:00.443+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2de3b052
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@99c4993
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:22:00.444+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:22:00.445+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:22:00.611+07:00  INFO 26892 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:22:00.628+07:00  INFO 26892 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:22:00.873+07:00  INFO 26892 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30e143ff
2024-08-06T17:22:00.875+07:00  INFO 26892 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:22:00.937+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T17:22:00.937+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85)
2024-08-06T17:22:00.938+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T17:22:00.939+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:22:00.939+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:22:00.939+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:22:00.940+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:22:00.941+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:22:00.943+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6dd2e453
2024-08-06T17:22:00.943+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@99c4993`
2024-08-06T17:22:00.945+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:00.945+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:00.945+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:00.947+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:00.947+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:00.948+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:00.948+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:00.948+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:00.948+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:00.948+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:00.949+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:00.949+07:00 DEBUG 26892 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:00.950+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c0cf193] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3dd66ff5]
2024-08-06T17:22:01.607+07:00  INFO 26892 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:22:01.607+07:00 DEBUG 26892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c0cf193] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1f05d08c]
2024-08-06T17:22:01.654+07:00 TRACE 26892 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1f05d08c] for TypeConfiguration
2024-08-06T17:22:01.654+07:00  INFO 26892 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:22:01.830+07:00  INFO 26892 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:22:02.204+07:00  INFO 26892 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:22:02.204+07:00  WARN 26892 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:22:02.351+07:00  INFO 26892 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6298dafb, com.mongodb.Jep395RecordCodecProvider@30741e9b, com.mongodb.KotlinCodecProvider@1435b17]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:22:02.361+07:00  INFO 26892 --- [Spring_API] [cluster-ClusterId{value='66b1f94a8aba6631ae303a34', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21713300}
2024-08-06T17:22:02.688+07:00  WARN 26892 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:22:03.431+07:00  INFO 26892 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:22:03.439+07:00  INFO 26892 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.315 seconds (process running for 5.631)
2024-08-06T17:22:11.334+07:00  INFO 26892 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:22:11.335+07:00  INFO 26892 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:22:11.336+07:00  INFO 26892 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:22:25.401+07:00  INFO 26892 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:22:25.402+07:00 TRACE 26892 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1f05d08c] for TypeConfiguration
2024-08-06T17:22:25.402+07:00 DEBUG 26892 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cfeba76] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1f05d08c]
2024-08-06T17:22:25.403+07:00  INFO 26892 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:22:25.409+07:00  INFO 26892 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:22:40.595+07:00  INFO 27016 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 27016 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:22:40.597+07:00  INFO 27016 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:22:41.164+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:22:41.164+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:22:41.186+07:00  INFO 27016 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:22:41.257+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 86 ms. Found 1 JPA repository interface.
2024-08-06T17:22:41.493+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:22:41.493+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:22:41.503+07:00  INFO 27016 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:22:41.507+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:22:41.517+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:22:41.518+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:22:41.527+07:00  INFO 27016 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:22:41.528+07:00  INFO 27016 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:22:41.528+07:00  INFO 27016 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:22:42.187+07:00  INFO 27016 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:22:42.200+07:00  INFO 27016 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:22:42.200+07:00  INFO 27016 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:22:42.257+07:00  INFO 27016 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:22:42.258+07:00  INFO 27016 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1618 ms
2024-08-06T17:22:42.408+07:00  INFO 27016 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:22:42.477+07:00  INFO 27016 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:22:42.504+07:00  INFO 27016 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:22:42.560+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:22:42.561+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:22:42.562+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:42.563+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:22:42.564+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:22:42.565+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:22:42.566+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:22:42.567+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:22:42.568+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:22:42.569+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:22:42.569+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:22:42.569+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:22:42.569+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:22:42.569+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:22:42.573+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:22:42.573+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:22:42.574+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:22:42.575+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:22:42.754+07:00  INFO 27016 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:22:42.772+07:00  INFO 27016 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:22:43.022+07:00  INFO 27016 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:22:43.024+07:00  INFO 27016 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:22:43.089+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:22:43.090+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:22:43.090+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:22:43.090+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:22:43.091+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:22:43.091+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:22:43.091+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:22:43.093+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:22:43.093+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:22:43.095+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:22:43.095+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:22:43.098+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:43.098+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:43.098+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:22:43.100+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:43.100+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:43.101+07:00 DEBUG 27016 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:22:43.102+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:22:43.776+07:00  INFO 27016 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:22:43.776+07:00 DEBUG 27016 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:22:43.831+07:00 TRACE 27016 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:22:43.831+07:00  INFO 27016 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:22:44.033+07:00  INFO 27016 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:22:44.385+07:00  INFO 27016 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:22:44.386+07:00  WARN 27016 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:22:44.529+07:00  INFO 27016 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:22:44.542+07:00  INFO 27016 --- [Spring_API] [cluster-ClusterId{value='66b1f9746f22cc20e1762e42', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17781800}
2024-08-06T17:22:44.880+07:00  WARN 27016 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:22:45.627+07:00  INFO 27016 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:22:45.633+07:00  INFO 27016 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.401 seconds (process running for 5.744)
2024-08-06T17:22:59.714+07:00  INFO 27016 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:22:59.714+07:00  INFO 27016 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:22:59.716+07:00  INFO 27016 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:23:17.535+07:00  INFO 27016 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:23:17.535+07:00 TRACE 27016 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:23:17.536+07:00 DEBUG 27016 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@437fc538] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:23:17.536+07:00  INFO 27016 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:23:17.542+07:00  INFO 27016 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:23:22.473+07:00  INFO 26548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26548 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:23:22.475+07:00  INFO 26548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:23:23.008+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:23:23.009+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:23:23.028+07:00  INFO 26548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:23:23.134+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 119 ms. Found 1 JPA repository interface.
2024-08-06T17:23:23.374+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:23:23.374+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:23:23.386+07:00  INFO 26548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:23:23.389+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:23:23.401+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:23:23.402+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:23:23.412+07:00  INFO 26548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:23:23.412+07:00  INFO 26548 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:23:23.412+07:00  INFO 26548 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:23:24.053+07:00  INFO 26548 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:23:24.065+07:00  INFO 26548 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:23:24.065+07:00  INFO 26548 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:23:24.116+07:00  INFO 26548 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:23:24.117+07:00  INFO 26548 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1602 ms
2024-08-06T17:23:24.249+07:00  INFO 26548 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:23:24.308+07:00  INFO 26548 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:23:24.349+07:00  INFO 26548 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:23:24.404+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:23:24.405+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:23:24.406+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:23:24.407+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:23:24.408+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:23:24.409+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:23:24.410+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:23:24.411+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:23:24.415+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:23:24.415+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:23:24.416+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:23:24.573+07:00  INFO 26548 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:23:24.591+07:00  INFO 26548 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:23:24.833+07:00  INFO 26548 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T17:23:24.835+07:00  INFO 26548 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:23:24.904+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:23:24.905+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:23:24.907+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:23:24.907+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:23:24.907+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:23:24.909+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:23:24.909+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:23:24.911+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T17:23:24.911+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T17:23:24.914+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:23:24.914+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:23:24.914+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:23:24.916+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:23:24.917+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:23:24.917+07:00 DEBUG 26548 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:23:24.917+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T17:23:25.576+07:00  INFO 26548 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:23:25.576+07:00 DEBUG 26548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:23:25.629+07:00 TRACE 26548 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:23:25.629+07:00  INFO 26548 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:23:25.798+07:00  INFO 26548 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:23:26.147+07:00  INFO 26548 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:23:26.148+07:00  WARN 26548 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:23:26.271+07:00  INFO 26548 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:23:26.281+07:00  INFO 26548 --- [Spring_API] [cluster-ClusterId{value='66b1f99e12b859747096f5b2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16853800}
2024-08-06T17:23:26.627+07:00  WARN 26548 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:23:27.329+07:00  INFO 26548 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:23:27.336+07:00  INFO 26548 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.217 seconds (process running for 5.555)
2024-08-06T17:23:33.705+07:00  INFO 26548 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:23:33.706+07:00  INFO 26548 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:23:33.707+07:00  INFO 26548 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:23:50.946+07:00  INFO 26548 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:23:50.946+07:00 TRACE 26548 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:23:50.946+07:00 DEBUG 26548 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@578ff90a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:23:50.947+07:00  INFO 26548 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:23:50.953+07:00  INFO 26548 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:24:03.630+07:00  INFO 2780 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2780 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:24:03.631+07:00  INFO 2780 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:24:04.219+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:24:04.219+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:24:04.244+07:00  INFO 2780 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:24:04.318+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 1 JPA repository interface.
2024-08-06T17:24:04.546+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:24:04.547+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:24:04.558+07:00  INFO 2780 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:24:04.561+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:24:04.570+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:24:04.571+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:24:04.579+07:00  INFO 2780 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:24:04.580+07:00  INFO 2780 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:24:04.580+07:00  INFO 2780 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:24:05.219+07:00  INFO 2780 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:24:05.233+07:00  INFO 2780 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:24:05.233+07:00  INFO 2780 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:24:05.286+07:00  INFO 2780 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:24:05.286+07:00  INFO 2780 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1611 ms
2024-08-06T17:24:05.417+07:00  INFO 2780 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:24:05.477+07:00  INFO 2780 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:24:05.499+07:00  INFO 2780 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:24:05.553+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:24:05.554+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:24:05.554+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:24:05.554+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:24:05.554+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:24:05.555+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:24:05.556+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:24:05.557+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:24:05.558+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:24:05.559+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:24:05.560+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-06T17:24:05.561+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-06T17:24:05.564+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:24:05.565+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-06T17:24:05.565+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-06T17:24:05.566+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-06T17:24:05.733+07:00  INFO 2780 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:24:05.748+07:00  INFO 2780 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:24:05.988+07:00  INFO 2780 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-06T17:24:05.991+07:00  INFO 2780 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:24:06.052+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-06T17:24:06.053+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-06T17:24:06.054+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:24:06.055+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:24:06.055+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:24:06.056+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:24:06.056+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:24:06.058+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-06T17:24:06.058+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-06T17:24:06.061+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:24:06.061+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:24:06.061+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:24:06.063+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:24:06.064+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:24:06.064+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:24:06.064+07:00 DEBUG 2780 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:24:06.065+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-06T17:24:06.719+07:00  INFO 2780 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:24:06.719+07:00 DEBUG 2780 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T17:24:06.766+07:00 TRACE 2780 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T17:24:06.767+07:00  INFO 2780 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:24:06.954+07:00  INFO 2780 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:24:07.315+07:00  INFO 2780 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:24:07.315+07:00  WARN 2780 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:24:07.436+07:00  INFO 2780 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76a41af0, com.mongodb.Jep395RecordCodecProvider@7a1148f2, com.mongodb.KotlinCodecProvider@641bd93e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:24:07.445+07:00  INFO 2780 --- [Spring_API] [cluster-ClusterId{value='66b1f9c7c346a43996f8c01f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14207800}
2024-08-06T17:24:07.773+07:00  WARN 2780 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:24:08.501+07:00  INFO 2780 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:24:08.506+07:00  INFO 2780 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.257 seconds (process running for 5.582)
2024-08-06T17:24:18.063+07:00  INFO 2780 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:24:18.064+07:00  INFO 2780 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:24:18.064+07:00  INFO 2780 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-06T17:24:20.366+07:00 ERROR 2780 --- [Spring_API] [http-nio-8080-exec-2] c.e.s.c.AuthenticationController         : Error: 

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T17:24:31.272+07:00 ERROR 2780 --- [Spring_API] [http-nio-8080-exec-7] c.e.s.c.AuthenticationController         : Error: 

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:80) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T17:24:38.596+07:00  INFO 2780 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:24:38.597+07:00 TRACE 2780 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T17:24:38.597+07:00 DEBUG 2780 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@70f20555] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T17:24:38.598+07:00  INFO 2780 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:24:38.606+07:00  INFO 2780 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:27:24.100+07:00  INFO 11472 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 11472 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:27:24.101+07:00  INFO 11472 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:27:24.683+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:27:24.684+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:27:24.708+07:00  INFO 11472 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:27:24.826+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 135 ms. Found 1 JPA repository interface.
2024-08-06T17:27:25.100+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:27:25.101+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:27:25.113+07:00  INFO 11472 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:27:25.116+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:27:25.126+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:27:25.127+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:27:25.137+07:00  INFO 11472 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:27:25.137+07:00  INFO 11472 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:27:25.137+07:00  INFO 11472 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:27:25.817+07:00  INFO 11472 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:27:25.837+07:00  INFO 11472 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:27:25.838+07:00  INFO 11472 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:27:25.891+07:00  INFO 11472 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:27:25.891+07:00  INFO 11472 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1750 ms
2024-08-06T17:27:26.046+07:00  INFO 11472 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:27:26.104+07:00  INFO 11472 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:27:26.134+07:00  INFO 11472 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:27:26.219+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:27:26.219+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:27:26.220+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:27:26.220+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:27:26.220+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:27:26.221+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:27:26.221+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:27:26.221+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:27:26.221+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:27:26.222+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:27:26.222+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:27:26.222+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:27:26.223+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:27:26.224+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:27:26.225+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:27:26.226+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:27:26.227+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:27:26.228+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:27:26.229+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:27:26.235+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:27:26.236+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:27:26.237+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T17:27:26.237+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:27:26.237+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:27:26.238+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:27:26.440+07:00  INFO 11472 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:27:26.461+07:00  INFO 11472 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:27:26.893+07:00  INFO 11472 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T17:27:26.895+07:00  INFO 11472 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:27:26.985+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:27:26.986+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:27:26.986+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:27:26.986+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:27:26.986+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:27:26.986+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:27:26.987+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:27:26.987+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:27:26.987+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:27:26.988+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:27:26.988+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:27:26.989+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:27:26.990+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:27:26.991+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:27:26.993+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T17:27:26.994+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T17:27:26.996+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:27:26.996+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:27:26.997+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:27:26.998+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:27:26.999+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:27:26.999+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:27:26.999+07:00 DEBUG 11472 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:27:27.000+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T17:27:27.744+07:00  INFO 11472 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:27:27.745+07:00 DEBUG 11472 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T17:27:27.803+07:00 TRACE 11472 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T17:27:27.804+07:00  INFO 11472 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:27:27.995+07:00  INFO 11472 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:27:28.415+07:00  INFO 11472 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:27:28.415+07:00  WARN 11472 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:27:28.564+07:00  INFO 11472 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1fc02a84, com.mongodb.Jep395RecordCodecProvider@4c04188, com.mongodb.KotlinCodecProvider@76a41af0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:27:28.585+07:00  INFO 11472 --- [Spring_API] [cluster-ClusterId{value='66b1fa90ce10810c8285c4f0', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25548600}
2024-08-06T17:27:28.969+07:00  WARN 11472 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:27:29.790+07:00  INFO 11472 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:27:29.796+07:00  INFO 11472 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.098 seconds (process running for 6.557)
2024-08-06T17:27:41.461+07:00  INFO 11472 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:27:41.462+07:00  INFO 11472 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:27:41.463+07:00  INFO 11472 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:28:47.435+07:00  INFO 11472 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:28:47.436+07:00 TRACE 11472 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T17:28:47.436+07:00 DEBUG 11472 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@424c607d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T17:28:47.437+07:00  INFO 11472 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:28:47.443+07:00  INFO 11472 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:33:05.226+07:00  INFO 24332 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 24332 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:33:05.228+07:00  INFO 24332 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:33:05.871+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:33:05.872+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:33:05.897+07:00  INFO 24332 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:33:06.007+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 128 ms. Found 1 JPA repository interface.
2024-08-06T17:33:06.281+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:33:06.281+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:33:06.293+07:00  INFO 24332 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:33:06.296+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:33:06.307+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:33:06.308+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:33:06.319+07:00  INFO 24332 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:33:06.319+07:00  INFO 24332 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:33:06.319+07:00  INFO 24332 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:33:07.039+07:00  INFO 24332 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:33:07.061+07:00  INFO 24332 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:33:07.061+07:00  INFO 24332 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:33:07.129+07:00  INFO 24332 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:33:07.129+07:00  INFO 24332 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1859 ms
2024-08-06T17:33:07.325+07:00  INFO 24332 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:33:07.394+07:00  INFO 24332 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:33:07.427+07:00  INFO 24332 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:33:07.500+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:33:07.501+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:33:07.502+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:33:07.503+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:33:07.504+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:33:07.505+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:33:07.506+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:33:07.507+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:33:07.508+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:33:07.509+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:33:07.510+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1152900
2024-08-06T17:33:07.514+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@99c4993
2024-08-06T17:33:07.514+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@99c4993
2024-08-06T17:33:07.515+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@54f2df29
2024-08-06T17:33:07.515+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:33:07.516+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@43588265
2024-08-06T17:33:07.705+07:00  INFO 24332 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:33:07.729+07:00  INFO 24332 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:33:08.043+07:00  INFO 24332 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a3c4b3e
2024-08-06T17:33:08.045+07:00  INFO 24332 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:33:08.120+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:33:08.120+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:33:08.121+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70421a08) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc)
2024-08-06T17:33:08.122+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:33:08.122+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:33:08.123+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:33:08.124+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:33:08.124+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:33:08.126+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@7438c3d5
2024-08-06T17:33:08.126+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@54f2df29`
2024-08-06T17:33:08.128+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:33:08.129+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:33:08.129+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:33:08.131+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:33:08.132+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:33:08.132+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:33:08.132+07:00 DEBUG 24332 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:33:08.133+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73e399cc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3dd591b9]
2024-08-06T17:33:08.847+07:00  INFO 24332 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:33:08.847+07:00 DEBUG 24332 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73e399cc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T17:33:08.906+07:00 TRACE 24332 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T17:33:08.906+07:00  INFO 24332 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:33:09.100+07:00  INFO 24332 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:33:09.461+07:00  INFO 24332 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:33:09.462+07:00  WARN 24332 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:33:09.593+07:00  INFO 24332 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@445265b0, com.mongodb.Jep395RecordCodecProvider@7eba962d, com.mongodb.KotlinCodecProvider@1440a166]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:33:09.616+07:00  INFO 24332 --- [Spring_API] [cluster-ClusterId{value='66b1fbe5c212921350f1e76d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25245300}
2024-08-06T17:33:09.957+07:00  WARN 24332 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:33:10.720+07:00  INFO 24332 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:33:10.726+07:00  INFO 24332 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.926 seconds (process running for 6.376)
2024-08-06T17:33:23.674+07:00  INFO 24332 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:33:23.675+07:00  INFO 24332 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:33:23.676+07:00  INFO 24332 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:35:44.777+07:00  INFO 24332 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:35:44.778+07:00 TRACE 24332 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4bd1b07d] for TypeConfiguration
2024-08-06T17:35:44.778+07:00 DEBUG 24332 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@199d07dd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4bd1b07d]
2024-08-06T17:35:44.780+07:00  INFO 24332 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:35:44.787+07:00  INFO 24332 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:35:51.202+07:00  INFO 25788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25788 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:35:51.204+07:00  INFO 25788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:35:51.794+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:35:51.795+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:35:51.816+07:00  INFO 25788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:35:51.902+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 1 JPA repository interface.
2024-08-06T17:35:52.157+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:35:52.158+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:35:52.168+07:00  INFO 25788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:35:52.171+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13 ms. Found 1 MongoDB repository interface.
2024-08-06T17:35:52.180+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:35:52.181+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:35:52.191+07:00  INFO 25788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:35:52.192+07:00  INFO 25788 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:35:52.192+07:00  INFO 25788 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:35:52.865+07:00  INFO 25788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:35:52.887+07:00  INFO 25788 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:35:52.888+07:00  INFO 25788 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:35:52.943+07:00  INFO 25788 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:35:52.943+07:00  INFO 25788 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1696 ms
2024-08-06T17:35:53.098+07:00  INFO 25788 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:35:53.170+07:00  INFO 25788 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:35:53.204+07:00  INFO 25788 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:35:53.265+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T17:35:53.265+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T17:35:53.265+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2cee5365
2024-08-06T17:35:53.265+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T17:35:53.265+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@796c68bf
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56d6a1b1
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a7163e3
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@44da7eb3
2024-08-06T17:35:53.266+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:35:53.267+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:35:53.268+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:35:53.269+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:35:53.270+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:35:53.271+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:35:53.272+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:35:53.273+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:35:53.274+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:35:53.275+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:35:53.275+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:35:53.275+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:35:53.275+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:35:53.279+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T17:35:53.280+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@61a704d3
2024-08-06T17:35:53.281+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@b3857e2
2024-08-06T17:35:53.281+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25a290ee
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4052913c
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@99c4993
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@38089dae
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5dfd31f4
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:35:53.282+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:35:53.474+07:00  INFO 25788 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:35:53.494+07:00  INFO 25788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:35:53.798+07:00  INFO 25788 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7507d96c
2024-08-06T17:35:53.800+07:00  INFO 25788 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@23d978b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cf70afa)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66dd04e2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@495e8a3)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a7aa675) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@602a3237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b511e61)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a74070) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6c6919ff)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de335cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da)
2024-08-06T17:35:53.890+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e)
2024-08-06T17:35:53.891+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:35:53.892+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:35:53.892+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:35:53.893+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:35:53.893+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:35:53.896+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@57920d6c
2024-08-06T17:35:53.896+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b3857e2`
2024-08-06T17:35:53.899+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:35:53.899+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:35:53.900+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:35:53.902+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:35:53.903+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:35:53.903+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:35:53.903+07:00 DEBUG 25788 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:35:53.904+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@190bf8e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a8b7e11]
2024-08-06T17:35:54.620+07:00  INFO 25788 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:35:54.620+07:00 DEBUG 25788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@190bf8e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7207f3c2]
2024-08-06T17:35:54.672+07:00 TRACE 25788 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7207f3c2] for TypeConfiguration
2024-08-06T17:35:54.673+07:00  INFO 25788 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:35:54.856+07:00  INFO 25788 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:35:55.250+07:00  INFO 25788 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:35:55.250+07:00  WARN 25788 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:35:55.373+07:00  INFO 25788 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7e544223, com.mongodb.Jep395RecordCodecProvider@c6c5b66, com.mongodb.KotlinCodecProvider@2f803d8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:35:55.385+07:00  INFO 25788 --- [Spring_API] [cluster-ClusterId{value='66b1fc8b40db0511e724bd65', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16733300}
2024-08-06T17:35:55.736+07:00  WARN 25788 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:35:56.484+07:00  INFO 25788 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:35:56.491+07:00  INFO 25788 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.67 seconds (process running for 6.054)
2024-08-06T17:36:04.242+07:00  INFO 25788 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:36:04.242+07:00  INFO 25788 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:36:04.243+07:00  INFO 25788 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:36:19.545+07:00  INFO 25788 --- [Spring_API] [http-nio-8080-exec-8] c.e.s.c.AuthenticationController         : User logout!
2024-08-06T17:36:40.192+07:00  INFO 25788 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:36:40.193+07:00 TRACE 25788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7207f3c2] for TypeConfiguration
2024-08-06T17:36:40.193+07:00 DEBUG 25788 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2d4bc5b8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7207f3c2]
2024-08-06T17:36:40.193+07:00  INFO 25788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:36:40.201+07:00  INFO 25788 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:38:06.068+07:00  INFO 5220 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 5220 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:38:06.071+07:00  INFO 5220 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:38:06.627+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:38:06.627+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:38:06.646+07:00  INFO 5220 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:38:06.715+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 82 ms. Found 1 JPA repository interface.
2024-08-06T17:38:06.943+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:38:06.944+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:38:06.956+07:00  INFO 5220 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:38:06.959+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:38:06.967+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:38:06.968+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:38:06.978+07:00  INFO 5220 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:38:06.978+07:00  INFO 5220 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:38:06.978+07:00  INFO 5220 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:38:07.625+07:00  INFO 5220 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:38:07.648+07:00  INFO 5220 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:38:07.648+07:00  INFO 5220 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:38:07.697+07:00  INFO 5220 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:38:07.698+07:00  INFO 5220 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1587 ms
2024-08-06T17:38:07.838+07:00  INFO 5220 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:38:07.897+07:00  INFO 5220 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:38:07.927+07:00  INFO 5220 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:38:07.995+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:38:07.996+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:38:07.997+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:38:07.998+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:38:07.999+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:38:08.000+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:38:08.001+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:38:08.002+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:38:08.003+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:38:08.005+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:38:08.007+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:38:08.012+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:38:08.012+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:38:08.013+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:38:08.014+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:38:08.201+07:00  INFO 5220 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:38:08.219+07:00  INFO 5220 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:38:08.457+07:00  INFO 5220 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:38:08.458+07:00  INFO 5220 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:38:08.542+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:38:08.542+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:38:08.543+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:38:08.545+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:38:08.545+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:38:08.546+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:38:08.548+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:38:08.549+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:38:08.550+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:38:08.550+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:38:08.552+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:38:08.552+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:38:08.553+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:38:08.554+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:38:08.555+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:38:08.556+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:38:08.556+07:00 DEBUG 5220 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:38:08.556+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:38:09.195+07:00  INFO 5220 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:38:09.196+07:00 DEBUG 5220 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:38:09.251+07:00 TRACE 5220 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:38:09.251+07:00  INFO 5220 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:38:09.429+07:00  INFO 5220 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:38:09.793+07:00  INFO 5220 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:38:09.793+07:00  WARN 5220 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:38:09.915+07:00  INFO 5220 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:38:09.924+07:00  INFO 5220 --- [Spring_API] [cluster-ClusterId{value='66b1fd117272b76f20b8ea9e', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14261700}
2024-08-06T17:38:10.236+07:00  WARN 5220 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:38:10.968+07:00  INFO 5220 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:38:10.975+07:00  INFO 5220 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.298 seconds (process running for 5.639)
2024-08-06T17:38:24.656+07:00  INFO 5220 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:38:24.657+07:00  INFO 5220 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:38:24.659+07:00  INFO 5220 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:38:40.832+07:00  INFO 5220 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:38:40.832+07:00 TRACE 5220 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:38:40.832+07:00 DEBUG 5220 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4570aee9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:38:40.833+07:00  INFO 5220 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:38:40.839+07:00  INFO 5220 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:41:16.050+07:00  INFO 23808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 23808 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:41:16.051+07:00  INFO 23808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:41:16.675+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:41:16.676+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:41:16.701+07:00  INFO 23808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:41:16.828+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 144 ms. Found 1 JPA repository interface.
2024-08-06T17:41:17.104+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:41:17.104+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:41:17.117+07:00  INFO 23808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:41:17.120+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:41:17.132+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:41:17.133+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:41:17.144+07:00  INFO 23808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:41:17.144+07:00  INFO 23808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:41:17.144+07:00  INFO 23808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:41:17.770+07:00  INFO 23808 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:41:17.800+07:00  INFO 23808 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:41:17.800+07:00  INFO 23808 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:41:17.854+07:00  INFO 23808 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:41:17.854+07:00  INFO 23808 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1761 ms
2024-08-06T17:41:17.986+07:00  INFO 23808 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:41:18.049+07:00  INFO 23808 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:41:18.084+07:00  INFO 23808 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:41:18.149+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:41:18.150+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:41:18.151+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:41:18.152+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:41:18.153+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:41:18.154+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:41:18.155+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:41:18.156+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:41:18.157+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:41:18.158+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:41:18.158+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:41:18.161+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5458c71e
2024-08-06T17:41:18.162+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5458c71e
2024-08-06T17:41:18.163+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4adf3582
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:41:18.164+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:41:18.368+07:00  INFO 23808 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:41:18.391+07:00  INFO 23808 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:41:18.752+07:00  INFO 23808 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ebf524
2024-08-06T17:41:18.754+07:00  INFO 23808 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:41:18.828+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:41:18.829+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:41:18.830+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:41:18.831+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:41:18.831+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:41:18.833+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:41:18.833+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:41:18.835+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@75d7297d
2024-08-06T17:41:18.835+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4adf3582`
2024-08-06T17:41:18.838+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:41:18.838+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:41:18.838+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:41:18.840+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:41:18.841+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:41:18.841+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:41:18.841+07:00 DEBUG 23808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:41:18.841+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3412a3fd]
2024-08-06T17:41:19.555+07:00  INFO 23808 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:41:19.555+07:00 DEBUG 23808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3c65f00e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T17:41:19.610+07:00 TRACE 23808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T17:41:19.610+07:00  INFO 23808 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:41:19.795+07:00  INFO 23808 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:41:20.179+07:00  INFO 23808 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:41:20.180+07:00  WARN 23808 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:41:20.321+07:00  INFO 23808 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@34ccce55, com.mongodb.Jep395RecordCodecProvider@7668edd7, com.mongodb.KotlinCodecProvider@10374cae]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:41:20.337+07:00  INFO 23808 --- [Spring_API] [cluster-ClusterId{value='66b1fdd0289aaf5d4af3ecab', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19115300}
2024-08-06T17:41:20.704+07:00  WARN 23808 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:41:21.479+07:00  INFO 23808 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:41:21.494+07:00  INFO 23808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.86 seconds (process running for 6.304)
2024-08-06T17:41:28.627+07:00  INFO 23808 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:41:28.627+07:00  INFO 23808 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:41:28.628+07:00  INFO 23808 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:41:44.920+07:00  INFO 23808 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:41:44.922+07:00 TRACE 23808 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55465bfc] for TypeConfiguration
2024-08-06T17:41:44.922+07:00 DEBUG 23808 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a493fc9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55465bfc]
2024-08-06T17:41:44.923+07:00  INFO 23808 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:41:44.936+07:00  INFO 23808 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:42:55.977+07:00  INFO 26400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26400 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:42:55.979+07:00  INFO 26400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:42:56.532+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:42:56.532+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:42:56.554+07:00  INFO 26400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:42:56.644+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 106 ms. Found 1 JPA repository interface.
2024-08-06T17:42:56.870+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:42:56.870+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:42:56.882+07:00  INFO 26400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:42:56.885+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:42:56.894+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:42:56.895+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:42:56.904+07:00  INFO 26400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:42:56.904+07:00  INFO 26400 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:42:56.904+07:00  INFO 26400 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T17:42:57.567+07:00  INFO 26400 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:42:57.581+07:00  INFO 26400 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:42:57.581+07:00  INFO 26400 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:42:57.633+07:00  INFO 26400 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:42:57.634+07:00  INFO 26400 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1614 ms
2024-08-06T17:42:57.783+07:00  INFO 26400 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:42:57.847+07:00  INFO 26400 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:42:57.895+07:00  INFO 26400 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:42:57.968+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:42:57.969+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:42:57.970+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:42:57.971+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:42:57.972+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:42:57.973+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:42:57.974+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:42:57.975+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:42:57.979+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:42:57.979+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:42:57.980+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:42:57.981+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:42:58.184+07:00  INFO 26400 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:42:58.201+07:00  INFO 26400 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:42:58.458+07:00  INFO 26400 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T17:42:58.460+07:00  INFO 26400 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:42:58.535+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:42:58.536+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:42:58.537+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:42:58.538+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:42:58.538+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:42:58.540+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:42:58.540+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:42:58.544+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T17:42:58.544+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T17:42:58.547+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:42:58.547+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:42:58.547+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:42:58.549+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:42:58.550+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:42:58.550+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:42:58.550+07:00 DEBUG 26400 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:42:58.551+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T17:42:59.200+07:00  INFO 26400 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:42:59.201+07:00 DEBUG 26400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T17:42:59.253+07:00 TRACE 26400 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T17:42:59.254+07:00  INFO 26400 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:42:59.457+07:00  INFO 26400 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:42:59.798+07:00  INFO 26400 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:42:59.799+07:00  WARN 26400 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:42:59.914+07:00  INFO 26400 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1435b17, com.mongodb.Jep395RecordCodecProvider@2b3b25ad, com.mongodb.KotlinCodecProvider@f507d33]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:42:59.927+07:00  INFO 26400 --- [Spring_API] [cluster-ClusterId{value='66b1fe33849daa00e7a3a5ed', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16988200}
2024-08-06T17:43:00.244+07:00  WARN 26400 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:43:00.932+07:00  INFO 26400 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:43:00.942+07:00  INFO 26400 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.324 seconds (process running for 5.662)
2024-08-06T17:43:07.455+07:00  INFO 26400 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:43:07.456+07:00  INFO 26400 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:43:07.456+07:00  INFO 26400 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-06T17:43:14.199+07:00 ERROR 26400 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.example.spring.exception.ResourceNotFoundException] with root cause

com.example.spring.exception.ResourceNotFoundException: null
	at com.example.spring.service.UserService.deleteUser(UserService.java:120) ~[classes/:na]
	at com.example.spring.controller.UserController.deleteUser(UserController.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T17:43:39.524+07:00  INFO 26400 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:43:39.525+07:00 TRACE 26400 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@35c9f527] for TypeConfiguration
2024-08-06T17:43:39.525+07:00 DEBUG 26400 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1004c4e4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@35c9f527]
2024-08-06T17:43:39.527+07:00  INFO 26400 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:43:39.535+07:00  INFO 26400 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:44:33.445+07:00  INFO 24940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 24940 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:44:33.447+07:00  INFO 24940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:44:34.006+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:44:34.007+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:44:34.028+07:00  INFO 24940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:44:34.119+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105 ms. Found 1 JPA repository interface.
2024-08-06T17:44:34.344+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:44:34.344+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:44:34.356+07:00  INFO 24940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:44:34.359+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:44:34.367+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:44:34.369+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:44:34.377+07:00  INFO 24940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:44:34.377+07:00  INFO 24940 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:44:34.378+07:00  INFO 24940 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:44:35.023+07:00  INFO 24940 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:44:35.034+07:00  INFO 24940 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:44:35.035+07:00  INFO 24940 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:44:35.085+07:00  INFO 24940 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:44:35.086+07:00  INFO 24940 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1597 ms
2024-08-06T17:44:35.212+07:00  INFO 24940 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:44:35.270+07:00  INFO 24940 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:44:35.295+07:00  INFO 24940 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:44:35.355+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:44:35.355+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:44:35.355+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5e69cf07
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d512652
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2c2e3460
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3b96f8b0
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b170932
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1fc0d9b4
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@42107318
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:44:35.356+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:44:35.357+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:44:35.358+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:44:35.359+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:44:35.360+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:44:35.362+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:44:35.363+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:44:35.366+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:44:35.366+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3f3c8b60
2024-08-06T17:44:35.366+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38089dae
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9729a97
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36463b09
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4adf3582
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57e4b86c
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@632241f5
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@577bfadb
2024-08-06T17:44:35.367+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:44:35.532+07:00  INFO 24940 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:44:35.549+07:00  INFO 24940 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:44:35.789+07:00  INFO 24940 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@452ec287
2024-08-06T17:44:35.791+07:00  INFO 24940 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:44:35.860+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6eded11a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@602a3237)
2024-08-06T17:44:35.860+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b511e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74a74070)
2024-08-06T17:44:35.860+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6c6919ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de335cf)
2024-08-06T17:44:35.860+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50e8ed74)
2024-08-06T17:44:35.862+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3063be68)
2024-08-06T17:44:35.862+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d2f09a4)
2024-08-06T17:44:35.862+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-06T17:44:35.862+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:44:35.862+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:44:35.863+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:44:35.863+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:44:35.863+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:44:35.865+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:44:35.865+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:44:35.867+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@433b1597
2024-08-06T17:44:35.867+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@38089dae`
2024-08-06T17:44:35.869+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:44:35.870+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:44:35.870+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:44:35.872+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:44:35.873+07:00 DEBUG 24940 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:44:35.873+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24258b54]
2024-08-06T17:44:36.541+07:00  INFO 24940 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:44:36.541+07:00 DEBUG 24940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dd66ff5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:44:36.594+07:00 TRACE 24940 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:44:36.594+07:00  INFO 24940 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:44:36.782+07:00  INFO 24940 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:44:37.132+07:00  INFO 24940 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:44:37.132+07:00  WARN 24940 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:44:37.254+07:00  INFO 24940 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7668edd7, com.mongodb.Jep395RecordCodecProvider@10374cae, com.mongodb.KotlinCodecProvider@6298dafb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:44:37.272+07:00  INFO 24940 --- [Spring_API] [cluster-ClusterId{value='66b1fe95fdf010207b0a39f2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23307900}
2024-08-06T17:44:37.596+07:00  WARN 24940 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:44:38.340+07:00  INFO 24940 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:44:38.346+07:00  INFO 24940 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.266 seconds (process running for 5.602)
2024-08-06T17:44:57.112+07:00  INFO 24940 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:44:57.112+07:00  INFO 24940 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:44:57.113+07:00  INFO 24940 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:45:03.602+07:00 ERROR 24940 --- [Spring_API] [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.example.spring.exception.ResourceNotFoundException] with root cause

com.example.spring.exception.ResourceNotFoundException: null
	at com.example.spring.service.UserService.deleteUser(UserService.java:120) ~[classes/:na]
	at com.example.spring.controller.UserController.deleteUser(UserController.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T17:45:14.152+07:00  INFO 24940 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:45:14.153+07:00 TRACE 24940 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2c6d442d] for TypeConfiguration
2024-08-06T17:45:14.153+07:00 DEBUG 24940 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7aaa7a39] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2c6d442d]
2024-08-06T17:45:14.154+07:00  INFO 24940 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:45:14.160+07:00  INFO 24940 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:46:04.561+07:00  INFO 21924 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 21924 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:46:04.563+07:00  INFO 21924 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:46:05.119+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:05.119+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:46:05.139+07:00  INFO 21924 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:46:05.233+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interface.
2024-08-06T17:46:05.457+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:05.458+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:46:05.470+07:00  INFO 21924 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:46:05.474+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-06T17:46:05.485+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:05.486+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:46:05.495+07:00  INFO 21924 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:46:05.495+07:00  INFO 21924 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:46:05.495+07:00  INFO 21924 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:46:06.146+07:00  INFO 21924 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:46:06.156+07:00  INFO 21924 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:46:06.156+07:00  INFO 21924 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:46:06.206+07:00  INFO 21924 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:46:06.206+07:00  INFO 21924 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1602 ms
2024-08-06T17:46:06.346+07:00  INFO 21924 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:46:06.400+07:00  INFO 21924 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:46:06.437+07:00  INFO 21924 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:46:06.502+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:06.503+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:46:06.504+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:06.505+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:06.506+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:06.507+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:46:06.508+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:46:06.508+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:46:06.508+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:46:06.508+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:46:06.508+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:46:06.509+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:46:06.510+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:46:06.511+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:06.512+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:46:06.513+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:46:06.514+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:46:06.515+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:46:06.515+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:46:06.515+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:46:06.520+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:46:06.520+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:46:06.522+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T17:46:06.522+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:46:06.523+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:46:06.687+07:00  INFO 21924 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:46:06.705+07:00  INFO 21924 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:46:06.945+07:00  INFO 21924 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T17:46:06.946+07:00  INFO 21924 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:46:07.015+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:46:07.016+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:46:07.018+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:46:07.018+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:46:07.018+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:46:07.019+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:46:07.019+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:46:07.022+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T17:46:07.022+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T17:46:07.024+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:07.024+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:07.025+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:07.026+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:07.026+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:07.027+07:00 DEBUG 21924 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:07.028+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T17:46:07.689+07:00  INFO 21924 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:46:07.689+07:00 DEBUG 21924 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:46:07.738+07:00 TRACE 21924 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:46:07.738+07:00  INFO 21924 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:46:07.898+07:00  INFO 21924 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:46:08.234+07:00  INFO 21924 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:46:08.234+07:00  WARN 21924 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:46:08.360+07:00  INFO 21924 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@f507d33, com.mongodb.Jep395RecordCodecProvider@1fc02a84, com.mongodb.KotlinCodecProvider@4c04188]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:46:08.368+07:00  INFO 21924 --- [Spring_API] [cluster-ClusterId{value='66b1fef05e96e46b2cd71262', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16959300}
2024-08-06T17:46:08.679+07:00  WARN 21924 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:46:09.357+07:00  INFO 21924 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:46:09.363+07:00  INFO 21924 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.162 seconds (process running for 5.494)
2024-08-06T17:46:16.504+07:00  INFO 21924 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:46:16.505+07:00  INFO 21924 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:46:16.507+07:00  INFO 21924 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:46:28.766+07:00  INFO 21924 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:46:28.768+07:00 TRACE 21924 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:46:28.768+07:00 DEBUG 21924 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e0c7562] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:46:28.793+07:00  INFO 21924 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:46:28.805+07:00  INFO 21924 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:46:45.417+07:00  INFO 4708 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 4708 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:46:45.419+07:00  INFO 4708 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:46:45.972+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:45.972+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:46:45.995+07:00  INFO 4708 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:46:46.093+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113 ms. Found 1 JPA repository interface.
2024-08-06T17:46:46.324+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:46.324+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:46:46.339+07:00  INFO 4708 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:46:46.341+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T17:46:46.350+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:46:46.351+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:46:46.359+07:00  INFO 4708 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:46:46.359+07:00  INFO 4708 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:46:46.359+07:00  INFO 4708 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-08-06T17:46:46.990+07:00  INFO 4708 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:46:47.002+07:00  INFO 4708 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:46:47.002+07:00  INFO 4708 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:46:47.053+07:00  INFO 4708 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:46:47.054+07:00  INFO 4708 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1593 ms
2024-08-06T17:46:47.189+07:00  INFO 4708 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:46:47.226+07:00  INFO 4708 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:46:47.253+07:00  INFO 4708 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:46:47.309+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:47.310+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:46:47.311+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:46:47.312+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:46:47.313+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:46:47.314+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:46:47.316+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:46:47.317+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:46:47.318+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:46:47.319+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:46:47.319+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:46:47.319+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:46:47.319+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:46:47.322+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:46:47.322+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T17:46:47.323+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T17:46:47.324+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:46:47.325+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:46:47.484+07:00  INFO 4708 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:46:47.500+07:00  INFO 4708 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:46:47.732+07:00  INFO 4708 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T17:46:47.735+07:00  INFO 4708 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T17:46:47.809+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T17:46:47.810+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T17:46:47.810+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T17:46:47.810+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T17:46:47.811+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:46:47.811+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:46:47.811+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:46:47.812+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:46:47.812+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:46:47.814+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T17:46:47.814+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T17:46:47.817+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:47.817+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:47.817+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:47.819+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:46:47.820+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:47.820+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:47.820+07:00 DEBUG 4708 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:46:47.821+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T17:46:48.465+07:00  INFO 4708 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:46:48.466+07:00 DEBUG 4708 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:46:48.517+07:00 TRACE 4708 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:46:48.518+07:00  INFO 4708 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:46:48.707+07:00  INFO 4708 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:46:49.049+07:00  INFO 4708 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:46:49.050+07:00  WARN 4708 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:46:49.158+07:00  INFO 4708 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@641bd93e, com.mongodb.Jep395RecordCodecProvider@62d10834, com.mongodb.KotlinCodecProvider@34f4fd04]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:46:49.173+07:00  INFO 4708 --- [Spring_API] [cluster-ClusterId{value='66b1ff1971c1f5542905da5f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18800900}
2024-08-06T17:46:49.480+07:00  WARN 4708 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:46:50.201+07:00  INFO 4708 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:46:50.206+07:00  INFO 4708 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.16 seconds (process running for 5.497)
2024-08-06T17:46:57.081+07:00  INFO 4708 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:46:57.081+07:00  INFO 4708 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:46:57.082+07:00  INFO 4708 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T17:47:05.821+07:00 ERROR 4708 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.example.spring.exception.ResourceNotFoundException] with root cause

com.example.spring.exception.ResourceNotFoundException: null
	at com.example.spring.service.UserService.deleteUser(UserService.java:120) ~[classes/:na]
	at com.example.spring.controller.UserController.deleteUser(UserController.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T17:47:29.713+07:00  INFO 4708 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:47:29.714+07:00 TRACE 4708 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T17:47:29.715+07:00 DEBUG 4708 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a97188e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T17:47:29.716+07:00  INFO 4708 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:47:29.723+07:00  INFO 4708 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T17:48:46.548+07:00  INFO 9328 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 9328 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T17:48:46.549+07:00  INFO 9328 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T17:48:47.094+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:48:47.094+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T17:48:47.116+07:00  INFO 9328 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T17:48:47.206+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105 ms. Found 1 JPA repository interface.
2024-08-06T17:48:47.429+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:48:47.429+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T17:48:47.440+07:00  INFO 9328 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T17:48:47.443+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T17:48:47.454+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T17:48:47.456+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T17:48:47.465+07:00  INFO 9328 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:48:47.466+07:00  INFO 9328 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T17:48:47.466+07:00  INFO 9328 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T17:48:48.113+07:00  INFO 9328 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T17:48:48.133+07:00  INFO 9328 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T17:48:48.133+07:00  INFO 9328 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T17:48:48.188+07:00  INFO 9328 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T17:48:48.189+07:00  INFO 9328 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1596 ms
2024-08-06T17:48:48.327+07:00  INFO 9328 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T17:48:48.365+07:00  INFO 9328 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T17:48:48.389+07:00  INFO 9328 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T17:48:48.449+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:48:48.450+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:48:48.451+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:48:48.452+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T17:48:48.453+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T17:48:48.454+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T17:48:48.455+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:48:48.456+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T17:48:48.457+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-06T17:48:48.460+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4052913c
2024-08-06T17:48:48.460+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4052913c
2024-08-06T17:48:48.461+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@25ae1f80
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T17:48:48.462+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-06T17:48:48.651+07:00  INFO 9328 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T17:48:48.667+07:00  INFO 9328 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T17:48:48.896+07:00  INFO 9328 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@289a4b90
2024-08-06T17:48:48.898+07:00  INFO 9328 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T17:48:48.970+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-06T17:48:48.971+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-06T17:48:48.972+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T17:48:48.972+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T17:48:48.973+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T17:48:48.974+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:48:48.974+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T17:48:48.976+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6706da3d
2024-08-06T17:48:48.976+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@25ae1f80`
2024-08-06T17:48:48.978+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T17:48:48.979+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:48:48.979+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T17:48:48.981+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:48:48.982+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:48:48.982+07:00 DEBUG 9328 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T17:48:48.983+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211e731] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73e399cc]
2024-08-06T17:48:49.646+07:00  INFO 9328 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T17:48:49.647+07:00 DEBUG 9328 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2211e731] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:48:49.697+07:00 TRACE 9328 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:48:49.697+07:00  INFO 9328 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:48:49.875+07:00  INFO 9328 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T17:48:50.252+07:00  INFO 9328 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T17:48:50.253+07:00  WARN 9328 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T17:48:50.371+07:00  INFO 9328 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4c04188, com.mongodb.Jep395RecordCodecProvider@76a41af0, com.mongodb.KotlinCodecProvider@7a1148f2]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T17:48:50.382+07:00  INFO 9328 --- [Spring_API] [cluster-ClusterId{value='66b1ff92a6890e37ffbd6645', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17710400}
2024-08-06T17:48:50.715+07:00  WARN 9328 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T17:48:51.464+07:00  INFO 9328 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T17:48:51.470+07:00  INFO 9328 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.284 seconds (process running for 5.631)
2024-08-06T17:48:56.452+07:00  INFO 9328 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T17:48:56.452+07:00  INFO 9328 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T17:48:56.454+07:00  INFO 9328 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2024-08-06T17:49:25.549+07:00  INFO 9328 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T17:49:25.550+07:00 TRACE 9328 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2784145d] for TypeConfiguration
2024-08-06T17:49:25.550+07:00 DEBUG 9328 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@17be20df] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2784145d]
2024-08-06T17:49:25.551+07:00  INFO 9328 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T17:49:25.556+07:00  INFO 9328 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T18:00:52.586+07:00  INFO 25232 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25232 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T18:00:52.588+07:00  INFO 25232 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T18:00:53.188+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:00:53.188+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T18:00:53.215+07:00  INFO 25232 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T18:00:53.328+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 131 ms. Found 1 JPA repository interface.
2024-08-06T18:00:53.578+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:00:53.578+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T18:00:53.588+07:00  INFO 25232 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T18:00:53.592+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-06T18:00:53.606+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:00:53.607+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T18:00:53.619+07:00  INFO 25232 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T18:00:53.619+07:00  INFO 25232 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T18:00:53.619+07:00  INFO 25232 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-06T18:00:54.273+07:00  INFO 25232 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T18:00:54.285+07:00  INFO 25232 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T18:00:54.285+07:00  INFO 25232 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T18:00:54.340+07:00  INFO 25232 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T18:00:54.341+07:00  INFO 25232 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1710 ms
2024-08-06T18:00:54.481+07:00  INFO 25232 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T18:00:54.544+07:00  INFO 25232 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T18:00:54.579+07:00  INFO 25232 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T18:00:54.643+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:00:54.643+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:00:54.644+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:00:54.644+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T18:00:54.644+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T18:00:54.644+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T18:00:54.645+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T18:00:54.645+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T18:00:54.645+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:00:54.646+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T18:00:54.647+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T18:00:54.648+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:00:54.649+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T18:00:54.650+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T18:00:54.651+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T18:00:54.655+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T18:00:54.655+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T18:00:54.656+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T18:00:54.657+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T18:00:54.861+07:00  INFO 25232 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T18:00:54.884+07:00  INFO 25232 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T18:00:55.215+07:00  INFO 25232 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T18:00:55.217+07:00  INFO 25232 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T18:00:55.292+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T18:00:55.293+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T18:00:55.293+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T18:00:55.293+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T18:00:55.293+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T18:00:55.293+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T18:00:55.294+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T18:00:55.294+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T18:00:55.295+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T18:00:55.296+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T18:00:55.296+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T18:00:55.297+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T18:00:55.299+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T18:00:55.299+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T18:00:55.301+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T18:00:55.301+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T18:00:55.304+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T18:00:55.304+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T18:00:55.304+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:00:55.306+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:00:55.307+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:00:55.307+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:00:55.307+07:00 DEBUG 25232 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:00:55.308+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T18:00:56.038+07:00  INFO 25232 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T18:00:56.039+07:00 DEBUG 25232 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T18:00:56.099+07:00 TRACE 25232 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T18:00:56.099+07:00  INFO 25232 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T18:00:56.285+07:00  INFO 25232 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T18:00:56.666+07:00  INFO 25232 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T18:00:56.667+07:00  WARN 25232 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T18:00:56.812+07:00  INFO 25232 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@62d10834, com.mongodb.Jep395RecordCodecProvider@34f4fd04, com.mongodb.KotlinCodecProvider@445265b0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T18:00:56.821+07:00  INFO 25232 --- [Spring_API] [cluster-ClusterId{value='66b2026834b16c477a886d5d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16195400}
2024-08-06T18:00:57.170+07:00  WARN 25232 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T18:00:57.912+07:00  INFO 25232 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T18:00:57.917+07:00  INFO 25232 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.751 seconds (process running for 6.175)
2024-08-06T18:01:01.768+07:00  INFO 25232 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T18:01:01.768+07:00  INFO 25232 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T18:01:01.770+07:00  INFO 25232 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T18:01:25.253+07:00 ERROR 25232 --- [Spring_API] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.example.spring.exception.ResourceNotFoundException] with root cause

com.example.spring.exception.ResourceNotFoundException: null
	at com.example.spring.service.UserService.deleteUser(UserService.java:120) ~[classes/:na]
	at com.example.spring.controller.UserController.deleteUser(UserController.java:90) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:52) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-06T18:02:12.822+07:00  INFO 25232 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T18:02:12.823+07:00 TRACE 25232 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d1eb214] for TypeConfiguration
2024-08-06T18:02:12.823+07:00 DEBUG 25232 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@c0e219e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d1eb214]
2024-08-06T18:02:12.824+07:00  INFO 25232 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T18:02:12.832+07:00  INFO 25232 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-06T18:02:52.080+07:00  INFO 18420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18420 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-06T18:02:52.082+07:00  INFO 18420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-06T18:02:52.655+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:02:52.655+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-06T18:02:52.677+07:00  INFO 18420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-06T18:02:52.766+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 104 ms. Found 1 JPA repository interface.
2024-08-06T18:02:53.006+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:02:53.006+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-06T18:02:53.019+07:00  INFO 18420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-06T18:02:53.023+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-06T18:02:53.033+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-06T18:02:53.035+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-06T18:02:53.045+07:00  INFO 18420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T18:02:53.046+07:00  INFO 18420 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-06T18:02:53.046+07:00  INFO 18420 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-06T18:02:53.734+07:00  INFO 18420 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-06T18:02:53.747+07:00  INFO 18420 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-06T18:02:53.748+07:00  INFO 18420 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-06T18:02:53.803+07:00  INFO 18420 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-06T18:02:53.803+07:00  INFO 18420 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1679 ms
2024-08-06T18:02:53.944+07:00  INFO 18420 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-06T18:02:53.991+07:00  INFO 18420 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-06T18:02:54.026+07:00  INFO 18420 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-06T18:02:54.098+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:02:54.098+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:02:54.098+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-06T18:02:54.099+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-06T18:02:54.100+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-06T18:02:54.101+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:02:54.102+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-06T18:02:54.103+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T18:02:54.103+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-06T18:02:54.104+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T18:02:54.104+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-06T18:02:54.105+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:02:54.105+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:02:54.105+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-06T18:02:54.105+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-06T18:02:54.106+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-06T18:02:54.107+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-06T18:02:54.108+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@afee63
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-06T18:02:54.109+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:02:54.110+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-06T18:02:54.111+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T18:02:54.112+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-06T18:02:54.113+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T18:02:54.113+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-06T18:02:54.113+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-06T18:02:54.113+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-06T18:02:54.116+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T18:02:54.116+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@37d0d373
2024-08-06T18:02:54.117+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@577bfadb
2024-08-06T18:02:54.118+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-06T18:02:54.118+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-06T18:02:54.118+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-06T18:02:54.118+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-06T18:02:54.119+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-06T18:02:54.119+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-06T18:02:54.119+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-06T18:02:54.119+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-06T18:02:54.312+07:00  INFO 18420 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-06T18:02:54.333+07:00  INFO 18420 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-06T18:02:54.648+07:00  INFO 18420 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45f0038
2024-08-06T18:02:54.650+07:00  INFO 18420 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-06T18:02:54.734+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-06T18:02:54.734+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-06T18:02:54.735+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32069394)
2024-08-06T18:02:54.737+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-06T18:02:54.737+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-06T18:02:54.738+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-06T18:02:54.740+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T18:02:54.740+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-06T18:02:54.742+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2ca132ad
2024-08-06T18:02:54.743+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@577bfadb`
2024-08-06T18:02:54.745+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-06T18:02:54.745+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T18:02:54.745+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:02:54.748+07:00 DEBUG 18420 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-06T18:02:54.749+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2211e731]
2024-08-06T18:02:55.487+07:00  INFO 18420 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-06T18:02:55.488+07:00 DEBUG 18420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bda1f0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T18:02:55.537+07:00 TRACE 18420 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T18:02:55.537+07:00  INFO 18420 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T18:02:55.725+07:00  INFO 18420 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-06T18:02:56.106+07:00  INFO 18420 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-06T18:02:56.107+07:00  WARN 18420 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-06T18:02:56.233+07:00  INFO 18420 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@641bd93e, com.mongodb.Jep395RecordCodecProvider@62d10834, com.mongodb.KotlinCodecProvider@34f4fd04]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-06T18:02:56.249+07:00  INFO 18420 --- [Spring_API] [cluster-ClusterId{value='66b202e0f5497a5542699e57', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17714200}
2024-08-06T18:02:56.595+07:00  WARN 18420 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-06T18:02:57.362+07:00  INFO 18420 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-06T18:02:57.368+07:00  INFO 18420 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.663 seconds (process running for 6.018)
2024-08-06T18:03:07.543+07:00  INFO 18420 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-06T18:03:07.543+07:00  INFO 18420 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-06T18:03:07.544+07:00  INFO 18420 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-06T18:03:34.489+07:00  INFO 18420 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-06T18:03:34.490+07:00 TRACE 18420 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@451f3f66] for TypeConfiguration
2024-08-06T18:03:34.490+07:00 DEBUG 18420 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6e741b9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@451f3f66]
2024-08-06T18:03:34.490+07:00  INFO 18420 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-06T18:03:34.497+07:00  INFO 18420 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
