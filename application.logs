2024-08-02T10:16:55.139+07:00  INFO 26844 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26844 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T10:16:55.146+07:00  INFO 26844 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T10:16:55.751+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:16:55.751+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T10:16:55.784+07:00  INFO 26844 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T10:16:55.875+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 110 ms. Found 1 JPA repository interface.
2024-08-02T10:16:56.135+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:16:56.135+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T10:16:56.147+07:00  INFO 26844 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T10:16:56.151+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T10:16:56.169+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:16:56.171+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T10:16:56.181+07:00  INFO 26844 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:16:56.181+07:00  INFO 26844 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:16:56.181+07:00  INFO 26844 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T10:16:56.800+07:00  INFO 26844 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T10:16:56.817+07:00  INFO 26844 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T10:16:56.817+07:00  INFO 26844 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T10:16:56.872+07:00  INFO 26844 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T10:16:56.872+07:00  INFO 26844 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1680 ms
2024-08-02T10:16:57.048+07:00  INFO 26844 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T10:16:57.117+07:00  INFO 26844 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T10:16:57.161+07:00  INFO 26844 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T10:16:57.230+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:16:57.230+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T10:16:57.231+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:16:57.232+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:16:57.233+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:16:57.234+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T10:16:57.235+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T10:16:57.236+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T10:16:57.240+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4438938e
2024-08-02T10:16:57.241+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4438938e
2024-08-02T10:16:57.241+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@7e2c6702
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51eb0e84
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2eebce87
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6775c0d1
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@38f617f4
2024-08-02T10:16:57.242+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4899799b
2024-08-02T10:16:57.500+07:00  INFO 26844 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T10:16:57.530+07:00  INFO 26844 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T10:16:57.885+07:00  INFO 26844 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79c1ccf7
2024-08-02T10:16:57.887+07:00  INFO 26844 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T10:16:57.980+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@672d8370)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13137835) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29bd056a)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f1fec57)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dc9f5ad)
2024-08-02T10:16:57.982+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a2d66e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dffff9)
2024-08-02T10:16:57.983+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2904bc56) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bb25046)
2024-08-02T10:16:57.983+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69b1e8f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@126af200)
2024-08-02T10:16:57.984+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T10:16:57.985+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T10:16:57.985+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T10:16:57.987+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:16:57.987+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:16:57.989+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@13714753
2024-08-02T10:16:57.989+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7e2c6702`
2024-08-02T10:16:57.991+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T10:16:57.991+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:16:57.991+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:16:57.993+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:16:57.994+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:16:57.994+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:16:57.994+07:00 DEBUG 26844 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:16:57.995+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@124ff64d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75aa7703]
2024-08-02T10:16:58.659+07:00  INFO 26844 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T10:16:58.659+07:00 DEBUG 26844 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@124ff64d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@33986be7]
2024-08-02T10:16:58.757+07:00 TRACE 26844 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@33986be7] for TypeConfiguration
2024-08-02T10:16:58.758+07:00  INFO 26844 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:16:58.982+07:00  INFO 26844 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T10:16:59.386+07:00  INFO 26844 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@78b20c7f, com.mongodb.Jep395RecordCodecProvider@128579a6, com.mongodb.KotlinCodecProvider@14d5b2ac]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T10:16:59.402+07:00  INFO 26844 --- [Spring_API] [cluster-ClusterId{value='66ac4fab48664a454a64522e', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20824800}
2024-08-02T10:16:59.797+07:00  WARN 26844 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T10:16:59.830+07:00  INFO 26844 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T10:16:59.830+07:00  WARN 26844 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T10:17:00.567+07:00  INFO 26844 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T10:17:00.573+07:00  INFO 26844 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.826 seconds (process running for 6.416)
2024-08-02T10:17:39.937+07:00  INFO 26844 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:17:39.938+07:00 TRACE 26844 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@33986be7] for TypeConfiguration
2024-08-02T10:17:39.938+07:00 DEBUG 26844 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@785134c1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@33986be7]
2024-08-02T10:17:39.939+07:00  INFO 26844 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T10:17:39.947+07:00  INFO 26844 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T10:20:30.644+07:00  INFO 20808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 20808 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T10:20:30.646+07:00  INFO 20808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T10:20:31.143+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:20:31.143+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T10:20:31.173+07:00  INFO 20808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T10:20:31.249+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 1 JPA repository interface.
2024-08-02T10:20:31.476+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:20:31.476+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T10:20:31.487+07:00  INFO 20808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T10:20:31.492+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T10:20:31.501+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:20:31.502+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T10:20:31.511+07:00  INFO 20808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:20:31.512+07:00  INFO 20808 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:20:31.512+07:00  INFO 20808 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T10:20:32.079+07:00  INFO 20808 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T10:20:32.089+07:00  INFO 20808 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T10:20:32.089+07:00  INFO 20808 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T10:20:32.135+07:00  INFO 20808 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T10:20:32.135+07:00  INFO 20808 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1454 ms
2024-08-02T10:20:32.293+07:00  INFO 20808 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T10:20:32.372+07:00  INFO 20808 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T10:20:32.402+07:00  INFO 20808 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T10:20:32.454+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:20:32.455+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:20:32.456+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:20:32.457+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:20:32.458+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:20:32.459+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:20:32.460+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:20:32.461+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:20:32.462+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:20:32.463+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:20:32.464+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T10:20:32.468+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@46d0f89c
2024-08-02T10:20:32.468+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@46d0f89c
2024-08-02T10:20:32.468+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@76e6c070
2024-08-02T10:20:32.469+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@184afb78
2024-08-02T10:20:32.469+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T10:20:32.470+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T10:20:32.684+07:00  INFO 20808 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T10:20:32.709+07:00  INFO 20808 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T10:20:32.970+07:00  INFO 20808 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cc89246
2024-08-02T10:20:32.972+07:00  INFO 20808 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T10:20:33.046+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T10:20:33.047+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T10:20:33.048+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T10:20:33.048+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T10:20:33.049+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:20:33.049+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:20:33.051+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@279e1422
2024-08-02T10:20:33.051+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@76e6c070`
2024-08-02T10:20:33.052+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T10:20:33.052+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:20:33.052+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:20:33.054+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:20:33.055+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:20:33.055+07:00 DEBUG 20808 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:20:33.055+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51fb5fe6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5ca4c88a]
2024-08-02T10:20:33.668+07:00  INFO 20808 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T10:20:33.669+07:00 DEBUG 20808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@51fb5fe6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T10:20:33.723+07:00 TRACE 20808 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T10:20:33.723+07:00  INFO 20808 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:20:33.976+07:00  INFO 20808 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T10:20:34.312+07:00  INFO 20808 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2ab4c4e, com.mongodb.Jep395RecordCodecProvider@1cad8bce, com.mongodb.KotlinCodecProvider@ba77dc6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T10:20:34.328+07:00  INFO 20808 --- [Spring_API] [cluster-ClusterId{value='66ac508216fc6679359a4431', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17953900}
2024-08-02T10:20:34.665+07:00  WARN 20808 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T10:20:34.693+07:00  INFO 20808 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T10:20:34.694+07:00  WARN 20808 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T10:20:35.383+07:00  INFO 20808 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T10:20:35.391+07:00  INFO 20808 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.109 seconds (process running for 5.5)
2024-08-02T10:20:51.969+07:00  INFO 20808 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T10:20:51.970+07:00  INFO 20808 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T10:20:51.971+07:00  INFO 20808 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T10:22:21.354+07:00  INFO 20808 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:22:21.355+07:00 TRACE 20808 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T10:22:21.355+07:00 DEBUG 20808 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3254b10c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T10:22:21.357+07:00  INFO 20808 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T10:22:21.370+07:00  INFO 20808 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T10:31:11.487+07:00  INFO 2348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2348 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T10:31:11.489+07:00  INFO 2348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T10:31:12.110+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:31:12.110+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T10:31:12.141+07:00  INFO 2348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T10:31:12.242+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2024-08-02T10:31:12.507+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:31:12.508+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T10:31:12.520+07:00  INFO 2348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T10:31:12.525+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 1 MongoDB repository interface.
2024-08-02T10:31:12.535+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:31:12.536+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T10:31:12.547+07:00  INFO 2348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:31:12.547+07:00  INFO 2348 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:31:12.548+07:00  INFO 2348 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T10:31:13.160+07:00  INFO 2348 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T10:31:13.173+07:00  INFO 2348 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T10:31:13.174+07:00  INFO 2348 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T10:31:13.223+07:00  INFO 2348 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T10:31:13.224+07:00  INFO 2348 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1696 ms
2024-08-02T10:31:13.393+07:00  INFO 2348 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T10:31:13.481+07:00  INFO 2348 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T10:31:13.515+07:00  INFO 2348 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T10:31:13.579+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74431b9c
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74431b9c
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@74431b9c
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:31:13.580+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:31:13.581+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:31:13.581+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:31:13.581+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:31:13.581+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T10:31:13.582+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:31:13.583+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:31:13.584+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:31:13.585+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T10:31:13.586+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:31:13.587+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:31:13.588+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:31:13.589+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:31:13.590+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:31:13.595+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@11399548
2024-08-02T10:31:13.595+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11399548
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6a7a1a0d
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1c6e3ff9
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@184afb78
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T10:31:13.596+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T10:31:13.840+07:00  INFO 2348 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T10:31:13.865+07:00  INFO 2348 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T10:31:14.227+07:00  INFO 2348 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@472719df
2024-08-02T10:31:14.229+07:00  INFO 2348 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T10:31:14.318+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@670c171c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d42275)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b681c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46d69ca4)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T10:31:14.319+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T10:31:14.320+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T10:31:14.320+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T10:31:14.321+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T10:31:14.322+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:31:14.322+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:31:14.323+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@7d5a0b14
2024-08-02T10:31:14.323+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6a7a1a0d`
2024-08-02T10:31:14.326+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T10:31:14.326+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:31:14.326+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:31:14.329+07:00 DEBUG 2348 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:31:14.330+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6585df70] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d93ff21]
2024-08-02T10:31:14.998+07:00  INFO 2348 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T10:31:14.998+07:00 DEBUG 2348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6585df70] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5aefdb9e]
2024-08-02T10:31:15.077+07:00 TRACE 2348 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5aefdb9e] for TypeConfiguration
2024-08-02T10:31:15.078+07:00  INFO 2348 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:31:15.367+07:00  INFO 2348 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T10:31:15.745+07:00  INFO 2348 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@57e6f449, com.mongodb.Jep395RecordCodecProvider@3a649f9a, com.mongodb.KotlinCodecProvider@419ac0f5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T10:31:15.773+07:00  INFO 2348 --- [Spring_API] [cluster-ClusterId{value='66ac53033a4f0b4e994e4c0c', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=31408700}
2024-08-02T10:31:16.178+07:00  WARN 2348 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T10:31:16.210+07:00  INFO 2348 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T10:31:16.211+07:00  WARN 2348 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T10:31:16.961+07:00  INFO 2348 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T10:31:16.968+07:00  INFO 2348 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.909 seconds (process running for 6.395)
2024-08-02T10:31:25.653+07:00  INFO 2348 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T10:31:25.653+07:00  INFO 2348 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T10:31:25.655+07:00  INFO 2348 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T10:36:21.040+07:00  INFO 2348 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:36:21.041+07:00 TRACE 2348 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5aefdb9e] for TypeConfiguration
2024-08-02T10:36:21.041+07:00 DEBUG 2348 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2537a0fe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5aefdb9e]
2024-08-02T10:36:21.042+07:00  INFO 2348 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T10:36:21.051+07:00  INFO 2348 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T10:38:26.842+07:00  INFO 19488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 19488 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T10:38:26.844+07:00  INFO 19488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T10:38:27.403+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:38:27.403+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T10:38:27.430+07:00  INFO 19488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T10:38:27.519+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 107 ms. Found 1 JPA repository interface.
2024-08-02T10:38:27.759+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:38:27.761+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T10:38:27.772+07:00  INFO 19488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T10:38:27.777+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T10:38:27.786+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:38:27.787+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T10:38:27.796+07:00  INFO 19488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:38:27.797+07:00  INFO 19488 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:38:27.797+07:00  INFO 19488 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T10:38:28.381+07:00  INFO 19488 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T10:38:28.394+07:00  INFO 19488 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T10:38:28.394+07:00  INFO 19488 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T10:38:28.447+07:00  INFO 19488 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T10:38:28.447+07:00  INFO 19488 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1564 ms
2024-08-02T10:38:28.626+07:00  INFO 19488 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T10:38:28.705+07:00  INFO 19488 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T10:38:28.738+07:00  INFO 19488 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:38:28.799+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:38:28.800+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:38:28.801+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:38:28.802+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:38:28.803+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:38:28.804+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:38:28.805+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:38:28.805+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:38:28.805+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:38:28.805+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:38:28.806+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:38:28.807+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:38:28.808+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:38:28.809+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:38:28.809+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:38:28.809+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T10:38:28.809+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T10:38:28.812+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@570b2057
2024-08-02T10:38:28.812+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@570b2057
2024-08-02T10:38:28.813+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@184afb78
2024-08-02T10:38:28.813+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T10:38:28.813+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T10:38:28.814+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T10:38:29.061+07:00  INFO 19488 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T10:38:29.087+07:00  INFO 19488 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T10:38:29.414+07:00  INFO 19488 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@413eaf5d
2024-08-02T10:38:29.417+07:00  INFO 19488 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T10:38:29.499+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581)
2024-08-02T10:38:29.499+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c)
2024-08-02T10:38:29.499+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T10:38:29.500+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0)
2024-08-02T10:38:29.501+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T10:38:29.501+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T10:38:29.501+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T10:38:29.502+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:38:29.502+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:38:29.504+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@af3295f
2024-08-02T10:38:29.504+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@184afb78`
2024-08-02T10:38:29.506+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T10:38:29.506+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:38:29.506+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:38:29.508+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:38:29.509+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:38:29.509+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:38:29.509+07:00 DEBUG 19488 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:38:29.510+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ca4c88a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1791e231]
2024-08-02T10:38:30.208+07:00  INFO 19488 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T10:38:30.209+07:00 DEBUG 19488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ca4c88a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a0f4282]
2024-08-02T10:38:30.267+07:00 TRACE 19488 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a0f4282] for TypeConfiguration
2024-08-02T10:38:30.267+07:00  INFO 19488 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:38:30.550+07:00  INFO 19488 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T10:38:30.904+07:00  INFO 19488 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1cad8bce, com.mongodb.Jep395RecordCodecProvider@ba77dc6, com.mongodb.KotlinCodecProvider@14f05ca0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T10:38:30.918+07:00  INFO 19488 --- [Spring_API] [cluster-ClusterId{value='66ac54b6f419b82d28d6f46f', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17577800}
2024-08-02T10:38:31.272+07:00  WARN 19488 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T10:38:31.317+07:00  INFO 19488 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T10:38:31.318+07:00  WARN 19488 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T10:38:32.041+07:00  INFO 19488 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T10:38:32.049+07:00  INFO 19488 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.597 seconds (process running for 5.95)
2024-08-02T10:38:39.392+07:00  INFO 19488 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T10:38:39.392+07:00  INFO 19488 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T10:38:39.395+07:00  INFO 19488 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2024-08-02T10:38:39.672+07:00  INFO 19488 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.service.impl.UserServiceImpl  : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-02T10:38:39.674+07:00  INFO 19488 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-02T10:38:40.054+07:00 ERROR 19488 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserServiceImpl.findUserById(UserServiceImpl.java:33) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:35) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T10:41:36.693+07:00  INFO 19488 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:41:36.694+07:00 TRACE 19488 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4a0f4282] for TypeConfiguration
2024-08-02T10:41:36.694+07:00 DEBUG 19488 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@32a8f69a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a0f4282]
2024-08-02T10:41:36.695+07:00  INFO 19488 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T10:41:36.704+07:00  INFO 19488 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T10:46:06.084+07:00  INFO 12696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 12696 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T10:46:06.086+07:00  INFO 12696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T10:46:06.670+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:46:06.671+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T10:46:06.700+07:00  INFO 12696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T10:46:06.800+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 120 ms. Found 1 JPA repository interface.
2024-08-02T10:46:07.043+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:46:07.043+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T10:46:07.055+07:00  INFO 12696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T10:46:07.060+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T10:46:07.070+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T10:46:07.072+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T10:46:07.082+07:00  INFO 12696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:46:07.082+07:00  INFO 12696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T10:46:07.082+07:00  INFO 12696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T10:46:07.642+07:00  INFO 12696 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T10:46:07.653+07:00  INFO 12696 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T10:46:07.653+07:00  INFO 12696 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T10:46:07.703+07:00  INFO 12696 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T10:46:07.704+07:00  INFO 12696 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1576 ms
2024-08-02T10:46:07.861+07:00  INFO 12696 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T10:46:07.943+07:00  INFO 12696 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T10:46:07.976+07:00  INFO 12696 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T10:46:08.043+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:46:08.044+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T10:46:08.045+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:46:08.046+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T10:46:08.047+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T10:46:08.048+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T10:46:08.049+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:46:08.050+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T10:46:08.051+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:46:08.051+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T10:46:08.051+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T10:46:08.051+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T10:46:08.055+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@570b2057
2024-08-02T10:46:08.055+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@570b2057
2024-08-02T10:46:08.056+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@184afb78
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T10:46:08.057+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T10:46:08.256+07:00  INFO 12696 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T10:46:08.281+07:00  INFO 12696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T10:46:08.601+07:00  INFO 12696 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@413eaf5d
2024-08-02T10:46:08.603+07:00  INFO 12696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581)
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c)
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62)
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T10:46:08.679+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T10:46:08.680+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T10:46:08.680+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T10:46:08.680+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0)
2024-08-02T10:46:08.681+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T10:46:08.681+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T10:46:08.681+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T10:46:08.682+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:46:08.683+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T10:46:08.684+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@af3295f
2024-08-02T10:46:08.685+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@184afb78`
2024-08-02T10:46:08.687+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T10:46:08.687+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:46:08.687+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:46:08.689+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T10:46:08.690+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:46:08.690+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:46:08.690+07:00 DEBUG 12696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T10:46:08.691+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ca4c88a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1791e231]
2024-08-02T10:46:09.399+07:00  INFO 12696 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T10:46:09.399+07:00 DEBUG 12696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ca4c88a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a0f4282]
2024-08-02T10:46:09.462+07:00 TRACE 12696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a0f4282] for TypeConfiguration
2024-08-02T10:46:09.462+07:00  INFO 12696 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:46:09.751+07:00  INFO 12696 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T10:46:10.108+07:00  INFO 12696 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1cad8bce, com.mongodb.Jep395RecordCodecProvider@ba77dc6, com.mongodb.KotlinCodecProvider@14f05ca0]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T10:46:10.122+07:00  INFO 12696 --- [Spring_API] [cluster-ClusterId{value='66ac5682051b9d3bfcd143c5', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17986200}
2024-08-02T10:46:10.476+07:00  WARN 12696 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T10:46:10.501+07:00  INFO 12696 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T10:46:10.501+07:00  WARN 12696 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T10:46:11.224+07:00  INFO 12696 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T10:46:11.230+07:00  INFO 12696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.555 seconds (process running for 5.936)
2024-08-02T10:46:18.805+07:00  INFO 12696 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T10:46:18.805+07:00  INFO 12696 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T10:46:18.806+07:00  INFO 12696 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T10:51:34.938+07:00  INFO 12696 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T10:51:34.939+07:00 TRACE 12696 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4a0f4282] for TypeConfiguration
2024-08-02T10:51:34.940+07:00 DEBUG 12696 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@48116d8e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a0f4282]
2024-08-02T10:51:34.941+07:00  INFO 12696 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T10:51:34.951+07:00  INFO 12696 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T11:27:30.367+07:00  INFO 3276 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 3276 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T11:27:30.369+07:00  INFO 3276 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T11:27:31.038+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:27:31.039+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T11:27:31.072+07:00  INFO 3276 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T11:27:31.177+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 128 ms. Found 1 JPA repository interface.
2024-08-02T11:27:31.427+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:27:31.428+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T11:27:31.441+07:00  INFO 3276 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T11:27:31.445+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T11:27:31.457+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:27:31.458+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T11:27:31.470+07:00  INFO 3276 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:27:31.470+07:00  INFO 3276 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:27:31.470+07:00  INFO 3276 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T11:27:32.081+07:00  INFO 3276 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T11:27:32.091+07:00  INFO 3276 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T11:27:32.091+07:00  INFO 3276 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T11:27:32.145+07:00  INFO 3276 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T11:27:32.146+07:00  INFO 3276 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1737 ms
2024-08-02T11:27:32.351+07:00  INFO 3276 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T11:27:32.445+07:00  INFO 3276 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T11:27:32.481+07:00  INFO 3276 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T11:27:32.548+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T11:27:32.549+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:27:32.550+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:27:32.551+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T11:27:32.552+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T11:27:32.553+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:27:32.554+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:27:32.555+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:27:32.556+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:27:32.560+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T11:27:32.560+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ebd6fd6
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@9be7319
2024-08-02T11:27:32.561+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@91a2543
2024-08-02T11:27:32.562+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T11:27:32.818+07:00  INFO 3276 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T11:27:32.851+07:00  INFO 3276 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T11:27:33.184+07:00  INFO 3276 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f42336c
2024-08-02T11:27:33.187+07:00  INFO 3276 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0)
2024-08-02T11:27:33.263+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6150afc6)
2024-08-02T11:27:33.264+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e6458d)
2024-08-02T11:27:33.264+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T11:27:33.265+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T11:27:33.265+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T11:27:33.265+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T11:27:33.266+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:27:33.266+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:27:33.268+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2f0e7fa8
2024-08-02T11:27:33.268+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4ebd6fd6`
2024-08-02T11:27:33.271+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T11:27:33.271+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:27:33.271+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:27:33.273+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:27:33.274+07:00 DEBUG 3276 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:27:33.274+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c4215d7]
2024-08-02T11:27:33.976+07:00  INFO 3276 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T11:27:33.977+07:00 DEBUG 3276 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T11:27:34.042+07:00 TRACE 3276 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T11:27:34.042+07:00  INFO 3276 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:27:34.335+07:00  INFO 3276 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T11:27:34.700+07:00  INFO 3276 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f1e946f, com.mongodb.Jep395RecordCodecProvider@542adcfa, com.mongodb.KotlinCodecProvider@3adf3670]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T11:27:34.719+07:00  INFO 3276 --- [Spring_API] [cluster-ClusterId{value='66ac60369094ec6b99e3599b', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=30827600}
2024-08-02T11:27:34.947+07:00  INFO 3276 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T11:27:34.949+07:00  WARN 3276 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T11:27:35.196+07:00  WARN 3276 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T11:27:35.927+07:00  INFO 3276 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T11:27:35.933+07:00  INFO 3276 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.02 seconds (process running for 6.566)
2024-08-02T11:28:24.685+07:00  INFO 3276 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T11:28:24.686+07:00  INFO 3276 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T11:28:24.687+07:00  INFO 3276 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T11:28:24.725+07:00  WARN 3276 --- [Spring_API] [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-08-02T11:30:32.189+07:00 ERROR 3276 --- [Spring_API] [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied] with root cause

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T11:33:52.923+07:00 ERROR 3276 --- [Spring_API] [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied] with root cause

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T11:36:23.542+07:00  INFO 3276 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:36:23.545+07:00 TRACE 3276 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T11:36:23.545+07:00 DEBUG 3276 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@52f28fdd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T11:36:23.546+07:00  INFO 3276 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T11:36:23.558+07:00  INFO 3276 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T11:37:29.680+07:00  INFO 16216 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16216 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T11:37:29.682+07:00  INFO 16216 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T11:37:30.236+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:37:30.237+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T11:37:30.262+07:00  INFO 16216 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T11:37:30.337+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 1 JPA repository interface.
2024-08-02T11:37:30.572+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:37:30.572+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T11:37:30.584+07:00  INFO 16216 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T11:37:30.587+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T11:37:30.597+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:37:30.598+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T11:37:30.608+07:00  INFO 16216 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:37:30.608+07:00  INFO 16216 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:37:30.608+07:00  INFO 16216 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T11:37:31.186+07:00  INFO 16216 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T11:37:31.197+07:00  INFO 16216 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T11:37:31.197+07:00  INFO 16216 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T11:37:31.248+07:00  INFO 16216 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T11:37:31.249+07:00  INFO 16216 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1530 ms
2024-08-02T11:37:31.426+07:00  INFO 16216 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T11:37:31.512+07:00  INFO 16216 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T11:37:31.545+07:00  INFO 16216 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T11:37:31.606+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:37:31.607+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:37:31.608+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:37:31.609+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:37:31.610+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:37:31.610+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:37:31.610+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:37:31.610+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:37:31.611+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:37:31.612+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:37:31.613+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:37:31.614+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:37:31.615+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T11:37:31.616+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T11:37:31.620+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@33f4c769
2024-08-02T11:37:31.620+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33f4c769
2024-08-02T11:37:31.621+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@18c7f6b5
2024-08-02T11:37:31.621+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@629b780f
2024-08-02T11:37:31.621+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@609b041c
2024-08-02T11:37:31.621+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@474e34e4
2024-08-02T11:37:31.621+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7e2c6702
2024-08-02T11:37:31.622+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T11:37:31.622+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T11:37:31.622+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@51eb0e84
2024-08-02T11:37:31.622+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T11:37:31.835+07:00  INFO 16216 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T11:37:31.863+07:00  INFO 16216 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T11:37:32.194+07:00  INFO 16216 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a78b52b
2024-08-02T11:37:32.196+07:00  INFO 16216 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0)
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6)
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d)
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13137835)
2024-08-02T11:37:32.264+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459)
2024-08-02T11:37:32.265+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T11:37:32.265+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T11:37:32.265+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a2d66e)
2024-08-02T11:37:32.266+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T11:37:32.266+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T11:37:32.266+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T11:37:32.267+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:37:32.267+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:37:32.269+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@45d38165
2024-08-02T11:37:32.269+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@18c7f6b5`
2024-08-02T11:37:32.272+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T11:37:32.272+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:37:32.272+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:37:32.274+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:37:32.275+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:37:32.275+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:37:32.275+07:00 DEBUG 16216 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:37:32.276+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a6fc1bc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5018b56b]
2024-08-02T11:37:32.974+07:00  INFO 16216 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T11:37:32.974+07:00 DEBUG 16216 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a6fc1bc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62c1259f]
2024-08-02T11:37:33.033+07:00 TRACE 16216 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@62c1259f] for TypeConfiguration
2024-08-02T11:37:33.033+07:00  INFO 16216 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:37:33.269+07:00  INFO 16216 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T11:37:33.656+07:00  INFO 16216 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@11f6a083, com.mongodb.Jep395RecordCodecProvider@3bc00359, com.mongodb.KotlinCodecProvider@30b91493]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T11:37:33.668+07:00  INFO 16216 --- [Spring_API] [cluster-ClusterId{value='66ac628df857713c13a17aed', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17835900}
2024-08-02T11:37:33.906+07:00  INFO 16216 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T11:37:33.908+07:00  WARN 16216 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T11:37:34.095+07:00  WARN 16216 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T11:37:34.788+07:00  INFO 16216 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T11:37:34.795+07:00  INFO 16216 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.489 seconds (process running for 5.829)
2024-08-02T11:37:39.368+07:00  INFO 16216 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T11:37:39.368+07:00  INFO 16216 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T11:37:39.369+07:00  INFO 16216 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T11:37:39.552+07:00 ERROR 16216 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:44) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T11:53:32.599+07:00  INFO 16216 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:53:32.620+07:00 TRACE 16216 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@62c1259f] for TypeConfiguration
2024-08-02T11:53:32.621+07:00 DEBUG 16216 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@19b2dc85] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@62c1259f]
2024-08-02T11:53:32.628+07:00  INFO 16216 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T11:53:32.664+07:00  INFO 16216 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T11:55:41.755+07:00  INFO 8412 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 8412 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T11:55:41.757+07:00  INFO 8412 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T11:55:42.302+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:55:42.302+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T11:55:42.330+07:00  INFO 8412 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T11:55:42.423+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 109 ms. Found 1 JPA repository interface.
2024-08-02T11:55:42.678+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:55:42.678+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T11:55:42.690+07:00  INFO 8412 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T11:55:42.693+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14 ms. Found 1 MongoDB repository interface.
2024-08-02T11:55:42.702+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:55:42.704+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T11:55:42.713+07:00  INFO 8412 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:55:42.713+07:00  INFO 8412 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:55:42.713+07:00  INFO 8412 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T11:55:43.314+07:00  INFO 8412 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T11:55:43.327+07:00  INFO 8412 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T11:55:43.327+07:00  INFO 8412 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T11:55:43.383+07:00  INFO 8412 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T11:55:43.383+07:00  INFO 8412 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1584 ms
2024-08-02T11:55:43.564+07:00  INFO 8412 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T11:55:43.638+07:00  INFO 8412 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T11:55:43.669+07:00  INFO 8412 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T11:55:43.732+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:55:43.733+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:55:43.734+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:55:43.734+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:55:43.734+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:55:43.735+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:55:43.736+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:55:43.737+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:55:43.738+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:55:43.739+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:55:43.739+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:55:43.739+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:55:43.740+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:55:43.741+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:55:43.742+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:55:43.743+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T11:55:43.744+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T11:55:43.748+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@f03ee8f
2024-08-02T11:55:43.748+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f03ee8f
2024-08-02T11:55:43.749+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@91a2543
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@629b780f
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3af36922
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@609b041c
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@474e34e4
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7e2c6702
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T11:55:43.750+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T11:55:43.995+07:00  INFO 8412 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T11:55:44.024+07:00  INFO 8412 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T11:55:44.348+07:00  INFO 8412 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43294e9b
2024-08-02T11:55:44.350+07:00  INFO 8412 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e6458d)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13137835)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T11:55:44.431+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T11:55:44.433+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T11:55:44.433+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T11:55:44.433+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T11:55:44.434+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:55:44.434+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:55:44.436+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6879e983
2024-08-02T11:55:44.436+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@91a2543`
2024-08-02T11:55:44.440+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T11:55:44.440+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:55:44.440+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:55:44.442+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:55:44.443+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:55:44.443+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:55:44.443+07:00 DEBUG 8412 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:55:44.443+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a44a04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a63fa71]
2024-08-02T11:55:45.138+07:00  INFO 8412 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T11:55:45.138+07:00 DEBUG 8412 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a44a04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62c1259f]
2024-08-02T11:55:45.197+07:00 TRACE 8412 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@62c1259f] for TypeConfiguration
2024-08-02T11:55:45.198+07:00  INFO 8412 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:55:45.462+07:00  INFO 8412 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T11:55:45.802+07:00  INFO 8412 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@11f6a083, com.mongodb.Jep395RecordCodecProvider@3bc00359, com.mongodb.KotlinCodecProvider@30b91493]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T11:55:45.813+07:00  INFO 8412 --- [Spring_API] [cluster-ClusterId{value='66ac66d18eab125c7799eac3', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15876900}
2024-08-02T11:55:46.219+07:00  WARN 8412 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T11:55:46.234+07:00  INFO 8412 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T11:55:46.235+07:00  WARN 8412 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T11:55:46.922+07:00  INFO 8412 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T11:55:46.929+07:00  INFO 8412 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.608 seconds (process running for 5.968)
2024-08-02T11:55:54.333+07:00  INFO 8412 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T11:55:54.333+07:00  INFO 8412 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T11:55:54.334+07:00  INFO 8412 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T11:55:54.535+07:00 ERROR 8412 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied] with root cause

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T11:56:12.050+07:00  INFO 8412 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:56:12.051+07:00 TRACE 8412 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@62c1259f] for TypeConfiguration
2024-08-02T11:56:12.051+07:00 DEBUG 8412 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f7746ec] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@62c1259f]
2024-08-02T11:56:12.052+07:00  INFO 8412 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T11:56:12.058+07:00  INFO 8412 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T11:58:47.580+07:00  INFO 26928 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26928 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T11:58:47.581+07:00  INFO 26928 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T11:58:48.093+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:58:48.093+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T11:58:48.119+07:00  INFO 26928 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T11:58:48.191+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 1 JPA repository interface.
2024-08-02T11:58:48.420+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:58:48.421+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T11:58:48.434+07:00  INFO 26928 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T11:58:48.437+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T11:58:48.448+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T11:58:48.450+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T11:58:48.458+07:00  INFO 26928 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:58:48.459+07:00  INFO 26928 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T11:58:48.459+07:00  INFO 26928 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T11:58:49.023+07:00  INFO 26928 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T11:58:49.036+07:00  INFO 26928 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T11:58:49.037+07:00  INFO 26928 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T11:58:49.090+07:00  INFO 26928 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T11:58:49.090+07:00  INFO 26928 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1471 ms
2024-08-02T11:58:49.238+07:00  INFO 26928 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T11:58:49.306+07:00  INFO 26928 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T11:58:49.336+07:00  INFO 26928 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T11:58:49.402+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:58:49.403+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:58:49.404+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T11:58:49.405+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T11:58:49.406+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T11:58:49.407+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:58:49.408+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T11:58:49.409+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T11:58:49.410+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T11:58:49.410+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T11:58:49.410+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T11:58:49.412+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5e5a8718
2024-08-02T11:58:49.413+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5e5a8718
2024-08-02T11:58:49.413+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3af36922
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@609b041c
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7e2c6702
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@51eb0e84
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2eebce87
2024-08-02T11:58:49.414+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T11:58:49.606+07:00  INFO 26928 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T11:58:49.626+07:00  INFO 26928 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T11:58:49.852+07:00  INFO 26928 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42ffbab6
2024-08-02T11:58:49.853+07:00  INFO 26928 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T11:58:49.920+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6)
2024-08-02T11:58:49.920+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d)
2024-08-02T11:58:49.920+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13137835)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a2d66e)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dffff9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2904bc56)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T11:58:49.921+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T11:58:49.922+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T11:58:49.923+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:58:49.923+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T11:58:49.925+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@26612078
2024-08-02T11:58:49.926+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3af36922`
2024-08-02T11:58:49.929+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T11:58:49.929+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:58:49.929+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T11:58:49.930+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:58:49.931+07:00 DEBUG 26928 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T11:58:49.932+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@360a3106] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@737ff5c4]
2024-08-02T11:58:50.559+07:00  INFO 26928 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T11:58:50.559+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@360a3106] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@31daf094]
2024-08-02T11:58:50.608+07:00 TRACE 26928 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@31daf094] for TypeConfiguration
2024-08-02T11:58:50.609+07:00  INFO 26928 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:58:50.630+07:00  WARN 26928 --- [Spring_API] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'jwtTokenProvider': Error creating bean with name 'jwtTokenProvider': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-08-02T11:58:50.631+07:00  INFO 26928 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T11:58:50.632+07:00 TRACE 26928 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@31daf094] for TypeConfiguration
2024-08-02T11:58:50.632+07:00 DEBUG 26928 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3ec52163] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@31daf094]
2024-08-02T11:58:50.633+07:00  INFO 26928 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T11:58:50.641+07:00  INFO 26928 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T11:58:50.644+07:00  INFO 26928 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-08-02T11:58:50.655+07:00  INFO 26928 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T11:58:50.678+07:00 ERROR 26928 --- [Spring_API] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  securityConfig (field com.example.spring.security.JwtTokenProvider com.example.spring.configuration.SecurityConfig.jwtTokenProvider)
↑     ↓
|  jwtTokenProvider (field private org.springframework.security.core.userdetails.UserDetailsService com.example.spring.security.JwtTokenProvider.userDetailsService)
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-08-02T13:56:53.903+07:00  INFO 1864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 1864 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T13:56:53.906+07:00  INFO 1864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T13:56:54.523+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T13:56:54.523+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T13:56:54.552+07:00  INFO 1864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T13:56:54.649+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 117 ms. Found 1 JPA repository interface.
2024-08-02T13:56:54.913+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T13:56:54.913+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T13:56:54.925+07:00  INFO 1864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T13:56:54.928+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T13:56:54.940+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T13:56:54.942+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T13:56:54.952+07:00  INFO 1864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T13:56:54.953+07:00  INFO 1864 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T13:56:54.953+07:00  INFO 1864 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T13:56:55.560+07:00  INFO 1864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T13:56:55.571+07:00  INFO 1864 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T13:56:55.571+07:00  INFO 1864 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T13:56:55.622+07:00  INFO 1864 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T13:56:55.622+07:00  INFO 1864 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1671 ms
2024-08-02T13:56:55.829+07:00  INFO 1864 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T13:56:55.927+07:00  INFO 1864 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T13:56:55.960+07:00  INFO 1864 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T13:56:56.023+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T13:56:56.023+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T13:56:56.023+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T13:56:56.024+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T13:56:56.025+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T13:56:56.026+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T13:56:56.027+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T13:56:56.028+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T13:56:56.029+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T13:56:56.030+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T13:56:56.031+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T13:56:56.035+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T13:56:56.035+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T13:56:56.036+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ebd6fd6
2024-08-02T13:56:56.037+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T13:56:56.039+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@9be7319
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@91a2543
2024-08-02T13:56:56.040+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T13:56:56.288+07:00  INFO 1864 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T13:56:56.337+07:00  INFO 1864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T13:56:56.701+07:00  INFO 1864 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f42336c
2024-08-02T13:56:56.702+07:00  INFO 1864 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T13:56:56.780+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c)
2024-08-02T13:56:56.780+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0)
2024-08-02T13:56:56.780+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781)
2024-08-02T13:56:56.780+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T13:56:56.780+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T13:56:56.781+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0)
2024-08-02T13:56:56.781+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6150afc6)
2024-08-02T13:56:56.781+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e6458d)
2024-08-02T13:56:56.781+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T13:56:56.782+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T13:56:56.783+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T13:56:56.783+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T13:56:56.784+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T13:56:56.784+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T13:56:56.786+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2f0e7fa8
2024-08-02T13:56:56.787+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4ebd6fd6`
2024-08-02T13:56:56.789+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T13:56:56.790+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T13:56:56.790+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T13:56:56.791+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T13:56:56.791+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T13:56:56.792+07:00 DEBUG 1864 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T13:56:56.793+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c4215d7]
2024-08-02T13:56:57.512+07:00  INFO 1864 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T13:56:57.513+07:00 DEBUG 1864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T13:56:57.576+07:00 TRACE 1864 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T13:56:57.577+07:00  INFO 1864 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T13:56:57.843+07:00  INFO 1864 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T13:56:58.254+07:00  INFO 1864 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f1e946f, com.mongodb.Jep395RecordCodecProvider@542adcfa, com.mongodb.KotlinCodecProvider@3adf3670]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T13:56:58.272+07:00  INFO 1864 --- [Spring_API] [cluster-ClusterId{value='66ac833ab398686a4e1729ab', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21105700}
2024-08-02T13:56:58.708+07:00  WARN 1864 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T13:56:58.728+07:00  INFO 1864 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T13:56:58.729+07:00  WARN 1864 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T13:56:59.513+07:00  INFO 1864 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T13:56:59.519+07:00  INFO 1864 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.045 seconds (process running for 6.435)
2024-08-02T13:57:06.213+07:00  INFO 1864 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T13:57:06.213+07:00 TRACE 1864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T13:57:06.213+07:00 DEBUG 1864 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d461df9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T13:57:06.214+07:00  INFO 1864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T13:57:06.220+07:00  INFO 1864 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:13:58.817+07:00  INFO 18916 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18916 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:13:58.819+07:00  INFO 18916 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:13:59.425+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:13:59.425+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:13:59.455+07:00  INFO 18916 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:13:59.557+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 122 ms. Found 1 JPA repository interface.
2024-08-02T14:13:59.808+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:13:59.808+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:13:59.820+07:00  INFO 18916 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:13:59.824+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T14:13:59.835+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:13:59.836+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:13:59.846+07:00  INFO 18916 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:13:59.846+07:00  INFO 18916 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:13:59.846+07:00  INFO 18916 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:14:00.501+07:00  INFO 18916 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:14:00.515+07:00  INFO 18916 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:14:00.515+07:00  INFO 18916 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:14:00.565+07:00  INFO 18916 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:14:00.565+07:00  INFO 18916 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1707 ms
2024-08-02T14:14:00.763+07:00  INFO 18916 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:14:00.852+07:00  INFO 18916 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:14:00.883+07:00  INFO 18916 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:14:00.950+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:14:00.951+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:14:00.952+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:14:00.953+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:14:00.954+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:14:00.955+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:14:00.956+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:14:00.957+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T14:14:00.958+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T14:14:00.959+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T14:14:00.963+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4e50ae56
2024-08-02T14:14:00.964+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e50ae56
2024-08-02T14:14:00.965+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5fb7ab9c
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2eebce87
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6775c0d1
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38f617f4
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4899799b
2024-08-02T14:14:00.966+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dea226b
2024-08-02T14:14:01.287+07:00  INFO 18916 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:14:01.322+07:00  INFO 18916 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:14:01.684+07:00  INFO 18916 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4654e373
2024-08-02T14:14:01.686+07:00  INFO 18916 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:14:01.767+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640)
2024-08-02T14:14:01.767+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13137835)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22002459)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a2d66e)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dffff9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2904bc56)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bb25046) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b1e8f8)
2024-08-02T14:14:01.768+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@126af200) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e000a17)
2024-08-02T14:14:01.770+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:14:01.770+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:14:01.770+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:14:01.772+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:14:01.772+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:14:01.774+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3c3cd7a5
2024-08-02T14:14:01.774+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5fb7ab9c`
2024-08-02T14:14:01.776+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:14:01.776+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:14:01.776+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:14:01.778+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:14:01.779+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:14:01.779+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:14:01.779+07:00 DEBUG 18916 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:14:01.779+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aa7703] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79777da7]
2024-08-02T14:14:02.516+07:00  INFO 18916 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:14:02.516+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aa7703] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@748fa354]
2024-08-02T14:14:02.593+07:00 TRACE 18916 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@748fa354] for TypeConfiguration
2024-08-02T14:14:02.593+07:00  INFO 18916 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:14:02.613+07:00  WARN 18916 --- [Spring_API] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'jwtTokenProvider': Error creating bean with name 'jwtTokenProvider': Unsatisfied dependency expressed through field 'userDetailsService': Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2024-08-02T14:14:02.613+07:00  INFO 18916 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:14:02.614+07:00 TRACE 18916 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@748fa354] for TypeConfiguration
2024-08-02T14:14:02.614+07:00 DEBUG 18916 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@41e43885] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@748fa354]
2024-08-02T14:14:02.616+07:00  INFO 18916 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:14:02.623+07:00  INFO 18916 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:14:02.625+07:00  INFO 18916 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-08-02T14:14:02.635+07:00  INFO 18916 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T14:14:02.652+07:00 ERROR 18916 --- [Spring_API] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  securityConfig (field com.example.spring.security.JwtTokenProvider com.example.spring.configuration.SecurityConfig.jwtTokenProvider)
↑     ↓
|  jwtTokenProvider (field private org.springframework.security.core.userdetails.UserDetailsService com.example.spring.security.JwtTokenProvider.userDetailsService)
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2024-08-02T14:16:43.062+07:00  INFO 11696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 11696 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:16:43.064+07:00  INFO 11696 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:16:43.677+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:16:43.677+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:16:43.713+07:00  INFO 11696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:16:43.817+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 128 ms. Found 1 JPA repository interface.
2024-08-02T14:16:44.070+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:16:44.070+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:16:44.084+07:00  INFO 11696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:16:44.087+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T14:16:44.098+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:16:44.099+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:16:44.109+07:00  INFO 11696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:16:44.109+07:00  INFO 11696 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:16:44.109+07:00  INFO 11696 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:16:44.772+07:00  INFO 11696 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:16:44.786+07:00  INFO 11696 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:16:44.786+07:00  INFO 11696 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:16:44.839+07:00  INFO 11696 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:16:44.839+07:00  INFO 11696 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1736 ms
2024-08-02T14:16:45.038+07:00  INFO 11696 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:16:45.114+07:00  INFO 11696 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:16:45.151+07:00  INFO 11696 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:16:45.213+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:16:45.214+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:16:45.215+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:16:45.216+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:16:45.217+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:16:45.218+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:16:45.219+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:16:45.220+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:16:45.221+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:16:45.222+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:16:45.223+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:16:45.223+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:16:45.223+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T14:16:45.223+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:16:45.226+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T14:16:45.226+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T14:16:45.227+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@f03ee8f
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T14:16:45.228+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T14:16:45.472+07:00  INFO 11696 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:16:45.503+07:00  INFO 11696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:16:45.829+07:00  INFO 11696 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7482309c
2024-08-02T14:16:45.831+07:00  INFO 11696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:16:45.908+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498)
2024-08-02T14:16:45.908+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42)
2024-08-02T14:16:45.908+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f)
2024-08-02T14:16:45.908+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T14:16:45.909+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T14:16:45.909+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T14:16:45.909+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T14:16:45.909+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f)
2024-08-02T14:16:45.909+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b)
2024-08-02T14:16:45.910+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:16:45.911+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:16:45.911+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:16:45.912+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:16:45.912+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:16:45.914+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3245efdb
2024-08-02T14:16:45.915+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f03ee8f`
2024-08-02T14:16:45.917+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:16:45.917+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:16:45.917+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:16:45.919+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:16:45.920+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:16:45.920+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:16:45.920+07:00 DEBUG 11696 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:16:45.920+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cb49121] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@227b9277]
2024-08-02T14:16:46.625+07:00  INFO 11696 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:16:46.626+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cb49121] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T14:16:46.681+07:00 TRACE 11696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T14:16:46.681+07:00  INFO 11696 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:16:46.966+07:00  INFO 11696 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:16:47.374+07:00  INFO 11696 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@56957f08, com.mongodb.Jep395RecordCodecProvider@5b0fc8c2, com.mongodb.KotlinCodecProvider@2140582]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:16:47.390+07:00  INFO 11696 --- [Spring_API] [cluster-ClusterId{value='66ac87dfc9374b53347524d8', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20227800}
2024-08-02T14:16:47.569+07:00  WARN 11696 --- [Spring_API] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginRequestController' defined in file [C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes\com\example\spring\controller\LoginRequestController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'authenticationManager' defined in class path resource [com/example/spring/configuration/SecurityConfig.class]: Unsatisfied dependency expressed through method 'authenticationManager' parameter 1: No qualifying bean of type 'org.springframework.security.crypto.password.PasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-08-02T14:16:47.574+07:00  INFO 11696 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:16:47.575+07:00 TRACE 11696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T14:16:47.575+07:00 DEBUG 11696 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@577e2b91] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T14:16:47.577+07:00  INFO 11696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:16:47.583+07:00  INFO 11696 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:16:47.585+07:00  INFO 11696 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-08-02T14:16:47.594+07:00  INFO 11696 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T14:16:47.613+07:00 ERROR 11696 --- [Spring_API] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of method authenticationManager in com.example.spring.configuration.SecurityConfig required a bean of type 'org.springframework.security.crypto.password.PasswordEncoder' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.security.crypto.password.PasswordEncoder' in your configuration.

2024-08-02T14:23:18.270+07:00  INFO 14700 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 14700 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:23:18.271+07:00  INFO 14700 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:23:18.853+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:23:18.853+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:23:18.883+07:00  INFO 14700 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:23:18.983+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 120 ms. Found 1 JPA repository interface.
2024-08-02T14:23:19.240+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:23:19.240+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:23:19.253+07:00  INFO 14700 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:23:19.256+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T14:23:19.267+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:23:19.268+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:23:19.278+07:00  INFO 14700 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:23:19.278+07:00  INFO 14700 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:23:19.278+07:00  INFO 14700 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:23:19.890+07:00  INFO 14700 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:23:19.904+07:00  INFO 14700 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:23:19.904+07:00  INFO 14700 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:23:19.956+07:00  INFO 14700 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:23:19.957+07:00  INFO 14700 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1648 ms
2024-08-02T14:23:20.146+07:00  INFO 14700 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:23:20.238+07:00  INFO 14700 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:23:20.274+07:00  INFO 14700 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:23:20.346+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:23:20.347+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:23:20.348+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:23:20.349+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:23:20.350+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:23:20.351+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:23:20.351+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:23:20.351+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:23:20.351+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:23:20.352+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:23:20.352+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:23:20.352+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:23:20.352+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T14:23:20.352+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:23:20.353+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:23:20.354+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:23:20.355+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T14:23:20.356+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T14:23:20.357+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T14:23:20.357+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T14:23:20.357+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T14:23:20.357+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T14:23:20.361+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@f03ee8f
2024-08-02T14:23:20.362+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@f03ee8f
2024-08-02T14:23:20.362+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@91a2543
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@629b780f
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3af36922
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@609b041c
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@474e34e4
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7e2c6702
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T14:23:20.363+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T14:23:20.621+07:00  INFO 14700 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:23:20.663+07:00  INFO 14700 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:23:20.986+07:00  INFO 14700 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@43294e9b
2024-08-02T14:23:20.987+07:00  INFO 14700 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:23:21.062+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e6458d)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13137835)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T14:23:21.063+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T14:23:21.064+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:23:21.064+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:23:21.064+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:23:21.066+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:23:21.066+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:23:21.068+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6879e983
2024-08-02T14:23:21.068+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@91a2543`
2024-08-02T14:23:21.070+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:23:21.070+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:23:21.070+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:23:21.072+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:23:21.073+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:23:21.073+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:23:21.073+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:23:21.073+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:23:21.073+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:23:21.074+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:23:21.074+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:23:21.074+07:00 DEBUG 14700 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:23:21.074+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a44a04] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a63fa71]
2024-08-02T14:23:21.774+07:00  INFO 14700 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:23:21.775+07:00 DEBUG 14700 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44a44a04] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3458be63]
2024-08-02T14:23:21.839+07:00 TRACE 14700 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3458be63] for TypeConfiguration
2024-08-02T14:23:21.839+07:00  INFO 14700 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:23:22.157+07:00  INFO 14700 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:23:22.531+07:00  INFO 14700 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@693676d, com.mongodb.Jep395RecordCodecProvider@2a0a178f, com.mongodb.KotlinCodecProvider@55a7f0af]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:23:22.551+07:00  INFO 14700 --- [Spring_API] [cluster-ClusterId{value='66ac896aca5230647951e457', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=27469600}
2024-08-02T14:23:22.765+07:00  INFO 14700 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T14:23:22.966+07:00  WARN 14700 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T14:23:23.706+07:00  INFO 14700 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T14:23:23.713+07:00  INFO 14700 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.864 seconds (process running for 6.28)
2024-08-02T14:23:26.737+07:00  INFO 14700 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:23:26.737+07:00 TRACE 14700 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3458be63] for TypeConfiguration
2024-08-02T14:23:26.737+07:00 DEBUG 14700 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3861e5a3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3458be63]
2024-08-02T14:23:26.738+07:00  INFO 14700 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:23:26.745+07:00  INFO 14700 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:30:23.240+07:00  INFO 19628 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 19628 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:30:23.242+07:00  INFO 19628 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:30:23.842+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:30:23.843+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:30:23.875+07:00  INFO 19628 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:30:23.970+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface.
2024-08-02T14:30:24.229+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:30:24.229+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:30:24.244+07:00  INFO 19628 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:30:24.247+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 1 MongoDB repository interface.
2024-08-02T14:30:24.257+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:30:24.259+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:30:24.270+07:00  INFO 19628 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:30:24.270+07:00  INFO 19628 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:30:24.270+07:00  INFO 19628 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:30:24.903+07:00  INFO 19628 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:30:24.917+07:00  INFO 19628 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:30:24.917+07:00  INFO 19628 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:30:24.967+07:00  INFO 19628 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:30:24.967+07:00  INFO 19628 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1686 ms
2024-08-02T14:30:25.159+07:00  INFO 19628 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:30:25.233+07:00  INFO 19628 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:30:25.272+07:00  INFO 19628 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:30:25.345+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:30:25.346+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:30:25.347+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:30:25.348+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:30:25.349+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:30:25.350+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:30:25.351+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:30:25.352+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:30:25.353+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T14:30:25.354+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T14:30:25.358+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T14:30:25.358+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T14:30:25.359+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@f03ee8f
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T14:30:25.360+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T14:30:25.645+07:00  INFO 19628 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:30:25.674+07:00  INFO 19628 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:30:26.018+07:00  INFO 19628 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3bdbf8d3
2024-08-02T14:30:26.021+07:00  INFO 19628 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:30:26.098+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4)
2024-08-02T14:30:26.098+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498)
2024-08-02T14:30:26.098+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T14:30:26.099+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f)
2024-08-02T14:30:26.101+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:30:26.101+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:30:26.101+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:30:26.103+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:30:26.103+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:30:26.105+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@627d35ff
2024-08-02T14:30:26.105+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f03ee8f`
2024-08-02T14:30:26.107+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:30:26.108+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:30:26.108+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:30:26.109+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:30:26.110+07:00 DEBUG 19628 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:30:26.111+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e360c3b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24ac6fef]
2024-08-02T14:30:26.822+07:00  INFO 19628 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:30:26.823+07:00 DEBUG 19628 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e360c3b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T14:30:26.880+07:00 TRACE 19628 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T14:30:26.880+07:00  INFO 19628 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:30:27.216+07:00  INFO 19628 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:30:27.615+07:00  INFO 19628 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@56957f08, com.mongodb.Jep395RecordCodecProvider@5b0fc8c2, com.mongodb.KotlinCodecProvider@2140582]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:30:27.632+07:00  INFO 19628 --- [Spring_API] [cluster-ClusterId{value='66ac8b1382664d7f9a77156b', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20672100}
2024-08-02T14:30:27.937+07:00  INFO 19628 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T14:30:28.125+07:00  WARN 19628 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T14:30:28.880+07:00  INFO 19628 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T14:30:28.888+07:00  INFO 19628 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.059 seconds (process running for 6.449)
2024-08-02T14:31:32.200+07:00  INFO 19628 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T14:31:32.201+07:00  INFO 19628 --- [Spring_API] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T14:31:32.202+07:00  INFO 19628 --- [Spring_API] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T14:33:59.376+07:00 ERROR 19628 --- [Spring_API] [http-nio-8080-exec-8] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied] with root cause

org.springframework.security.authentication.BadCredentialsException: Invalid username/password supplied
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T14:39:04.535+07:00  WARN 19628 --- [Spring_API] [http-nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2024-08-02T14:39:20.212+07:00  INFO 19628 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:39:20.218+07:00 TRACE 19628 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T14:39:20.218+07:00 DEBUG 19628 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@c9f695c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T14:39:20.222+07:00  INFO 19628 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:39:20.239+07:00  INFO 19628 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:41:11.329+07:00  INFO 19320 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 19320 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:41:11.331+07:00  INFO 19320 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:41:12.166+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:41:12.166+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:41:12.201+07:00  INFO 19320 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:41:12.317+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 140 ms. Found 1 JPA repository interface.
2024-08-02T14:41:12.578+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:41:12.579+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:41:12.593+07:00  INFO 19320 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:41:12.596+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 1 MongoDB repository interface.
2024-08-02T14:41:12.619+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:41:12.621+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:41:12.635+07:00  INFO 19320 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:41:12.636+07:00  INFO 19320 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:41:12.636+07:00  INFO 19320 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:41:13.425+07:00  INFO 19320 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:41:13.438+07:00  INFO 19320 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:41:13.438+07:00  INFO 19320 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:41:13.492+07:00  INFO 19320 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:41:13.492+07:00  INFO 19320 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2111 ms
2024-08-02T14:41:13.748+07:00  INFO 19320 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:41:13.815+07:00  INFO 19320 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:41:13.852+07:00  INFO 19320 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@255ed8e4
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@255ed8e4
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@255ed8e4
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@406ad6d5
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@406ad6d5
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-08-02T14:41:13.930+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1186374c
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1186374c
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42cc5460
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@42cc5460
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@42cc5460
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5486ee92
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5486ee92
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5486ee92
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@20820df0
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@20820df0
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@9e62fb
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@205159dc
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@205159dc
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@43c0c13a
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@731db93f
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@67941d
2024-08-02T14:41:13.931+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@67941d
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@67941d
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@2ad2b274
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@2ad2b274
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2ad2b274
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@72110818
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@72110818
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6eabe718
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6eabe718
2024-08-02T14:41:13.932+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@38d525aa
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@38d525aa
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@38d525aa
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@f9b8129
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7530090a
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7530090a
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4492b393
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@55fb36de
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@55fb36de
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@55fb36de
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@63a7781
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@73b74615
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@22686ddb
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2e29f28e
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2e29f28e
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7bfa1eb5
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7bfa1eb5
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b46831
2024-08-02T14:41:13.933+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5353dd09
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@320ff86f
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@192b472d
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@84f51d9
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45b96e4c
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@8383a14
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@8383a14
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4b691611
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4b691611
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@395a573c
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@395a573c
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@379f9555
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@379f9555
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e3ee128
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7e3ee128
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7d64a960
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@166ce247
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5d92e8e2
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5d92e8e2
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@542c65d9
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cdbe995
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7dd45c93
2024-08-02T14:41:13.934+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@374b6e33
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@374b6e33
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ed7ae
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53ba1175
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@cd5ff55
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@cd5ff55
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6003220a
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6003220a
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16b64a03
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16b64a03
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16b64a03
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1584c019
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1584c019
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1584c019
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3688baab
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4fe2dd02
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6ba060af
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6ba060af
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5817f1ca
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5817f1ca
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5817f1ca
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2b395581
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@726a8729
2024-08-02T14:41:13.935+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1a2724d3
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a2724d3
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@7dd91ffc
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7dd91ffc
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7dd91ffc
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1c2dd89b
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1c2dd89b
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@19faedcc
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@19faedcc
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2c6927f0
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2c6927f0
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5ef2cbe6
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5ef2cbe6
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@266da047
2024-08-02T14:41:13.936+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@68b7bdcb
2024-08-02T14:41:13.940+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@77e9dca8
2024-08-02T14:41:13.940+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@77e9dca8
2024-08-02T14:41:13.942+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@78128dd0
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@55044b34
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@300a38e7
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5c9a4f3b
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2bb0e277
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6f24ce45
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@e881e46
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@657b3b
2024-08-02T14:41:13.943+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2cea921a
2024-08-02T14:41:14.200+07:00  INFO 19320 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:41:14.232+07:00  INFO 19320 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:41:14.587+07:00  INFO 19320 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35555145
2024-08-02T14:41:14.589+07:00  INFO 19320 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:41:14.667+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@405223e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2133fd)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58a7a58d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d8522ff)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c9975a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3883031d)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d6d424d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@391b01c5)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e78177b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ec37a42)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@798b36fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18ff1520)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36120a8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63d66761)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434a8938) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@237cd264)
2024-08-02T14:41:14.668+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5521407f)
2024-08-02T14:41:14.670+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:41:14.670+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:41:14.670+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:41:14.671+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:41:14.672+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:41:14.674+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2b15ba1a
2024-08-02T14:41:14.674+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@78128dd0`
2024-08-02T14:41:14.677+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:41:14.677+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:41:14.677+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:41:14.681+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:41:14.682+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:41:14.682+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:41:14.682+07:00 DEBUG 19320 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:41:14.683+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a34505a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b787274]
2024-08-02T14:41:15.470+07:00  INFO 19320 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:41:15.471+07:00 DEBUG 19320 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a34505a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@613f48de]
2024-08-02T14:41:15.542+07:00 TRACE 19320 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@613f48de] for TypeConfiguration
2024-08-02T14:41:15.543+07:00  INFO 19320 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:41:15.879+07:00  INFO 19320 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:41:16.280+07:00  INFO 19320 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2625eb84, com.mongodb.Jep395RecordCodecProvider@3d2a164e, com.mongodb.KotlinCodecProvider@3725471]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:41:16.291+07:00  INFO 19320 --- [Spring_API] [cluster-ClusterId{value='66ac8d9c7f44a223a64da30c', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20634600}
2024-08-02T14:41:16.513+07:00  INFO 19320 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T14:41:16.769+07:00  WARN 19320 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T14:41:17.823+07:00  INFO 19320 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T14:41:17.831+07:00  INFO 19320 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.96 seconds (process running for 7.983)
2024-08-02T14:41:24.211+07:00  INFO 19320 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T14:41:24.211+07:00  INFO 19320 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T14:41:24.212+07:00  INFO 19320 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T14:41:24.238+07:00  WARN 19320 --- [Spring_API] [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-08-02T14:44:50.108+07:00  INFO 19320 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:44:50.110+07:00 TRACE 19320 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@613f48de] for TypeConfiguration
2024-08-02T14:44:50.110+07:00 DEBUG 19320 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7fe74223] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@613f48de]
2024-08-02T14:44:50.110+07:00  INFO 19320 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:44:50.118+07:00  INFO 19320 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:44:52.053+07:00  INFO 26436 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 26436 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:44:52.055+07:00  INFO 26436 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:44:52.717+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:44:52.717+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:44:52.743+07:00  INFO 26436 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:44:52.830+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.
2024-08-02T14:44:53.078+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:44:53.079+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:44:53.092+07:00  INFO 26436 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:44:53.095+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T14:44:53.105+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:44:53.107+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:44:53.116+07:00  INFO 26436 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:44:53.116+07:00  INFO 26436 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:44:53.116+07:00  INFO 26436 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:44:53.787+07:00  INFO 26436 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:44:53.800+07:00  INFO 26436 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:44:53.800+07:00  INFO 26436 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:44:53.866+07:00  INFO 26436 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:44:53.868+07:00  INFO 26436 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1770 ms
2024-08-02T14:44:54.093+07:00  INFO 26436 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:44:54.163+07:00  INFO 26436 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:44:54.202+07:00  INFO 26436 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:44:54.280+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-08-02T14:44:54.280+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-08-02T14:44:54.280+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-08-02T14:44:54.280+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1186374c
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1186374c
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@42cc5460
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@42cc5460
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5486ee92
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5486ee92
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@20820df0
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@20820df0
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@20820df0
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@9e62fb
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@9e62fb
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@9e62fb
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@205159dc
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@205159dc
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@43c0c13a
2024-08-02T14:44:54.281+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@731db93f
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@731db93f
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@67941d
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2ad2b274
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7114e780
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4def42c3
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@72110818
2024-08-02T14:44:54.282+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@72110818
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72110818
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6eabe718
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6eabe718
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6eabe718
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@38d525aa
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@38d525aa
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f9b8129
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f9b8129
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7530090a
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7530090a
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7530090a
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4492b393
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@55fb36de
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@55fb36de
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63a7781
2024-08-02T14:44:54.283+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@73b74615
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@73b74615
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@73b74615
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@22686ddb
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2e29f28e
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7bfa1eb5
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@32b46831
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32b46831
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5353dd09
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5353dd09
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@320ff86f
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@192b472d
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@84f51d9
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45b96e4c
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@8383a14
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4b691611
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@395a573c
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@395a573c
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@379f9555
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@379f9555
2024-08-02T14:44:54.284+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7e3ee128
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7e3ee128
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7d64a960
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7d64a960
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@166ce247
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@166ce247
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d92e8e2
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@542c65d9
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@cdbe995
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@cdbe995
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7dd45c93
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@374b6e33
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ed7ae
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@53ba1175
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@53ba1175
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@cd5ff55
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6003220a
2024-08-02T14:44:54.285+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@16b64a03
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16b64a03
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1584c019
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1584c019
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3688baab
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3688baab
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3688baab
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4fe2dd02
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4fe2dd02
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4fe2dd02
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6ba060af
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5817f1ca
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2b395581
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2b395581
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@726a8729
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@726a8729
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@726a8729
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1a2724d3
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7dd91ffc
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1c2dd89b
2024-08-02T14:44:54.286+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1c2dd89b
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@19faedcc
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@19faedcc
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2c6927f0
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2c6927f0
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5ef2cbe6
2024-08-02T14:44:54.287+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5ef2cbe6
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@266da047
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@266da047
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@68b7bdcb
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@68b7bdcb
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@d84418a
2024-08-02T14:44:54.288+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@45e11627
2024-08-02T14:44:54.292+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4e4d0a0b
2024-08-02T14:44:54.292+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e4d0a0b
2024-08-02T14:44:54.293+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@28dd81ad
2024-08-02T14:44:54.293+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@300a38e7
2024-08-02T14:44:54.293+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2bb0e277
2024-08-02T14:44:54.293+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6f24ce45
2024-08-02T14:44:54.294+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@e881e46
2024-08-02T14:44:54.294+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@657b3b
2024-08-02T14:44:54.294+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2cea921a
2024-08-02T14:44:54.294+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@65753724
2024-08-02T14:44:54.294+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2bc16fe2
2024-08-02T14:44:54.577+07:00  INFO 26436 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:44:54.608+07:00  INFO 26436 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:44:54.972+07:00  INFO 26436 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@771cbd13
2024-08-02T14:44:54.974+07:00  INFO 26436 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58a7a58d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d8522ff)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c9975a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3883031d)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d6d424d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@391b01c5)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e78177b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ec37a42)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@798b36fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18ff1520)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@36120a8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63d66761)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434a8938) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@237cd264)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5521407f)
2024-08-02T14:44:55.051+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b500aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71f056a)
2024-08-02T14:44:55.053+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:44:55.053+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:44:55.053+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:44:55.054+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:44:55.054+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:44:55.057+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5a6af2c4
2024-08-02T14:44:55.057+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@28dd81ad`
2024-08-02T14:44:55.060+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:44:55.060+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:44:55.060+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:44:55.062+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:44:55.062+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:44:55.063+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:44:55.063+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:44:55.063+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:44:55.063+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:44:55.064+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:44:55.064+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:44:55.064+07:00 DEBUG 26436 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:44:55.065+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ec616d6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55b45ea1]
2024-08-02T14:44:55.826+07:00  INFO 26436 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:44:55.827+07:00 DEBUG 26436 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4ec616d6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d8751de]
2024-08-02T14:44:55.892+07:00 TRACE 26436 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@d8751de] for TypeConfiguration
2024-08-02T14:44:55.892+07:00  INFO 26436 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:44:56.176+07:00  INFO 26436 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:44:56.646+07:00  INFO 26436 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3725471, com.mongodb.Jep395RecordCodecProvider@35216a2e, com.mongodb.KotlinCodecProvider@3c51dec5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:44:56.661+07:00  INFO 26436 --- [Spring_API] [cluster-ClusterId{value='66ac8e7831fc1d1374f10bb2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21905400}
2024-08-02T14:44:56.914+07:00  INFO 26436 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T14:44:57.139+07:00  WARN 26436 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T14:44:58.024+07:00  INFO 26436 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T14:44:58.032+07:00  INFO 26436 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.485 seconds (process running for 7.215)
2024-08-02T14:52:16.156+07:00  WARN 26436 --- [Spring_API] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m20s971ms567µs200ns).
2024-08-02T14:53:39.335+07:00  INFO 26436 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:53:39.361+07:00 TRACE 26436 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@d8751de] for TypeConfiguration
2024-08-02T14:53:39.362+07:00 DEBUG 26436 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7d859bd4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@d8751de]
2024-08-02T14:53:39.372+07:00  INFO 26436 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T14:53:39.414+07:00  INFO 26436 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T14:59:17.016+07:00  INFO 1452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 1452 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T14:59:17.018+07:00  INFO 1452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T14:59:17.609+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:59:17.609+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T14:59:17.643+07:00  INFO 1452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T14:59:17.749+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 130 ms. Found 1 JPA repository interface.
2024-08-02T14:59:18.026+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:59:18.027+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T14:59:18.043+07:00  INFO 1452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T14:59:18.047+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 1 MongoDB repository interface.
2024-08-02T14:59:18.058+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T14:59:18.059+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T14:59:18.069+07:00  INFO 1452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:59:18.070+07:00  INFO 1452 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T14:59:18.070+07:00  INFO 1452 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T14:59:18.682+07:00  INFO 1452 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T14:59:18.695+07:00  INFO 1452 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T14:59:18.695+07:00  INFO 1452 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T14:59:18.750+07:00  INFO 1452 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T14:59:18.750+07:00  INFO 1452 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1690 ms
2024-08-02T14:59:18.951+07:00  INFO 1452 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T14:59:19.034+07:00  INFO 1452 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T14:59:19.069+07:00  INFO 1452 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:59:19.145+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T14:59:19.147+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T14:59:19.148+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T14:59:19.149+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T14:59:19.150+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:59:19.151+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:59:19.152+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T14:59:19.153+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T14:59:19.160+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T14:59:19.160+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T14:59:19.161+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1c6e3ff9
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@76e6c070
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T14:59:19.162+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T14:59:19.389+07:00  INFO 1452 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T14:59:19.428+07:00  INFO 1452 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T14:59:19.773+07:00  INFO 1452 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5cfa2ac5
2024-08-02T14:59:19.775+07:00  INFO 1452 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T14:59:19.854+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d42275) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T14:59:19.855+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T14:59:19.856+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T14:59:19.856+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T14:59:19.856+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T14:59:19.858+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:59:19.858+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T14:59:19.860+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@72ec16f8
2024-08-02T14:59:19.860+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c6e3ff9`
2024-08-02T14:59:19.862+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T14:59:19.862+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:59:19.862+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:59:19.864+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T14:59:19.865+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:59:19.865+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:59:19.865+07:00 DEBUG 1452 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T14:59:19.866+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51fb5fe6]
2024-08-02T14:59:20.579+07:00  INFO 1452 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T14:59:20.579+07:00 DEBUG 1452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@da5b46f]
2024-08-02T14:59:20.644+07:00 TRACE 1452 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@da5b46f] for TypeConfiguration
2024-08-02T14:59:20.644+07:00  INFO 1452 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T14:59:20.962+07:00  INFO 1452 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T14:59:21.305+07:00  INFO 1452 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3a7abd4, com.mongodb.Jep395RecordCodecProvider@3846ba32, com.mongodb.KotlinCodecProvider@40a32c25]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T14:59:21.322+07:00  INFO 1452 --- [Spring_API] [cluster-ClusterId{value='66ac91d986eba52b8da69673', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20625800}
2024-08-02T14:59:21.523+07:00  INFO 1452 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T14:59:21.767+07:00  WARN 1452 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T14:59:22.553+07:00  INFO 1452 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T14:59:22.568+07:00  INFO 1452 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.97 seconds (process running for 6.399)
2024-08-02T14:59:29.382+07:00  INFO 1452 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T14:59:29.382+07:00  INFO 1452 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T14:59:29.384+07:00  INFO 1452 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T14:59:29.417+07:00  WARN 1452 --- [Spring_API] [http-nio-8080-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-08-02T14:59:46.197+07:00 ERROR 1452 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Invalid username/password suppliedmod12345678] with root cause

org.springframework.security.authentication.BadCredentialsException: Invalid username/password suppliedmod12345678
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:00:44.046+07:00  INFO 1452 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:00:44.047+07:00 TRACE 1452 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@da5b46f] for TypeConfiguration
2024-08-02T15:00:44.048+07:00 DEBUG 1452 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3cbb67c9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@da5b46f]
2024-08-02T15:00:44.048+07:00  INFO 1452 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:00:44.057+07:00  INFO 1452 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:04:44.320+07:00  INFO 1984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 1984 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:04:44.322+07:00  INFO 1984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:04:44.961+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:04:44.961+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:04:44.991+07:00  INFO 1984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:04:45.094+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2024-08-02T15:04:45.361+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:04:45.362+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:04:45.375+07:00  INFO 1984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:04:45.379+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 1 MongoDB repository interface.
2024-08-02T15:04:45.389+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:04:45.390+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:04:45.401+07:00  INFO 1984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:04:45.401+07:00  INFO 1984 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:04:45.402+07:00  INFO 1984 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T15:04:46.040+07:00  INFO 1984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:04:46.053+07:00  INFO 1984 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:04:46.053+07:00  INFO 1984 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:04:46.113+07:00  INFO 1984 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:04:46.113+07:00  INFO 1984 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1753 ms
2024-08-02T15:04:46.349+07:00  INFO 1984 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:04:46.413+07:00  INFO 1984 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:04:46.448+07:00  INFO 1984 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:04:46.516+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:04:46.517+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:04:46.518+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:04:46.519+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:04:46.520+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:04:46.521+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:04:46.522+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:04:46.523+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:04:46.527+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T15:04:46.527+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T15:04:46.528+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@f03ee8f
2024-08-02T15:04:46.529+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T15:04:46.529+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T15:04:46.530+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T15:04:46.788+07:00  INFO 1984 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:04:46.820+07:00  INFO 1984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:04:47.158+07:00  INFO 1984 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3bdbf8d3
2024-08-02T15:04:47.159+07:00  INFO 1984 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T15:04:47.234+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f)
2024-08-02T15:04:47.235+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:04:47.236+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:04:47.236+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:04:47.237+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:04:47.237+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:04:47.239+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@627d35ff
2024-08-02T15:04:47.239+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f03ee8f`
2024-08-02T15:04:47.242+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:04:47.242+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:04:47.242+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:04:47.244+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:04:47.245+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:04:47.245+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:04:47.245+07:00 DEBUG 1984 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:04:47.246+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e360c3b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24ac6fef]
2024-08-02T15:04:47.956+07:00  INFO 1984 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:04:47.957+07:00 DEBUG 1984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e360c3b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T15:04:48.015+07:00 TRACE 1984 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T15:04:48.015+07:00  INFO 1984 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:04:48.256+07:00  INFO 1984 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:04:48.666+07:00  INFO 1984 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@56957f08, com.mongodb.Jep395RecordCodecProvider@5b0fc8c2, com.mongodb.KotlinCodecProvider@2140582]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:04:48.678+07:00  INFO 1984 --- [Spring_API] [cluster-ClusterId{value='66ac932091559a5dd62cdb83', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18240500}
2024-08-02T15:04:48.874+07:00  INFO 1984 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:04:49.056+07:00  WARN 1984 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T15:04:49.799+07:00  INFO 1984 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T15:04:49.805+07:00  INFO 1984 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.912 seconds (process running for 6.313)
2024-08-02T15:05:00.456+07:00  INFO 1984 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T15:05:00.456+07:00  INFO 1984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T15:05:00.458+07:00  INFO 1984 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T15:05:00.637+07:00 ERROR 1984 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:44) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:11:30.588+07:00  INFO 1984 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:11:30.617+07:00 TRACE 1984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7827cdfc] for TypeConfiguration
2024-08-02T15:11:30.617+07:00 DEBUG 1984 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d5b0661] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7827cdfc]
2024-08-02T15:11:30.626+07:00  INFO 1984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:11:30.660+07:00  INFO 1984 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:11:41.130+07:00  INFO 7740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 7740 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:11:41.131+07:00  INFO 7740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:11:41.741+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:11:41.741+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:11:41.772+07:00  INFO 7740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:11:41.869+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 119 ms. Found 1 JPA repository interface.
2024-08-02T15:11:42.137+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:11:42.137+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:11:42.151+07:00  INFO 7740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:11:42.155+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17 ms. Found 1 MongoDB repository interface.
2024-08-02T15:11:42.167+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:11:42.169+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:11:42.180+07:00  INFO 7740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:11:42.180+07:00  INFO 7740 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:11:42.181+07:00  INFO 7740 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T15:11:42.817+07:00  INFO 7740 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:11:42.830+07:00  INFO 7740 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:11:42.830+07:00  INFO 7740 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:11:42.882+07:00  INFO 7740 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:11:42.883+07:00  INFO 7740 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1707 ms
2024-08-02T15:11:43.066+07:00  INFO 7740 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:11:43.134+07:00  INFO 7740 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:11:43.184+07:00  INFO 7740 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:11:43.253+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:11:43.255+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:11:43.256+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:11:43.257+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:11:43.258+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:11:43.259+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:11:43.263+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T15:11:43.263+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1c6e3ff9
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@76e6c070
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T15:11:43.264+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T15:11:43.265+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T15:11:43.265+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T15:11:43.265+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T15:11:43.492+07:00  INFO 7740 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:11:43.519+07:00  INFO 7740 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:11:43.886+07:00  INFO 7740 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5cfa2ac5
2024-08-02T15:11:43.887+07:00  INFO 7740 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d42275) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T15:11:43.968+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T15:11:43.969+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T15:11:43.969+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T15:11:43.970+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:11:43.970+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:11:43.970+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:11:43.971+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:11:43.971+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:11:43.974+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@72ec16f8
2024-08-02T15:11:43.974+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c6e3ff9`
2024-08-02T15:11:43.976+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:11:43.976+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:11:43.976+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:11:43.980+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:11:43.980+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:11:43.981+07:00 DEBUG 7740 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:11:43.982+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51fb5fe6]
2024-08-02T15:11:44.805+07:00  INFO 7740 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:11:44.806+07:00 DEBUG 7740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c30decf]
2024-08-02T15:11:44.928+07:00 TRACE 7740 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c30decf] for TypeConfiguration
2024-08-02T15:11:44.929+07:00  INFO 7740 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:11:45.243+07:00  INFO 7740 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:11:45.701+07:00  INFO 7740 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2140582, com.mongodb.Jep395RecordCodecProvider@7ebc2975, com.mongodb.KotlinCodecProvider@32c7495]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:11:45.718+07:00  INFO 7740 --- [Spring_API] [cluster-ClusterId{value='66ac94c191704b08aad14ced', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19419600}
2024-08-02T15:11:45.977+07:00  INFO 7740 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:11:46.191+07:00  WARN 7740 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T15:11:47.010+07:00  INFO 7740 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T15:11:47.017+07:00  INFO 7740 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.295 seconds (process running for 6.684)
2024-08-02T15:11:51.772+07:00  INFO 7740 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T15:11:51.772+07:00  INFO 7740 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T15:11:51.773+07:00  INFO 7740 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T15:11:51.926+07:00 ERROR 7740 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null
	at com.example.spring.service.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:21) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:13:08.707+07:00  INFO 7740 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:13:08.707+07:00 TRACE 7740 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c30decf] for TypeConfiguration
2024-08-02T15:13:08.708+07:00 DEBUG 7740 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2110a3e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c30decf]
2024-08-02T15:13:08.708+07:00  INFO 7740 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:13:08.715+07:00  INFO 7740 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:13:11.562+07:00  INFO 16636 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16636 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:13:11.564+07:00  INFO 16636 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:13:12.079+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:13:12.079+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:13:12.108+07:00  INFO 16636 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:13:12.177+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 1 JPA repository interface.
2024-08-02T15:13:12.415+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:13:12.416+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:13:12.429+07:00  INFO 16636 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:13:12.432+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T15:13:12.441+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:13:12.442+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:13:12.451+07:00  INFO 16636 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:13:12.452+07:00  INFO 16636 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:13:12.452+07:00  INFO 16636 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T15:13:13.021+07:00  INFO 16636 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:13:13.030+07:00  INFO 16636 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:13:13.030+07:00  INFO 16636 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:13:13.077+07:00  INFO 16636 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:13:13.077+07:00  INFO 16636 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1474 ms
2024-08-02T15:13:13.231+07:00  INFO 16636 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:13:13.294+07:00  INFO 16636 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:13:13.318+07:00  INFO 16636 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:13:13.381+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:13:13.382+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:13:13.383+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:13:13.384+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:13:13.385+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:13:13.386+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:13:13.387+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:13:13.390+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T15:13:13.390+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@58164e9a
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ebd6fd6
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T15:13:13.391+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@9be7319
2024-08-02T15:13:13.392+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@91a2543
2024-08-02T15:13:13.392+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T15:13:13.595+07:00  INFO 16636 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:13:13.619+07:00  INFO 16636 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:13:13.865+07:00  INFO 16636 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f42336c
2024-08-02T15:13:13.867+07:00  INFO 16636 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:13:13.932+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c)
2024-08-02T15:13:13.932+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0b0bd9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6150afc6)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e6458d)
2024-08-02T15:13:13.933+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65d6640)
2024-08-02T15:13:13.934+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:13:13.934+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:13:13.934+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:13:13.935+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:13:13.936+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:13:13.938+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2f0e7fa8
2024-08-02T15:13:13.938+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4ebd6fd6`
2024-08-02T15:13:13.940+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:13:13.940+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:13:13.940+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:13:13.942+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:13:13.943+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:13:13.943+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:13:13.943+07:00 DEBUG 16636 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:13:13.944+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c4215d7]
2024-08-02T15:13:14.583+07:00  INFO 16636 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:13:14.584+07:00 DEBUG 16636 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@227b9277] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T15:13:14.628+07:00 TRACE 16636 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T15:13:14.628+07:00  INFO 16636 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:13:14.873+07:00  INFO 16636 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:13:15.213+07:00  INFO 16636 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2968d3c0, com.mongodb.Jep395RecordCodecProvider@4290332d, com.mongodb.KotlinCodecProvider@740ddb41]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:13:15.231+07:00  INFO 16636 --- [Spring_API] [cluster-ClusterId{value='66ac951be3ab4c51e9460e53', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=21219100}
2024-08-02T15:13:15.416+07:00  INFO 16636 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:13:15.569+07:00  WARN 16636 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T15:13:16.223+07:00  INFO 16636 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T15:13:16.230+07:00  INFO 16636 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.027 seconds (process running for 5.435)
2024-08-02T15:13:21.321+07:00  INFO 16636 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T15:13:21.321+07:00  INFO 16636 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T15:13:21.322+07:00  INFO 16636 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T15:13:21.479+07:00 ERROR 16636 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null
	at com.example.spring.service.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:21) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:13:46.299+07:00  INFO 16636 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:13:46.299+07:00 TRACE 16636 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@356ab368] for TypeConfiguration
2024-08-02T15:13:46.299+07:00 DEBUG 16636 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3296fe4d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@356ab368]
2024-08-02T15:13:46.300+07:00  INFO 16636 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:13:46.306+07:00  INFO 16636 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:19:26.644+07:00  INFO 24356 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 24356 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:19:26.645+07:00  INFO 24356 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:19:27.211+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:19:27.212+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:19:27.250+07:00  INFO 24356 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:19:27.333+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 111 ms. Found 1 JPA repository interface.
2024-08-02T15:19:27.586+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:19:27.586+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:19:27.611+07:00  INFO 24356 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:19:27.618+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 1 MongoDB repository interface.
2024-08-02T15:19:27.640+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:19:27.641+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:19:27.660+07:00  INFO 24356 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:19:27.661+07:00  INFO 24356 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:19:27.661+07:00  INFO 24356 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T15:19:28.339+07:00  INFO 24356 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:19:28.351+07:00  INFO 24356 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:19:28.351+07:00  INFO 24356 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:19:28.405+07:00  INFO 24356 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:19:28.405+07:00  INFO 24356 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1719 ms
2024-08-02T15:19:28.641+07:00  INFO 24356 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:19:28.718+07:00  INFO 24356 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:19:28.757+07:00  INFO 24356 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T15:19:28.835+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T15:19:28.836+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:19:28.837+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:19:28.838+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:19:28.839+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:19:28.840+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:19:28.841+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:19:28.842+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T15:19:28.847+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@11bfffb3
2024-08-02T15:19:28.847+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11bfffb3
2024-08-02T15:19:28.848+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5e5a8718
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@9be7319
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@91a2543
2024-08-02T15:19:28.849+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@42730828
2024-08-02T15:19:28.850+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@18c7f6b5
2024-08-02T15:19:29.117+07:00  INFO 24356 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:19:29.158+07:00  INFO 24356 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:19:29.512+07:00  INFO 24356 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b3b4f37
2024-08-02T15:19:29.514+07:00  INFO 24356 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:19:29.586+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b)
2024-08-02T15:19:29.587+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@672d8370)
2024-08-02T15:19:29.588+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:19:29.589+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:19:29.589+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:19:29.590+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:19:29.590+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:19:29.592+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@24d7657b
2024-08-02T15:19:29.592+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5e5a8718`
2024-08-02T15:19:29.595+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:19:29.595+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:19:29.595+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:19:29.597+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:19:29.598+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:19:29.598+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:19:29.598+07:00 DEBUG 24356 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:19:29.598+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c4215d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b56d8a7]
2024-08-02T15:19:30.327+07:00  INFO 24356 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:19:30.328+07:00 DEBUG 24356 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c4215d7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3398ed12]
2024-08-02T15:19:30.382+07:00 TRACE 24356 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3398ed12] for TypeConfiguration
2024-08-02T15:19:30.383+07:00  INFO 24356 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:19:30.716+07:00  INFO 24356 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:19:31.224+07:00  INFO 24356 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7e7e34ef, com.mongodb.Jep395RecordCodecProvider@e7c3ba2, com.mongodb.KotlinCodecProvider@35c646b5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:19:31.238+07:00  INFO 24356 --- [Spring_API] [cluster-ClusterId{value='66ac969384459d1753a79299', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22369100}
2024-08-02T15:19:31.472+07:00  INFO 24356 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:19:31.664+07:00  WARN 24356 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T15:19:32.468+07:00  INFO 24356 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T15:19:32.475+07:00  INFO 24356 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.214 seconds (process running for 6.578)
2024-08-02T15:20:08.104+07:00  INFO 24356 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T15:20:08.104+07:00  INFO 24356 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T15:20:08.105+07:00  INFO 24356 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-08-02T15:20:08.258+07:00 ERROR 24356 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null
	at com.example.spring.service.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:21) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:50) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:22:36.328+07:00  INFO 24356 --- [Spring_API] [http-nio-8080-exec-2] com.example.spring.service.UserService   : UserServiceImpl.findUserById() : cache insert >> User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-02T15:22:36.329+07:00  INFO 24356 --- [Spring_API] [http-nio-8080-exec-2] c.e.spring.controller.UserController     : User UserController User(id=1, name=Nguyen Van B, username=Bname, email=B@mail.com, password=1234, createdAt=2024-07-31T00:00, roles=[])
2024-08-02T15:22:36.350+07:00 ERROR 24356 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Could not read JSON:Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"]) ] with root cause

com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "enabled" (class com.example.spring.entity.User), not marked as ignorable (8 known properties: "authorities", "username", "id", "email", "roles", "name", "password", "createdAt"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 231] (through reference chain: com.example.spring.entity.User["enabled"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:215) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:136) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1380) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:74) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905) ~[jackson-databind-2.17.2.jar:2.17.2]
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3950) ~[jackson-databind-2.17.2.jar:2.17.2]
	at org.springframework.data.redis.serializer.JacksonObjectReader.lambda$create$0(JacksonObjectReader.java:54) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:304) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer.deserialize(GenericJackson2JsonRedisSerializer.java:276) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.deserializeValue(AbstractOperations.java:360) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations$ValueDeserializingRedisCallback.doInRedis(AbstractOperations.java:62) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:396) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:363) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:50) ~[spring-data-redis-3.3.2.jar:3.3.2]
	at com.example.spring.service.UserService.findUserById(UserService.java:31) ~[classes/:na]
	at com.example.spring.controller.UserController.findOneUser(UserController.java:57) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T15:30:34.935+07:00  INFO 24356 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:30:34.944+07:00 TRACE 24356 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3398ed12] for TypeConfiguration
2024-08-02T15:30:34.944+07:00 DEBUG 24356 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e7db627] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3398ed12]
2024-08-02T15:30:34.948+07:00  INFO 24356 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:30:34.967+07:00  INFO 24356 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:54:56.213+07:00  INFO 2180 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 2180 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:54:56.215+07:00  INFO 2180 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:54:56.836+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:54:56.837+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:54:56.867+07:00  INFO 2180 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:54:56.960+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113 ms. Found 1 JPA repository interface.
2024-08-02T15:54:57.218+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:54:57.219+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:54:57.235+07:00  INFO 2180 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:54:57.239+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19 ms. Found 1 MongoDB repository interface.
2024-08-02T15:54:57.251+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:54:57.252+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:54:57.264+07:00  INFO 2180 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:54:57.265+07:00  INFO 2180 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:54:57.265+07:00  INFO 2180 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T15:54:57.899+07:00  INFO 2180 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:54:57.910+07:00  INFO 2180 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:54:57.911+07:00  INFO 2180 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:54:57.960+07:00  INFO 2180 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:54:57.960+07:00  INFO 2180 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1705 ms
2024-08-02T15:54:58.155+07:00  INFO 2180 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:54:58.229+07:00  INFO 2180 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:54:58.275+07:00  INFO 2180 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:54:58.343+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:54:58.343+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:54:58.343+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:54:58.344+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:54:58.344+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:54:58.344+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:54:58.344+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:54:58.344+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:54:58.345+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:54:58.346+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:54:58.347+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:54:58.348+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:54:58.349+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:54:58.350+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T15:54:58.351+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T15:54:58.352+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7e18ced7
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7e18ced7
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@305b43ca
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@305b43ca
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@4601047
2024-08-02T15:54:58.353+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@25e8e59
2024-08-02T15:54:58.357+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@42730828
2024-08-02T15:54:58.357+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42730828
2024-08-02T15:54:58.358+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2eebce87
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@38f617f4
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4899799b
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3dea226b
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@74500e4f
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c91fe86
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7fc7152e
2024-08-02T15:54:58.359+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@13d289c7
2024-08-02T15:54:58.623+07:00  INFO 2180 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:54:58.665+07:00  INFO 2180 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:54:59.001+07:00  INFO 2180 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e9b3b3c
2024-08-02T15:54:59.003+07:00  INFO 2180 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:54:59.078+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22002459)
2024-08-02T15:54:59.078+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21e702b8)
2024-08-02T15:54:59.078+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9e3d01)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a2d66e)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dffff9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2904bc56)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bb25046) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b1e8f8)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@126af200) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e000a17)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d959f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11c999da)
2024-08-02T15:54:59.079+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f69311) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ab86b2a)
2024-08-02T15:54:59.080+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:54:59.080+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:54:59.080+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:54:59.081+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:54:59.082+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:54:59.083+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@2d3c501b
2024-08-02T15:54:59.083+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2eebce87`
2024-08-02T15:54:59.086+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:54:59.086+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:54:59.086+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:54:59.088+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:54:59.089+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:54:59.089+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:54:59.089+07:00 DEBUG 2180 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:54:59.090+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7831d1aa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a69014e]
2024-08-02T15:54:59.840+07:00  INFO 2180 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:54:59.840+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7831d1aa] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4f5df012]
2024-08-02T15:54:59.893+07:00 TRACE 2180 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4f5df012] for TypeConfiguration
2024-08-02T15:54:59.894+07:00  INFO 2180 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:55:00.154+07:00  INFO 2180 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:55:00.575+07:00  INFO 2180 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@720cbb7d, com.mongodb.Jep395RecordCodecProvider@43d00636, com.mongodb.KotlinCodecProvider@3a72160a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:55:00.602+07:00  INFO 2180 --- [Spring_API] [cluster-ClusterId{value='66ac9ee4707ae504868209c1', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29273600}
2024-08-02T15:55:00.809+07:00  INFO 2180 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:55:00.977+07:00  WARN 2180 --- [Spring_API] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataInitializer': Unsatisfied dependency expressed through field 'passwordEncoder': No qualifying bean of type 'org.springframework.security.crypto.password.PasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-08-02T15:55:00.980+07:00  INFO 2180 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:55:00.981+07:00 TRACE 2180 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4f5df012] for TypeConfiguration
2024-08-02T15:55:00.981+07:00 DEBUG 2180 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77f43f3e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4f5df012]
2024-08-02T15:55:00.982+07:00  INFO 2180 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:55:00.988+07:00  INFO 2180 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T15:55:00.989+07:00  INFO 2180 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-08-02T15:55:00.998+07:00  INFO 2180 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T15:55:01.029+07:00 ERROR 2180 --- [Spring_API] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field passwordEncoder in com.example.spring.service.DataInitializer required a bean of type 'org.springframework.security.crypto.password.PasswordEncoder' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.security.crypto.password.PasswordEncoder' in your configuration.

2024-08-02T15:57:38.179+07:00  INFO 24720 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 24720 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T15:57:38.181+07:00  INFO 24720 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T15:57:38.737+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:57:38.737+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T15:57:38.773+07:00  INFO 24720 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T15:57:38.852+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 100 ms. Found 1 JPA repository interface.
2024-08-02T15:57:39.085+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:57:39.086+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T15:57:39.098+07:00  INFO 24720 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T15:57:39.102+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T15:57:39.113+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T15:57:39.114+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T15:57:39.123+07:00  INFO 24720 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:57:39.124+07:00  INFO 24720 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T15:57:39.124+07:00  INFO 24720 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T15:57:39.700+07:00  INFO 24720 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T15:57:39.710+07:00  INFO 24720 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T15:57:39.710+07:00  INFO 24720 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T15:57:39.757+07:00  INFO 24720 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T15:57:39.757+07:00  INFO 24720 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1536 ms
2024-08-02T15:57:39.921+07:00  INFO 24720 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T15:57:39.993+07:00  INFO 24720 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T15:57:40.023+07:00  INFO 24720 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:57:40.081+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T15:57:40.082+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:57:40.083+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:57:40.084+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T15:57:40.085+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:57:40.086+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T15:57:40.087+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T15:57:40.088+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T15:57:40.091+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4e50ae56
2024-08-02T15:57:40.091+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e50ae56
2024-08-02T15:57:40.092+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5fb7ab9c
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2eebce87
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6775c0d1
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38f617f4
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4899799b
2024-08-02T15:57:40.093+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dea226b
2024-08-02T15:57:40.294+07:00  INFO 24720 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T15:57:40.315+07:00  INFO 24720 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T15:57:40.547+07:00  INFO 24720 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4654e373
2024-08-02T15:57:40.549+07:00  INFO 24720 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T15:57:40.611+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@672d8370) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13137835)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f82248f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22002459)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9e3d01)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a2d66e)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4dffff9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2904bc56)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bb25046) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b1e8f8)
2024-08-02T15:57:40.612+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@126af200) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e000a17)
2024-08-02T15:57:40.613+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T15:57:40.613+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T15:57:40.614+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T15:57:40.615+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:57:40.615+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T15:57:40.617+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3c3cd7a5
2024-08-02T15:57:40.617+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5fb7ab9c`
2024-08-02T15:57:40.619+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T15:57:40.619+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:57:40.620+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:57:40.622+07:00 DEBUG 24720 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T15:57:40.623+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aa7703] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79777da7]
2024-08-02T15:57:41.255+07:00  INFO 24720 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T15:57:41.256+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75aa7703] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5ed88e31]
2024-08-02T15:57:41.306+07:00 TRACE 24720 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5ed88e31] for TypeConfiguration
2024-08-02T15:57:41.306+07:00  INFO 24720 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:57:41.556+07:00  INFO 24720 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T15:57:41.913+07:00  INFO 24720 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@42a057b6, com.mongodb.Jep395RecordCodecProvider@4e1ffe54, com.mongodb.KotlinCodecProvider@62036b05]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T15:57:41.930+07:00  INFO 24720 --- [Spring_API] [cluster-ClusterId{value='66ac9f85fca09a6e0064a540', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23438400}
2024-08-02T15:57:42.108+07:00  INFO 24720 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T15:57:42.297+07:00  WARN 24720 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T15:57:43.007+07:00  INFO 24720 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T15:57:43.014+07:00  INFO 24720 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.183 seconds (process running for 5.518)
2024-08-02T15:57:43.122+07:00  INFO 24720 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T15:57:43.132+07:00 ERROR 24720 --- [Spring_API] [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.dao.DataIntegrityViolationException: not-null property references a null or transient value : com.example.spring.entity.User.email
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:307) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.11.jar:6.1.11]
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source) ~[na:na]
	at com.example.spring.service.DataInitializer.run(DataInitializer.java:24) ~[classes/:na]
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:790) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:798) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:789) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:774) ~[spring-boot-3.3.2.jar:3.3.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:774) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:342) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.2.jar:3.3.2]
	at com.example.spring.SpringApiApplication.main(SpringApiApplication.java:10) ~[classes/:na]
Caused by: org.hibernate.PropertyValueException: not-null property references a null or transient value : com.example.spring.entity.User.email
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:109) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.internal.Nullability.checkNullability(Nullability.java:54) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.action.internal.AbstractEntityInsertAction.nullifyTransientReferencesIfNotAlready(AbstractEntityInsertAction.java:124) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.action.internal.AbstractEntityInsertAction.makeEntityManaged(AbstractEntityInsertAction.java:133) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:299) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:259) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:404) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319) ~[spring-orm-6.1.11.jar:6.1.11]
	at jdk.proxy2/jdk.proxy2.$Proxy138.persist(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:629) ~[spring-data-jpa-3.3.2.jar:3.3.2]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70) ~[spring-data-commons-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.1.11.jar:6.1.11]
	... 28 common frames omitted

2024-08-02T15:57:43.239+07:00  INFO 24720 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T15:57:43.240+07:00 TRACE 24720 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5ed88e31] for TypeConfiguration
2024-08-02T15:57:43.241+07:00 DEBUG 24720 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d8d21a3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5ed88e31]
2024-08-02T15:57:43.243+07:00  INFO 24720 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T15:57:43.258+07:00  INFO 24720 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:00:55.455+07:00  INFO 25500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25500 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:00:55.457+07:00  INFO 25500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:00:56.079+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:00:56.079+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:00:56.107+07:00  INFO 25500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:00:56.208+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 120 ms. Found 1 JPA repository interface.
2024-08-02T16:00:56.479+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:00:56.480+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:00:56.495+07:00  INFO 25500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:00:56.499+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 1 MongoDB repository interface.
2024-08-02T16:00:56.513+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:00:56.515+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:00:56.526+07:00  INFO 25500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:00:56.526+07:00  INFO 25500 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:00:56.527+07:00  INFO 25500 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:00:57.160+07:00  INFO 25500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:00:57.171+07:00  INFO 25500 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:00:57.171+07:00  INFO 25500 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:00:57.224+07:00  INFO 25500 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:00:57.224+07:00  INFO 25500 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1726 ms
2024-08-02T16:00:57.419+07:00  INFO 25500 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:00:57.499+07:00  INFO 25500 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:00:57.533+07:00  INFO 25500 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:00:57.596+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:00:57.597+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:00:57.598+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:00:57.599+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:00:57.600+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:00:57.601+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:00:57.602+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:00:57.602+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T16:00:57.603+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:00:57.604+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T16:00:57.605+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T16:00:57.609+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@7404ddca
2024-08-02T16:00:57.609+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7404ddca
2024-08-02T16:00:57.610+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@609b041c
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@474e34e4
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5fb7ab9c
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6734ff92
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@51eb0e84
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ce267cc
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2eebce87
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ee37ca7
2024-08-02T16:00:57.611+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6775c0d1
2024-08-02T16:00:57.857+07:00  INFO 25500 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:00:57.887+07:00  INFO 25500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:00:58.220+07:00  INFO 25500 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7672960e
2024-08-02T16:00:58.222+07:00  INFO 25500 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f50c8f)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6297cb4b)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65d6640) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@672d8370)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@13137835) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4f82248f)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22002459) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29bd056a)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21e702b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f1fec57)
2024-08-02T16:00:58.294+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9e3d01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1dc9f5ad)
2024-08-02T16:00:58.295+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a2d66e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dffff9)
2024-08-02T16:00:58.295+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2904bc56) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bb25046)
2024-08-02T16:00:58.296+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:00:58.296+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:00:58.296+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:00:58.297+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:00:58.297+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:00:58.299+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@54bc3bcf
2024-08-02T16:00:58.299+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@609b041c`
2024-08-02T16:00:58.302+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:00:58.302+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:00:58.302+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:00:58.304+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:00:58.305+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:00:58.305+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:00:58.305+07:00 DEBUG 25500 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:00:58.306+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@737ff5c4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e9a836]
2024-08-02T16:00:59.007+07:00  INFO 25500 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:00:59.008+07:00 DEBUG 25500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@737ff5c4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3e265811]
2024-08-02T16:00:59.060+07:00 TRACE 25500 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e265811] for TypeConfiguration
2024-08-02T16:00:59.060+07:00  INFO 25500 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:00:59.300+07:00  INFO 25500 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:00:59.657+07:00  INFO 25500 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5632bed3, com.mongodb.Jep395RecordCodecProvider@20307cb9, com.mongodb.KotlinCodecProvider@19a2b224]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:00:59.673+07:00  INFO 25500 --- [Spring_API] [cluster-ClusterId{value='66aca04b7ce40d23b83ac561', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19492000}
2024-08-02T16:00:59.863+07:00  INFO 25500 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:01:00.085+07:00  WARN 25500 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:01:00.815+07:00  INFO 25500 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:01:00.821+07:00  INFO 25500 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.788 seconds (process running for 6.212)
2024-08-02T16:02:36.029+07:00  INFO 25500 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:02:36.030+07:00 TRACE 25500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e265811] for TypeConfiguration
2024-08-02T16:02:36.030+07:00 DEBUG 25500 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2a26ed54] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e265811]
2024-08-02T16:02:36.032+07:00  INFO 25500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:02:36.041+07:00  INFO 25500 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:04:19.047+07:00  INFO 15316 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 15316 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:04:19.050+07:00  INFO 15316 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:04:19.586+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:04:19.587+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:04:19.618+07:00  INFO 15316 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:04:19.699+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 101 ms. Found 1 JPA repository interface.
2024-08-02T16:04:19.934+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:04:19.934+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:04:19.946+07:00  INFO 15316 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:04:19.950+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T16:04:19.959+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:04:19.960+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:04:19.968+07:00  INFO 15316 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:04:19.969+07:00  INFO 15316 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:04:19.969+07:00  INFO 15316 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:04:20.562+07:00  INFO 15316 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:04:20.574+07:00  INFO 15316 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:04:20.574+07:00  INFO 15316 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:04:20.623+07:00  INFO 15316 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:04:20.623+07:00  INFO 15316 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1529 ms
2024-08-02T16:04:20.805+07:00  INFO 15316 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:04:20.871+07:00  INFO 15316 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:04:20.899+07:00  INFO 15316 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:04:20.960+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:04:20.961+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:04:20.962+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:04:20.963+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:04:20.964+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:04:20.965+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T16:04:20.966+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2755617b
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@65859b44
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d9f5fce
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49653791
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45b7c97f
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c212536
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b377a53
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1b0e031b
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:04:20.967+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6009cd34
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@65844c96
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@25214797
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e5c8ef3
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60928a61
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@27358a19
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@8077c97
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@22865072
2024-08-02T16:04:20.968+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@563317c1
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5d5d3a5c
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e0d16a4
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e18ced7
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e18ced7
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@305b43ca
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@305b43ca
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4601047
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4601047
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25e8e59
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25e8e59
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@3a0896b3
2024-08-02T16:04:20.969+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@50a7c72b
2024-08-02T16:04:20.972+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@629b780f
2024-08-02T16:04:20.972+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@629b780f
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6775c0d1
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@38f617f4
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3dea226b
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@74500e4f
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c91fe86
2024-08-02T16:04:20.973+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7fc7152e
2024-08-02T16:04:20.974+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@13d289c7
2024-08-02T16:04:20.974+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6704df84
2024-08-02T16:04:20.974+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1412682c
2024-08-02T16:04:21.247+07:00  INFO 15316 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:04:21.276+07:00  INFO 15316 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:04:21.601+07:00  INFO 15316 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32e7b78d
2024-08-02T16:04:21.603+07:00  INFO 15316 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:04:21.678+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29bd056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21e702b8)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1fec57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9e3d01)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1dc9f5ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a2d66e)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dffff9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2904bc56)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bb25046) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69b1e8f8)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@126af200) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e000a17)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77d959f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11c999da)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f69311) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ab86b2a)
2024-08-02T16:04:21.679+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7793b55d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ac9e53c)
2024-08-02T16:04:21.681+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:04:21.681+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:04:21.681+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:04:21.683+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:04:21.683+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:04:21.685+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38b54694
2024-08-02T16:04:21.685+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6775c0d1`
2024-08-02T16:04:21.687+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:04:21.688+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:04:21.688+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:04:21.690+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:04:21.691+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:04:21.691+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:04:21.691+07:00 DEBUG 15316 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:04:21.692+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27746c5e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@543ac221]
2024-08-02T16:04:22.406+07:00  INFO 15316 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:04:22.406+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27746c5e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@556e4588]
2024-08-02T16:04:22.490+07:00 TRACE 15316 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@556e4588] for TypeConfiguration
2024-08-02T16:04:22.491+07:00  INFO 15316 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:04:22.725+07:00  INFO 15316 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:04:23.077+07:00  INFO 15316 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2620f935, com.mongodb.Jep395RecordCodecProvider@6a3cb81c, com.mongodb.KotlinCodecProvider@42fe9099]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:04:23.091+07:00  INFO 15316 --- [Spring_API] [cluster-ClusterId{value='66aca1175cc10c2ec36d91c5', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18946900}
2024-08-02T16:04:23.254+07:00  INFO 15316 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:04:23.423+07:00  WARN 15316 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:04:24.138+07:00  INFO 15316 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:04:24.144+07:00  INFO 15316 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.466 seconds (process running for 5.8)
2024-08-02T16:04:24.281+07:00  WARN 15316 --- [Spring_API] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2024-08-02T16:04:24.281+07:00 ERROR 15316 --- [Spring_API] [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '1' for key 'user.PRIMARY'
2024-08-02T16:04:24.289+07:00  INFO 15316 --- [Spring_API] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-02T16:04:24.302+07:00 ERROR 15316 --- [Spring_API] [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'user.PRIMARY'] [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; SQL [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; constraint [user.PRIMARY]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:663) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:413) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.11.jar:6.1.11]
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source) ~[na:na]
	at com.example.spring.service.DataInitializer.run(DataInitializer.java:24) ~[classes/:na]
	at org.springframework.boot.SpringApplication.lambda$callRunner$5(SpringApplication.java:790) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.util.function.ThrowingConsumer$1.acceptWithException(ThrowingConsumer.java:83) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.util.function.ThrowingConsumer.accept(ThrowingConsumer.java:60) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.util.function.ThrowingConsumer$1.accept(ThrowingConsumer.java:88) ~[spring-core-6.1.11.jar:6.1.11]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:798) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:789) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:774) ~[spring-boot-3.3.2.jar:3.3.2]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[na:na]
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[na:na]
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[na:na]
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:na]
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) ~[na:na]
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:774) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:342) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.2.jar:3.3.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.2.jar:3.3.2]
	at com.example.spring.SpringApiApplication.main(SpringApiApplication.java:10) ~[classes/:na]
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'user.PRIMARY'] [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]
	at org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1234) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-6.1.11.jar:6.1.11]
	... 35 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'user.PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1054) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1003) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1312) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:988) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	... 56 common frames omitted

2024-08-02T16:04:24.416+07:00  INFO 15316 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:04:24.417+07:00 TRACE 15316 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@556e4588] for TypeConfiguration
2024-08-02T16:04:24.417+07:00 DEBUG 15316 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7bad8257] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@556e4588]
2024-08-02T16:04:24.418+07:00  INFO 15316 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:04:24.424+07:00  INFO 15316 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:06:17.880+07:00  INFO 16936 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 16936 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:06:17.882+07:00  INFO 16936 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:06:18.439+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:06:18.442+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:06:18.467+07:00  INFO 16936 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:06:18.543+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 93 ms. Found 1 JPA repository interface.
2024-08-02T16:06:18.787+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:06:18.787+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:06:18.799+07:00  INFO 16936 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:06:18.803+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T16:06:18.812+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:06:18.813+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:06:18.822+07:00  INFO 16936 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:06:18.823+07:00  INFO 16936 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:06:18.823+07:00  INFO 16936 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:06:19.386+07:00  INFO 16936 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:06:19.397+07:00  INFO 16936 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:06:19.398+07:00  INFO 16936 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:06:19.447+07:00  INFO 16936 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:06:19.447+07:00  INFO 16936 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1525 ms
2024-08-02T16:06:19.632+07:00  INFO 16936 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:06:19.705+07:00  INFO 16936 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:06:19.742+07:00  INFO 16936 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:06:19.803+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:06:19.804+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:06:19.804+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:06:19.804+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:06:19.804+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:06:19.805+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:06:19.806+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:06:19.807+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:06:19.808+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:06:19.809+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:06:19.810+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:06:19.811+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@59262a90
2024-08-02T16:06:19.812+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@78479f2b
2024-08-02T16:06:19.815+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T16:06:19.815+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5773d271
2024-08-02T16:06:19.816+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@f03ee8f
2024-08-02T16:06:19.816+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T16:06:19.816+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T16:06:19.816+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T16:06:19.817+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T16:06:19.817+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T16:06:19.817+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T16:06:19.817+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4e50ae56
2024-08-02T16:06:19.817+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c68d0db
2024-08-02T16:06:20.023+07:00  INFO 16936 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:06:20.050+07:00  INFO 16936 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:06:20.303+07:00  INFO 16936 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7482309c
2024-08-02T16:06:20.306+07:00  INFO 16936 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:06:20.385+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498)
2024-08-02T16:06:20.385+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42)
2024-08-02T16:06:20.385+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f)
2024-08-02T16:06:20.385+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T16:06:20.385+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T16:06:20.386+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T16:06:20.386+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T16:06:20.386+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6150afc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f50c8f)
2024-08-02T16:06:20.386+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46e6458d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6297cb4b)
2024-08-02T16:06:20.388+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:06:20.388+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:06:20.388+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:06:20.389+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:06:20.389+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:06:20.391+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@3245efdb
2024-08-02T16:06:20.391+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f03ee8f`
2024-08-02T16:06:20.394+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:06:20.395+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:06:20.395+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:06:20.397+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:06:20.398+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:06:20.398+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:06:20.398+07:00 DEBUG 16936 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:06:20.399+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cb49121] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@227b9277]
2024-08-02T16:06:21.027+07:00  INFO 16936 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:06:21.028+07:00 DEBUG 16936 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cb49121] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@c555e1e]
2024-08-02T16:06:21.079+07:00 TRACE 16936 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c555e1e] for TypeConfiguration
2024-08-02T16:06:21.079+07:00  INFO 16936 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:06:21.293+07:00  INFO 16936 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:06:21.763+07:00  INFO 16936 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@e7c3ba2, com.mongodb.Jep395RecordCodecProvider@35c646b5, com.mongodb.KotlinCodecProvider@6351efa6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:06:21.783+07:00  INFO 16936 --- [Spring_API] [cluster-ClusterId{value='66aca18d96e1e97df426e888', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24838500}
2024-08-02T16:06:22.036+07:00  INFO 16936 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:06:22.225+07:00  WARN 16936 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:06:23.007+07:00  INFO 16936 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:06:23.013+07:00  INFO 16936 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.498 seconds (process running for 5.847)
2024-08-02T16:06:54.758+07:00  INFO 16936 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:06:54.759+07:00  INFO 16936 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:06:54.761+07:00  INFO 16936 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:06:55.027+07:00 ERROR 16936 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null
	at com.example.spring.service.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:21) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:53) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:07:49.608+07:00  INFO 16936 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:07:49.610+07:00 TRACE 16936 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c555e1e] for TypeConfiguration
2024-08-02T16:07:49.610+07:00 DEBUG 16936 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2d781dae] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c555e1e]
2024-08-02T16:07:49.611+07:00  INFO 16936 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:07:49.618+07:00  INFO 16936 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:07:52.397+07:00  INFO 8484 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 8484 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:07:52.399+07:00  INFO 8484 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:07:52.928+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:07:52.930+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:07:52.958+07:00  INFO 8484 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:07:53.029+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88 ms. Found 1 JPA repository interface.
2024-08-02T16:07:53.256+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:07:53.256+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:07:53.269+07:00  INFO 8484 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:07:53.272+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T16:07:53.281+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:07:53.283+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:07:53.292+07:00  INFO 8484 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:07:53.292+07:00  INFO 8484 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:07:53.292+07:00  INFO 8484 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T16:07:53.856+07:00  INFO 8484 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:07:53.866+07:00  INFO 8484 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:07:53.866+07:00  INFO 8484 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:07:53.918+07:00  INFO 8484 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:07:53.918+07:00  INFO 8484 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1481 ms
2024-08-02T16:07:54.090+07:00  INFO 8484 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:07:54.160+07:00  INFO 8484 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:07:54.186+07:00  INFO 8484 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:07:54.239+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:07:54.239+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:07:54.239+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:07:54.239+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:07:54.240+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:07:54.241+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:07:54.242+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:07:54.243+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:07:54.244+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:07:54.245+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:07:54.246+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:07:54.248+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:07:54.248+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:07:54.248+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:07:54.249+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:07:54.252+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T16:07:54.252+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@610fbe1c
2024-08-02T16:07:54.253+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1c6e3ff9
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@76e6c070
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T16:07:54.254+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T16:07:54.460+07:00  INFO 8484 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:07:54.479+07:00  INFO 8484 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:07:54.720+07:00  INFO 8484 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5cfa2ac5
2024-08-02T16:07:54.722+07:00  INFO 8484 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:07:54.783+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d42275) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a)
2024-08-02T16:07:54.783+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581)
2024-08-02T16:07:54.783+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c)
2024-08-02T16:07:54.783+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62)
2024-08-02T16:07:54.783+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T16:07:54.784+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T16:07:54.784+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T16:07:54.784+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3749c2b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32e65852)
2024-08-02T16:07:54.784+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64d93096) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76ed7573)
2024-08-02T16:07:54.785+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:07:54.785+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:07:54.786+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:07:54.787+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:07:54.787+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:07:54.789+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@72ec16f8
2024-08-02T16:07:54.789+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c6e3ff9`
2024-08-02T16:07:54.791+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:07:54.792+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:07:54.792+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:07:54.793+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:07:54.794+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:07:54.794+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:07:54.794+07:00 DEBUG 8484 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:07:54.795+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51fb5fe6]
2024-08-02T16:07:55.416+07:00  INFO 8484 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:07:55.417+07:00 DEBUG 8484 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d93ff21] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5aefdb9e]
2024-08-02T16:07:55.461+07:00 TRACE 8484 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5aefdb9e] for TypeConfiguration
2024-08-02T16:07:55.461+07:00  INFO 8484 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:07:55.706+07:00  INFO 8484 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:07:56.066+07:00  INFO 8484 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1ff584d7, com.mongodb.Jep395RecordCodecProvider@7752f9fe, com.mongodb.KotlinCodecProvider@9588bd8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:07:56.078+07:00  INFO 8484 --- [Spring_API] [cluster-ClusterId{value='66aca1ecb944061df75ac0bd', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=15861000}
2024-08-02T16:07:56.273+07:00  INFO 8484 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:07:56.442+07:00  WARN 8484 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:07:57.112+07:00  INFO 8484 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:07:57.118+07:00  INFO 8484 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.073 seconds (process running for 5.425)
2024-08-02T16:08:04.233+07:00  INFO 8484 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:08:04.234+07:00  INFO 8484 --- [Spring_API] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:08:04.235+07:00  INFO 8484 --- [Spring_API] [http-nio-8080-exec-5] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:08:04.439+07:00 ERROR 8484 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.InternalAuthenticationServiceException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null] with root cause

java.lang.NullPointerException: Cannot invoke "com.example.spring.repository.UserRepository.findByUsername(String)" because "this.userRepository" is null
	at com.example.spring.service.CustomUserDetailsService.loadUserByUsername(CustomUserDetailsService.java:21) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:107) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:53) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:08:18.739+07:00  INFO 8484 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:08:18.739+07:00 TRACE 8484 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5aefdb9e] for TypeConfiguration
2024-08-02T16:08:18.739+07:00 DEBUG 8484 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5b1ecb9e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5aefdb9e]
2024-08-02T16:08:18.740+07:00  INFO 8484 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:08:18.744+07:00  INFO 8484 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:13:20.731+07:00  INFO 8388 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 8388 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:13:20.733+07:00  INFO 8388 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:13:21.337+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:13:21.337+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:13:21.367+07:00  INFO 8388 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:13:21.470+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2024-08-02T16:13:21.734+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:13:21.734+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:13:21.746+07:00  INFO 8388 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:13:21.750+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T16:13:21.761+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:13:21.762+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:13:21.773+07:00  INFO 8388 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:13:21.773+07:00  INFO 8388 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:13:21.774+07:00  INFO 8388 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:13:22.378+07:00  INFO 8388 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:13:22.391+07:00  INFO 8388 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:13:22.391+07:00  INFO 8388 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:13:22.448+07:00  INFO 8388 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:13:22.448+07:00  INFO 8388 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1676 ms
2024-08-02T16:13:22.604+07:00  INFO 8388 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:13:22.673+07:00  INFO 8388 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:13:22.706+07:00  INFO 8388 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:13:22.774+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:13:22.775+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:13:22.776+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:13:22.777+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:13:22.778+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:13:22.779+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:13:22.780+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1de5cc88
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@23e2c1ca
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2d4fb0d8
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@dc1fadd
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3ef3f661
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@baa9ce4
2024-08-02T16:13:22.781+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5b332439
2024-08-02T16:13:22.786+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@a457c2b
2024-08-02T16:13:22.786+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a457c2b
2024-08-02T16:13:22.786+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@22da200e
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@40dd552c
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@33f4c769
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ebd6fd6
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e5a8718
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7404ddca
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@615e83ac
2024-08-02T16:13:22.787+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4438938e
2024-08-02T16:13:23.021+07:00  INFO 8388 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:13:23.044+07:00  INFO 8388 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:13:23.395+07:00  INFO 8388 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e28af44
2024-08-02T16:13:23.396+07:00  INFO 8388 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:13:23.473+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46fb9581) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fcc0a1)
2024-08-02T16:13:23.473+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@416b681c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46d69ca4)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5c9b5e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f25b42)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d156f8f)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3749c2b)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32e65852) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64d93096)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76ed7573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51df2a41)
2024-08-02T16:13:23.474+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@517bdce0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c0b0bd9)
2024-08-02T16:13:23.476+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:13:23.476+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:13:23.476+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:13:23.478+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:13:23.478+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:13:23.480+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@27dc81be
2024-08-02T16:13:23.480+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@22da200e`
2024-08-02T16:13:23.483+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:13:23.483+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:13:23.483+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:13:23.485+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:13:23.485+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:13:23.486+07:00 DEBUG 8388 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:13:23.487+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1791e231] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@55397d15]
2024-08-02T16:13:24.195+07:00  INFO 8388 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:13:24.195+07:00 DEBUG 8388 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1791e231] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5c30decf]
2024-08-02T16:13:24.266+07:00 TRACE 8388 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c30decf] for TypeConfiguration
2024-08-02T16:13:24.267+07:00  INFO 8388 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:13:24.500+07:00  INFO 8388 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:13:24.886+07:00  INFO 8388 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@468d1fcc, com.mongodb.Jep395RecordCodecProvider@267093ea, com.mongodb.KotlinCodecProvider@6b3bcab7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:13:24.897+07:00  INFO 8388 --- [Spring_API] [cluster-ClusterId{value='66aca3344e1c7324ebe929d5', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17248300}
2024-08-02T16:13:25.112+07:00  INFO 8388 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:13:25.298+07:00  WARN 8388 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:13:26.011+07:00  INFO 8388 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:13:26.018+07:00  INFO 8388 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.7 seconds (process running for 6.093)
2024-08-02T16:13:30.254+07:00  INFO 8388 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:13:30.255+07:00  INFO 8388 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:13:30.256+07:00  INFO 8388 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:13:30.607+07:00 ERROR 8388 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:17:48.382+07:00  INFO 8388 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:17:48.387+07:00 TRACE 8388 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c30decf] for TypeConfiguration
2024-08-02T16:17:48.388+07:00 DEBUG 8388 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4607f53b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c30decf]
2024-08-02T16:17:48.391+07:00  INFO 8388 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:17:48.407+07:00  INFO 8388 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:17:57.514+07:00  INFO 18732 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18732 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:17:57.516+07:00  INFO 18732 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:17:58.071+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:17:58.071+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:17:58.102+07:00  INFO 18732 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:17:58.214+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 132 ms. Found 1 JPA repository interface.
2024-08-02T16:17:58.521+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:17:58.522+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:17:58.541+07:00  INFO 18732 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:17:58.547+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24 ms. Found 1 MongoDB repository interface.
2024-08-02T16:17:58.564+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:17:58.566+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:17:58.582+07:00  INFO 18732 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:17:58.582+07:00  INFO 18732 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:17:58.582+07:00  INFO 18732 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-08-02T16:17:59.194+07:00  INFO 18732 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:17:59.204+07:00  INFO 18732 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:17:59.205+07:00  INFO 18732 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:17:59.256+07:00  INFO 18732 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:17:59.256+07:00  INFO 18732 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1699 ms
2024-08-02T16:17:59.443+07:00  INFO 18732 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:17:59.526+07:00  INFO 18732 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:17:59.563+07:00  INFO 18732 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:17:59.635+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66d3b881
2024-08-02T16:17:59.635+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@66d3b881
2024-08-02T16:17:59.635+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@66d3b881
2024-08-02T16:17:59.635+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3a45afd4
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3a45afd4
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@762a10b6
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@762a10b6
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@74431b9c
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@74431b9c
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@f2fb225
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@1883871b
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3e0a9b1d
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@52f9e8bb
2024-08-02T16:17:59.636+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2035d65b
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@240a2619
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e3283f6
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@539316bb
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5d1a859c
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@28554ac8
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72224107
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:17:59.637+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@394fb736
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3070f3e6
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3271ec2a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@52bba91a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1689527c
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@21516c88
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1c7cd434
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@13004dd8
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fc6e776
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@65d9e72a
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f7e52d1
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:17:59.638+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@e01a26b
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7604198a
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5cce40d7
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@314b7945
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@32da97fd
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@64440065
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4aa22cc2
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2049e582
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@464aeb09
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:17:59.639+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2c99c8d
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@59d6642a
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@365cef67
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@27df5806
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69bc9584
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3214bad
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@52d7ab79
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@f95d64d
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@288728e
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b7d2d51
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@641ed324
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45984654
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5406b
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66b0e207
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:17:59.640+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@74a58a06
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7308c820
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5d601832
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ca17943
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@640c216b
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5170bc02
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c0c8f96
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3bd08435
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3e52ed5d
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a96d639
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@28e94c2
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3d40498a
2024-08-02T16:17:59.641+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@14d1737a
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@482a58c7
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3e74fd84
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@147efd9
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@1e120628
2024-08-02T16:17:59.642+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4e4894d
2024-08-02T16:17:59.647+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@43e8f1c
2024-08-02T16:17:59.647+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@43e8f1c
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@7871d261
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@58164e9a
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6a7a1a0d
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c6e3ff9
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@76e6c070
2024-08-02T16:17:59.648+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@184afb78
2024-08-02T16:17:59.649+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@22da200e
2024-08-02T16:17:59.649+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4f26425b
2024-08-02T16:17:59.649+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@f03ee8f
2024-08-02T16:17:59.897+07:00  INFO 18732 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:17:59.935+07:00  INFO 18732 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:18:00.286+07:00  INFO 18732 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@686e7513
2024-08-02T16:18:00.288+07:00  INFO 18732 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a259f6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ccf6114)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3df3410a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@670c171c)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61d42275) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6614289a)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4148ce43) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46fb9581)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6fcc0a1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@416b681c)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46d69ca4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c9b5e62)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c826498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2633d09c)
2024-08-02T16:18:00.371+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f25b42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@521c67f0)
2024-08-02T16:18:00.372+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d156f8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@451af781)
2024-08-02T16:18:00.373+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:18:00.373+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:18:00.373+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:18:00.374+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:18:00.374+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:18:00.376+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@19e2db7c
2024-08-02T16:18:00.376+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7871d261`
2024-08-02T16:18:00.378+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:18:00.379+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:18:00.379+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:18:00.380+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:18:00.381+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:18:00.382+07:00 DEBUG 18732 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:18:00.383+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70f91ae3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@601d9f3a]
2024-08-02T16:18:01.134+07:00  INFO 18732 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:18:01.135+07:00 DEBUG 18732 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@70f91ae3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b6ff016]
2024-08-02T16:18:01.189+07:00 TRACE 18732 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2b6ff016] for TypeConfiguration
2024-08-02T16:18:01.190+07:00  INFO 18732 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:18:01.417+07:00  INFO 18732 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:18:01.833+07:00  INFO 18732 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@468d1fcc, com.mongodb.Jep395RecordCodecProvider@267093ea, com.mongodb.KotlinCodecProvider@6b3bcab7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:18:01.846+07:00  INFO 18732 --- [Spring_API] [cluster-ClusterId{value='66aca44970e7c509cf76187d', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20123700}
2024-08-02T16:18:02.021+07:00  INFO 18732 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:18:02.194+07:00  WARN 18732 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:18:02.855+07:00  INFO 18732 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:18:02.860+07:00  INFO 18732 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.807 seconds (process running for 6.232)
2024-08-02T16:18:07.125+07:00  INFO 18732 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:18:07.125+07:00  INFO 18732 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:18:07.126+07:00  INFO 18732 --- [Spring_API] [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:18:07.431+07:00 ERROR 18732 --- [Spring_API] [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:37:48.382+07:00  INFO 18732 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:37:48.421+07:00 TRACE 18732 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2b6ff016] for TypeConfiguration
2024-08-02T16:37:48.422+07:00 DEBUG 18732 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2780add1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2b6ff016]
2024-08-02T16:37:48.438+07:00  INFO 18732 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:37:48.503+07:00  INFO 18732 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:38:10.436+07:00  INFO 18896 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 18896 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:38:10.438+07:00  INFO 18896 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:38:11.120+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:38:11.120+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:38:11.148+07:00  INFO 18896 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:38:11.253+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 123 ms. Found 1 JPA repository interface.
2024-08-02T16:38:11.497+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:38:11.498+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:38:11.519+07:00  INFO 18896 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:38:11.523+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25 ms. Found 1 MongoDB repository interface.
2024-08-02T16:38:11.534+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:38:11.536+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:38:11.546+07:00  INFO 18896 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:38:11.546+07:00  INFO 18896 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:38:11.546+07:00  INFO 18896 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:38:12.154+07:00  INFO 18896 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:38:12.166+07:00  INFO 18896 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:38:12.166+07:00  INFO 18896 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:38:12.219+07:00  INFO 18896 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:38:12.221+07:00  INFO 18896 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1738 ms
2024-08-02T16:38:12.415+07:00  INFO 18896 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:38:12.472+07:00  INFO 18896 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:38:12.504+07:00  INFO 18896 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:38:12.566+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c00d406
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c00d406
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@16ac4d3d
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@16ac4d3d
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@559d19c
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@559d19c
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1f172892
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1f172892
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5409dfdd
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@45f9d394
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@45f9d394
2024-08-02T16:38:12.567+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c2d63f0
2024-08-02T16:38:12.568+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3a588b5f
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:38:12.569+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59e082f8
2024-08-02T16:38:12.570+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59e082f8
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7185e611
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7185e611
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@384472bf
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@656ec00d
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@656ec00d
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b8507df
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@451816fd
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@56e5c8fb
2024-08-02T16:38:12.571+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45cd8607
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@9e33a6a
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@9e33a6a
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c497a55
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c497a55
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7493d937
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5dc7841c
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4d67d5a4
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@a3b858f
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@600bbf9e
2024-08-02T16:38:12.572+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@18d30e7
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@72b40f87
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@72b40f87
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2475fba3
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2475fba3
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19bf47fc
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19bf47fc
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71dd4624
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71dd4624
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2347b7af
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2347b7af
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2864f887
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b07cad0
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@507049f2
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@507049f2
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4e94669c
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41bb1f09
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@349f0ca4
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@66f2ec1c
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@66f2ec1c
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b3fc6d8
2024-08-02T16:38:12.573+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12e5d3e1
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5ed31735
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ed31735
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2fb082ff
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fb082ff
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2026fbff
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@baa227e
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@351e89fc
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@351e89fc
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@15586843
2024-08-02T16:38:12.574+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fbb1144
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@e2b3026
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@e2b3026
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ef037e4
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ef037e4
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@79d63a4f
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@79d63a4f
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e2b9f53
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e2b9f53
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@749baa0c
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@749baa0c
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1b3bec6c
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1b3bec6c
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@53f7a906
2024-08-02T16:38:12.575+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2154652c
2024-08-02T16:38:12.579+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@47f2c722
2024-08-02T16:38:12.579+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@47f2c722
2024-08-02T16:38:12.580+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5da57a64
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5cdf221a
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6136e1fc
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1736c1e4
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@32dcfeea
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@738a815c
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2565a7d0
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fd7b79
2024-08-02T16:38:12.581+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5103eea2
2024-08-02T16:38:12.810+07:00  INFO 18896 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:38:12.837+07:00  INFO 18896 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:38:13.156+07:00  INFO 18896 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@299786b1
2024-08-02T16:38:13.158+07:00  INFO 18896 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7614378d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7028b5cc)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0ff7a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24c84e65)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7337bd2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4604e051)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4535bdc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23e86863)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6df87ffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c1f0c7b)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@642c5bb3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e79c25)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ace1cd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5e46a125)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5831989d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@608f310a)
2024-08-02T16:38:13.240+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a7d914c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@515940af)
2024-08-02T16:38:13.242+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:38:13.242+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:38:13.242+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:38:13.244+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:38:13.244+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:38:13.247+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@75663443
2024-08-02T16:38:13.248+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5da57a64`
2024-08-02T16:38:13.250+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:38:13.250+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:38:13.250+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:38:13.252+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:38:13.253+07:00 DEBUG 18896 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:38:13.254+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c74e4e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@128a188a]
2024-08-02T16:38:13.963+07:00  INFO 18896 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:38:13.963+07:00 DEBUG 18896 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c74e4e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1e9a10e9]
2024-08-02T16:38:14.020+07:00 TRACE 18896 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1e9a10e9] for TypeConfiguration
2024-08-02T16:38:14.020+07:00  INFO 18896 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:38:14.270+07:00  INFO 18896 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:38:14.687+07:00  INFO 18896 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@749054a3, com.mongodb.Jep395RecordCodecProvider@bf70ce5, com.mongodb.KotlinCodecProvider@331b0bfd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:38:14.706+07:00  INFO 18896 --- [Spring_API] [cluster-ClusterId{value='66aca906602905540814a8de', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23178000}
2024-08-02T16:38:14.895+07:00  INFO 18896 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:38:15.113+07:00  WARN 18896 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:38:16.184+07:00  INFO 18896 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:38:16.191+07:00  INFO 18896 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.147 seconds (process running for 6.592)
2024-08-02T16:38:20.639+07:00  INFO 18896 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:38:20.639+07:00  INFO 18896 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:38:20.641+07:00  INFO 18896 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:38:20.967+07:00 ERROR 18896 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:41:46.425+07:00  INFO 18896 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:41:46.448+07:00 TRACE 18896 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1e9a10e9] for TypeConfiguration
2024-08-02T16:41:46.448+07:00 DEBUG 18896 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6015f646] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1e9a10e9]
2024-08-02T16:41:46.456+07:00  INFO 18896 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:41:46.492+07:00  INFO 18896 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T16:42:12.360+07:00  INFO 20784 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 20784 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T16:42:12.362+07:00  INFO 20784 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T16:42:13.018+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:42:13.018+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T16:42:13.041+07:00  INFO 20784 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T16:42:13.137+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 112 ms. Found 1 JPA repository interface.
2024-08-02T16:42:13.385+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:42:13.386+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T16:42:13.404+07:00  INFO 20784 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T16:42:13.409+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21 ms. Found 1 MongoDB repository interface.
2024-08-02T16:42:13.430+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T16:42:13.432+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T16:42:13.442+07:00  INFO 20784 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:42:13.442+07:00  INFO 20784 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T16:42:13.442+07:00  INFO 20784 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T16:42:14.133+07:00  INFO 20784 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T16:42:14.145+07:00  INFO 20784 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T16:42:14.146+07:00  INFO 20784 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T16:42:14.204+07:00  INFO 20784 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T16:42:14.204+07:00  INFO 20784 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1795 ms
2024-08-02T16:42:14.425+07:00  INFO 20784 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T16:42:14.492+07:00  INFO 20784 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T16:42:14.527+07:00  INFO 20784 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T16:42:14.594+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:42:14.594+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:42:14.594+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@68e47e7
2024-08-02T16:42:14.594+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c00d406
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c00d406
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@16ac4d3d
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@16ac4d3d
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@559d19c
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@559d19c
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:42:14.595+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@719c1faf
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ba6557e
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1f172892
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1f172892
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5409dfdd
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@45f9d394
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@45f9d394
2024-08-02T16:42:14.596+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1c2d63f0
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3a588b5f
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@20b54cfe
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2bdb5e0f
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5c9e8a67
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2262f0d8
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:42:14.597+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@283a8ad6
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@59e082f8
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@59e082f8
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7185e611
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7185e611
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@44d43cc9
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@384472bf
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@656ec00d
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@656ec00d
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b8507df
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:42:14.598+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5ed25612
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@451816fd
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@56e5c8fb
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45cd8607
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@9e33a6a
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@9e33a6a
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@c497a55
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@c497a55
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7493d937
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5dc7841c
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4d67d5a4
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@a3b858f
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@600bbf9e
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@18d30e7
2024-08-02T16:42:14.599+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@72b40f87
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@72b40f87
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2475fba3
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2475fba3
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@19bf47fc
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@19bf47fc
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71dd4624
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71dd4624
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2347b7af
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2347b7af
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2864f887
2024-08-02T16:42:14.600+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b07cad0
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@507049f2
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@507049f2
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4e94669c
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41bb1f09
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@349f0ca4
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@66f2ec1c
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@66f2ec1c
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b3fc6d8
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12e5d3e1
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5ed31735
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5ed31735
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2fb082ff
2024-08-02T16:42:14.601+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fb082ff
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5a4c98d7
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@668a32a4
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2026fbff
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@baa227e
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@351e89fc
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@351e89fc
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b682e9
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@15586843
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fbb1144
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@e2b3026
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@e2b3026
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@38bc5ac0
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@6ef037e4
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6ef037e4
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@79d63a4f
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@79d63a4f
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2e2b9f53
2024-08-02T16:42:14.602+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2e2b9f53
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@749baa0c
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@749baa0c
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1b3bec6c
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1b3bec6c
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@53f7a906
2024-08-02T16:42:14.604+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2154652c
2024-08-02T16:42:14.608+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@47f2c722
2024-08-02T16:42:14.608+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@47f2c722
2024-08-02T16:42:14.609+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@5da57a64
2024-08-02T16:42:14.610+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5cdf221a
2024-08-02T16:42:14.610+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6136e1fc
2024-08-02T16:42:14.610+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1736c1e4
2024-08-02T16:42:14.611+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@32dcfeea
2024-08-02T16:42:14.611+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@738a815c
2024-08-02T16:42:14.611+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2565a7d0
2024-08-02T16:42:14.611+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4fd7b79
2024-08-02T16:42:14.611+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5103eea2
2024-08-02T16:42:14.925+07:00  INFO 20784 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T16:42:14.953+07:00  INFO 20784 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T16:42:15.292+07:00  INFO 20784 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@299786b1
2024-08-02T16:42:15.293+07:00  INFO 20784 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7614378d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7028b5cc)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c0ff7a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@24c84e65)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7337bd2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4604e051)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4535bdc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@23e86863)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6df87ffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c1f0c7b)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@642c5bb3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e79c25)
2024-08-02T16:42:15.370+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ace1cd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5e46a125)
2024-08-02T16:42:15.371+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5831989d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@608f310a)
2024-08-02T16:42:15.371+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a7d914c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@515940af)
2024-08-02T16:42:15.372+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T16:42:15.372+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T16:42:15.372+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T16:42:15.374+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:42:15.374+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T16:42:15.376+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@75663443
2024-08-02T16:42:15.376+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5da57a64`
2024-08-02T16:42:15.378+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T16:42:15.378+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:42:15.379+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:42:15.381+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T16:42:15.382+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:42:15.382+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:42:15.382+07:00 DEBUG 20784 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T16:42:15.383+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c74e4e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@128a188a]
2024-08-02T16:42:16.113+07:00  INFO 20784 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T16:42:16.114+07:00 DEBUG 20784 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37c74e4e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1e9a10e9]
2024-08-02T16:42:16.175+07:00 TRACE 20784 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1e9a10e9] for TypeConfiguration
2024-08-02T16:42:16.176+07:00  INFO 20784 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:42:16.460+07:00  INFO 20784 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T16:42:16.889+07:00  INFO 20784 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@749054a3, com.mongodb.Jep395RecordCodecProvider@bf70ce5, com.mongodb.KotlinCodecProvider@331b0bfd]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T16:42:16.905+07:00  INFO 20784 --- [Spring_API] [cluster-ClusterId{value='66aca9f8e2269554bb8c65fe', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19184800}
2024-08-02T16:42:17.110+07:00  INFO 20784 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-08-02T16:42:17.310+07:00  WARN 20784 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T16:42:18.447+07:00  INFO 20784 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T16:42:18.453+07:00  INFO 20784 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.518 seconds (process running for 6.993)
2024-08-02T16:42:23.696+07:00  INFO 20784 --- [Spring_API] [http-nio-8080-exec-4] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T16:42:23.697+07:00  INFO 20784 --- [Spring_API] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T16:42:23.698+07:00  INFO 20784 --- [Spring_API] [http-nio-8080-exec-4] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T16:42:24.014+07:00 ERROR 20784 --- [Spring_API] [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter] with root cause

java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521) ~[na:na]
	at io.jsonwebtoken.impl.Base64Codec.decode(Base64Codec.java:26) ~[jjwt-0.9.1.jar:0.9.1]
	at io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:99) ~[jjwt-0.9.1.jar:0.9.1]
	at com.example.spring.security.JwtTokenProvider.createToken(JwtTokenProvider.java:45) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(LoginRequestController.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T16:42:58.117+07:00  INFO 20784 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T16:42:58.118+07:00 TRACE 20784 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1e9a10e9] for TypeConfiguration
2024-08-02T16:42:58.118+07:00 DEBUG 20784 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27c955c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1e9a10e9]
2024-08-02T16:42:58.119+07:00  INFO 20784 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T16:42:58.126+07:00  INFO 20784 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:24:39.957+07:00  INFO 3656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 3656 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T17:24:39.959+07:00  INFO 3656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:24:40.540+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:24:40.540+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:24:40.566+07:00  INFO 3656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T17:24:40.671+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interface.
2024-08-02T17:24:40.942+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:24:40.942+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T17:24:40.955+07:00  INFO 3656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T17:24:40.959+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T17:24:40.971+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:24:40.972+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:24:40.983+07:00  INFO 3656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:24:40.984+07:00  INFO 3656 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:24:40.984+07:00  INFO 3656 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-02T17:24:41.643+07:00  INFO 3656 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T17:24:41.658+07:00  INFO 3656 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T17:24:41.659+07:00  INFO 3656 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T17:24:41.714+07:00  INFO 3656 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T17:24:41.715+07:00  INFO 3656 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1716 ms
2024-08-02T17:24:41.873+07:00  INFO 3656 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:24:41.946+07:00  INFO 3656 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:24:41.981+07:00  INFO 3656 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42107318
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@42107318
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@42107318
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e4f4092
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-02T17:24:42.045+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5d829ef0
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4416e18d
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5dfc2a4
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3120495d
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@781c2497
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-02T17:24:42.046+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-02T17:24:42.047+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:24:42.048+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:24:42.049+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:24:42.050+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:24:42.051+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:24:42.052+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:24:42.056+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@b3857e2
2024-08-02T17:24:42.056+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b3857e2
2024-08-02T17:24:42.057+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@632241f5
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@64bba0eb
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@25ae1f80
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@54f2df29
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6df791a4
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@655203e3
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@305552d6
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-02T17:24:42.058+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@23b71d24
2024-08-02T17:24:42.299+07:00  INFO 3656 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:24:42.323+07:00  INFO 3656 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:24:42.668+07:00  INFO 3656 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@799971ac
2024-08-02T17:24:42.670+07:00  INFO 3656 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e029a04) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@50e8ed74)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74eab077) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3063be68)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a3bc0da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d2f09a4)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c677d7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@215a0264)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45832b85) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@103478b8)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@270f7b4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56b704ea)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65ff4b8c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d)
2024-08-02T17:24:42.749+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2)
2024-08-02T17:24:42.751+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T17:24:42.751+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T17:24:42.751+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T17:24:42.753+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:24:42.753+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:24:42.755+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@56e8a8a0
2024-08-02T17:24:42.755+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@632241f5`
2024-08-02T17:24:42.757+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T17:24:42.757+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:24:42.757+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:24:42.759+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:24:42.759+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:24:42.759+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:24:42.760+07:00 DEBUG 3656 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:24:42.761+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36ecf9f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@104bc677]
2024-08-02T17:24:43.477+07:00  INFO 3656 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:24:43.477+07:00 DEBUG 3656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@36ecf9f6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@39a03ccc]
2024-08-02T17:24:43.543+07:00 TRACE 3656 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@39a03ccc] for TypeConfiguration
2024-08-02T17:24:43.544+07:00  INFO 3656 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:24:43.747+07:00  INFO 3656 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:24:44.118+07:00  INFO 3656 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T17:24:44.118+07:00  WARN 3656 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T17:24:44.254+07:00  INFO 3656 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7441eed3, com.mongodb.Jep395RecordCodecProvider@284e68ae, com.mongodb.KotlinCodecProvider@456c6754]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T17:24:44.266+07:00  INFO 3656 --- [Spring_API] [cluster-ClusterId{value='66acb3eca2d9c61802624392', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16941200}
2024-08-02T17:24:44.623+07:00  WARN 3656 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:24:45.399+07:00  INFO 3656 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T17:24:45.404+07:00  INFO 3656 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.859 seconds (process running for 6.447)
2024-08-02T17:24:50.665+07:00  INFO 3656 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T17:24:50.665+07:00  INFO 3656 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T17:24:50.666+07:00  INFO 3656 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T17:24:50.985+07:00 ERROR 3656 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'int io.jsonwebtoken.SignatureAlgorithm.getMinKeyLength()'] with root cause

java.lang.NoSuchMethodError: 'int io.jsonwebtoken.SignatureAlgorithm.getMinKeyLength()'
	at io.jsonwebtoken.security.Keys.hmacShaKeyFor(Keys.java:84) ~[jjwt-api-0.11.5.jar:0.11.5]
	at com.example.spring.security.JwtTokenProvider.key(JwtTokenProvider.java:44) ~[classes/:na]
	at com.example.spring.security.JwtTokenProvider.generateJwtToken(JwtTokenProvider.java:39) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:43) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:27:05.661+07:00  INFO 3656 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:27:05.663+07:00 TRACE 3656 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@39a03ccc] for TypeConfiguration
2024-08-02T17:27:05.663+07:00 DEBUG 3656 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5be9df26] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@39a03ccc]
2024-08-02T17:27:05.664+07:00  INFO 3656 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:27:05.672+07:00  INFO 3656 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:27:45.497+07:00  INFO 25440 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 25440 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T17:27:45.498+07:00  INFO 25440 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:27:46.059+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:27:46.060+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:27:46.091+07:00  INFO 25440 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T17:27:46.168+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96 ms. Found 1 JPA repository interface.
2024-08-02T17:27:46.409+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:27:46.409+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T17:27:46.422+07:00  INFO 25440 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T17:27:46.426+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T17:27:46.435+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:27:46.436+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:27:46.444+07:00  INFO 25440 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:27:46.445+07:00  INFO 25440 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:27:46.445+07:00  INFO 25440 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T17:27:47.101+07:00  INFO 25440 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T17:27:47.115+07:00  INFO 25440 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T17:27:47.115+07:00  INFO 25440 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T17:27:47.171+07:00  INFO 25440 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T17:27:47.171+07:00  INFO 25440 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1634 ms
2024-08-02T17:27:47.350+07:00  INFO 25440 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:27:47.414+07:00  INFO 25440 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:27:47.445+07:00  INFO 25440 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:27:47.518+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-02T17:27:47.518+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-02T17:27:47.518+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@b75b890
2024-08-02T17:27:47.518+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@70c491b8
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@439d545c
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a3cf824
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c2b6acb
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:27:47.519+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@28367da7
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1a0f349
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@3c60c681
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:27:47.520+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:27:47.521+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:27:47.522+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:27:47.523+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:27:47.524+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:27:47.525+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:27:47.526+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:27:47.529+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-02T17:27:47.529+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5dfd31f4
2024-08-02T17:27:47.530+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@305552d6
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@729cd862
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@568f4faa
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4c56644f
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@589dfa6f
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@43588265
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f8667bb
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@100d0218
2024-08-02T17:27:47.531+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-02T17:27:47.772+07:00  INFO 25440 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:27:47.799+07:00  INFO 25440 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:27:48.146+07:00  INFO 25440 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d877bb
2024-08-02T17:27:48.147+07:00  INFO 25440 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@215a0264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45832b85)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@103478b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@270f7b4d)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@56b704ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@ab4d2ba)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39f68aec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65ff4b8c)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@278cb145)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@351c6341)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70421a08)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-02T17:27:48.221+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-02T17:27:48.222+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T17:27:48.222+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T17:27:48.223+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T17:27:48.225+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:27:48.225+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:27:48.227+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@6badb08c
2024-08-02T17:27:48.227+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@305552d6`
2024-08-02T17:27:48.229+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T17:27:48.229+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:27:48.229+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:27:48.231+07:00 DEBUG 25440 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:27:48.233+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11ce9319]
2024-08-02T17:27:48.961+07:00  INFO 25440 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:27:48.962+07:00 DEBUG 25440 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e8c58fd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3da6950f]
2024-08-02T17:27:49.022+07:00 TRACE 25440 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3da6950f] for TypeConfiguration
2024-08-02T17:27:49.023+07:00  INFO 25440 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:27:49.215+07:00  INFO 25440 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:27:49.591+07:00  INFO 25440 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T17:27:49.592+07:00  WARN 25440 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T17:27:49.694+07:00  INFO 25440 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2d1dbf4f, com.mongodb.Jep395RecordCodecProvider@4f94b2a8, com.mongodb.KotlinCodecProvider@2f26634a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T17:27:49.712+07:00  INFO 25440 --- [Spring_API] [cluster-ClusterId{value='66acb4a55b5b50208c90eae2', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=20026400}
2024-08-02T17:27:50.050+07:00  WARN 25440 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:27:50.791+07:00  INFO 25440 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T17:27:50.797+07:00  INFO 25440 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.663 seconds (process running for 6.002)
2024-08-02T17:27:57.253+07:00  INFO 25440 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T17:27:57.253+07:00  INFO 25440 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T17:27:57.254+07:00  INFO 25440 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T17:27:57.560+07:00 ERROR 25440 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: io.jsonwebtoken.io.DecodingException: Illegal base64 character: ','] with root cause

io.jsonwebtoken.io.DecodingException: Illegal base64 character: ','
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221) ~[jjwt-api-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270) ~[jjwt-api-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36) ~[jjwt-api-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23) ~[jjwt-api-0.11.5.jar:0.11.5]
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36) ~[jjwt-api-0.11.5.jar:0.11.5]
	at com.example.spring.security.JwtTokenProvider.key(JwtTokenProvider.java:38) ~[classes/:na]
	at com.example.spring.security.JwtTokenProvider.generateJwtToken(JwtTokenProvider.java:33) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:43) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:30:29.558+07:00  INFO 25440 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:30:29.562+07:00 TRACE 25440 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3da6950f] for TypeConfiguration
2024-08-02T17:30:29.563+07:00 DEBUG 25440 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45946257] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3da6950f]
2024-08-02T17:30:29.565+07:00  INFO 25440 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:30:29.573+07:00  INFO 25440 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:31:09.246+07:00  INFO 9308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 9308 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T17:31:09.248+07:00  INFO 9308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:31:09.853+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:31:09.854+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:31:09.878+07:00  INFO 9308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T17:31:09.989+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interface.
2024-08-02T17:31:10.238+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:31:10.238+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T17:31:10.251+07:00  INFO 9308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T17:31:10.254+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T17:31:10.263+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:31:10.264+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:31:10.274+07:00  INFO 9308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:31:10.274+07:00  INFO 9308 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:31:10.274+07:00  INFO 9308 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T17:31:10.988+07:00  INFO 9308 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T17:31:11.000+07:00  INFO 9308 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T17:31:11.001+07:00  INFO 9308 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T17:31:11.056+07:00  INFO 9308 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T17:31:11.057+07:00  INFO 9308 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1771 ms
2024-08-02T17:31:11.218+07:00  INFO 9308 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:31:11.282+07:00  INFO 9308 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:31:11.314+07:00  INFO 9308 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:31:11.382+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:31:11.382+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:31:11.383+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:31:11.384+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:31:11.385+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:31:11.386+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:31:11.387+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:31:11.388+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:31:11.389+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-02T17:31:11.390+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-02T17:31:11.390+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-02T17:31:11.390+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-02T17:31:11.390+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-02T17:31:11.390+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-02T17:31:11.393+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@54f2df29
2024-08-02T17:31:11.394+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54f2df29
2024-08-02T17:31:11.394+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@100d0218
2024-08-02T17:31:11.395+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-02T17:31:11.395+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-02T17:31:11.395+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-02T17:31:11.395+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5280688
2024-08-02T17:31:11.396+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-02T17:31:11.396+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-02T17:31:11.396+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-02T17:31:11.396+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7757025d
2024-08-02T17:31:11.603+07:00  INFO 9308 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:31:11.625+07:00  INFO 9308 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:31:11.933+07:00  INFO 9308 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ff9f715
2024-08-02T17:31:11.934+07:00  INFO 9308 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145)
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341)
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70421a08)
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-02T17:31:12.008+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-02T17:31:12.009+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0)
2024-08-02T17:31:12.009+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ac0ed65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb)
2024-08-02T17:31:12.009+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@729d6ee2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4adcc981)
2024-08-02T17:31:12.010+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T17:31:12.010+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T17:31:12.010+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T17:31:12.011+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:31:12.011+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:31:12.014+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@103bcc9f
2024-08-02T17:31:12.014+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@100d0218`
2024-08-02T17:31:12.017+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T17:31:12.017+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:31:12.017+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:31:12.019+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:31:12.020+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:31:12.020+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:31:12.020+07:00 DEBUG 9308 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:31:12.021+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7dd7ec56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6528d339]
2024-08-02T17:31:12.752+07:00  INFO 9308 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:31:12.752+07:00 DEBUG 9308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7dd7ec56] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@644c3590]
2024-08-02T17:31:12.802+07:00 TRACE 9308 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@644c3590] for TypeConfiguration
2024-08-02T17:31:12.803+07:00  INFO 9308 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:31:12.994+07:00  INFO 9308 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:31:13.329+07:00  INFO 9308 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T17:31:13.330+07:00  WARN 9308 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T17:31:13.452+07:00  INFO 9308 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5546a9e0, com.mongodb.Jep395RecordCodecProvider@1c027237, com.mongodb.KotlinCodecProvider@4cb37177]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T17:31:13.465+07:00  INFO 9308 --- [Spring_API] [cluster-ClusterId{value='66acb571b484e9001945d110', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=16663100}
2024-08-02T17:31:13.803+07:00  WARN 9308 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:31:14.625+07:00  INFO 9308 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T17:31:14.631+07:00  INFO 9308 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.781 seconds (process running for 6.237)
2024-08-02T17:31:19.862+07:00  INFO 9308 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T17:31:19.862+07:00  INFO 9308 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T17:31:19.863+07:00  INFO 9308 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T17:31:20.201+07:00 ERROR 9308 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'int io.jsonwebtoken.SignatureAlgorithm.getMinKeyLength()'] with root cause

java.lang.NoSuchMethodError: 'int io.jsonwebtoken.SignatureAlgorithm.getMinKeyLength()'
	at io.jsonwebtoken.security.Keys.hmacShaKeyFor(Keys.java:84) ~[jjwt-api-0.11.5.jar:0.11.5]
	at com.example.spring.security.JwtTokenProvider.key(JwtTokenProvider.java:37) ~[classes/:na]
	at com.example.spring.security.JwtTokenProvider.generateJwtToken(JwtTokenProvider.java:32) ~[classes/:na]
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:43) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:31:50.351+07:00  INFO 9308 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:31:50.352+07:00 TRACE 9308 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@644c3590] for TypeConfiguration
2024-08-02T17:31:50.352+07:00 DEBUG 9308 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d182f83] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@644c3590]
2024-08-02T17:31:50.353+07:00  INFO 9308 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:31:50.359+07:00  INFO 9308 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:42:28.162+07:00  INFO 15124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 15124 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T17:42:28.164+07:00  INFO 15124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:42:28.853+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:42:28.853+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:42:28.885+07:00  INFO 15124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T17:42:29.001+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 138 ms. Found 1 JPA repository interface.
2024-08-02T17:42:29.268+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:42:29.269+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T17:42:29.282+07:00  INFO 15124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T17:42:29.285+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 1 MongoDB repository interface.
2024-08-02T17:42:29.296+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:42:29.297+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:42:29.308+07:00  INFO 15124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:42:29.308+07:00  INFO 15124 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:42:29.308+07:00  INFO 15124 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T17:42:30.102+07:00  INFO 15124 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T17:42:30.115+07:00  INFO 15124 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T17:42:30.115+07:00  INFO 15124 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T17:42:30.173+07:00  INFO 15124 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T17:42:30.174+07:00  INFO 15124 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1971 ms
2024-08-02T17:42:30.350+07:00  INFO 15124 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:42:30.424+07:00  INFO 15124 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:42:30.458+07:00  INFO 15124 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:42:30.526+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:42:30.526+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:42:30.526+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:42:30.526+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:42:30.526+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:42:30.527+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:42:30.528+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:42:30.529+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:42:30.530+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:42:30.531+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:42:30.532+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:42:30.533+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:42:30.533+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:42:30.533+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:42:30.533+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-02T17:42:30.533+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7cb29ea8
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@b5c902
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7e747037
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4d0e1a9a
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@25218a4d
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@bf2aa32
2024-08-02T17:42:30.534+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56da96b3
2024-08-02T17:42:30.540+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-02T17:42:30.540+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4c56644f
2024-08-02T17:42:30.541+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@61ab6521
2024-08-02T17:42:30.541+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@68fc9167
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@52c46334
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@12fccff0
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5d767218
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@510da778
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20a1b3ae
2024-08-02T17:42:30.542+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@54567b05
2024-08-02T17:42:30.754+07:00  INFO 15124 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:42:30.776+07:00  INFO 15124 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:42:31.162+07:00  INFO 15124 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1e482ecd
2024-08-02T17:42:31.164+07:00  INFO 15124 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:42:31.248+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bea5941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df6f19b)
2024-08-02T17:42:31.248+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d842877) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cbec4)
2024-08-02T17:42:31.248+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3835d3fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4ac0ed65)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@729d6ee2)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4adcc981) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73aae7a)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3856d0cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2125535d)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d190639) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f82209e)
2024-08-02T17:42:31.249+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@515c732d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ae87de0)
2024-08-02T17:42:31.250+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T17:42:31.251+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T17:42:31.251+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T17:42:31.253+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:42:31.253+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:42:31.256+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4ff0706c
2024-08-02T17:42:31.256+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@61ab6521`
2024-08-02T17:42:31.258+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T17:42:31.258+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:42:31.259+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:42:31.260+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:42:31.261+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:42:31.262+07:00 DEBUG 15124 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:42:31.262+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ce18cec]
2024-08-02T17:42:32.022+07:00  INFO 15124 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:42:32.022+07:00 DEBUG 15124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1c421b0f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1be4f05c]
2024-08-02T17:42:32.091+07:00 TRACE 15124 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1be4f05c] for TypeConfiguration
2024-08-02T17:42:32.091+07:00  INFO 15124 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:42:32.289+07:00  INFO 15124 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:42:32.714+07:00  INFO 15124 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T17:42:32.715+07:00  WARN 15124 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T17:42:32.839+07:00  INFO 15124 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@70efc3f9, com.mongodb.Jep395RecordCodecProvider@27002c5a, com.mongodb.KotlinCodecProvider@69e636cc]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T17:42:32.892+07:00  INFO 15124 --- [Spring_API] [cluster-ClusterId{value='66acb818eac4945ac6f485f9', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=57070700}
2024-08-02T17:42:33.266+07:00  WARN 15124 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:42:34.111+07:00  INFO 15124 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T17:42:34.116+07:00  INFO 15124 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 6.408 seconds (process running for 6.831)
2024-08-02T17:43:45.156+07:00  INFO 15124 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T17:43:45.157+07:00  INFO 15124 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T17:43:45.158+07:00  INFO 15124 --- [Spring_API] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T17:43:45.451+07:00  WARN 15124 --- [Spring_API] [http-nio-8080-exec-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2024-08-02T17:43:45.451+07:00 ERROR 15124 --- [Spring_API] [http-nio-8080-exec-1] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '2' for key 'user.PRIMARY'
2024-08-02T17:43:45.461+07:00 ERROR 15124 --- [Spring_API] [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'user.PRIMARY'] [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; SQL [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; constraint [user.PRIMARY]] with root cause

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'user.PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1054) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1003) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1312) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:988) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:663) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:413) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.11.jar:6.1.11]
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source) ~[na:na]
	at com.example.spring.controller.AuthenticationController.registerUser(AuthenticationController.java:77) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:45:50.689+07:00  INFO 15124 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:45:50.690+07:00 TRACE 15124 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1be4f05c] for TypeConfiguration
2024-08-02T17:45:50.690+07:00 DEBUG 15124 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1842ce05] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1be4f05c]
2024-08-02T17:45:50.691+07:00  INFO 15124 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:45:50.700+07:00  INFO 15124 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-08-02T17:45:57.510+07:00  INFO 23188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Starting SpringApiApplication using Java 20.0.2 with PID 23188 (C:\Users\ADMIN\IdeaProjects\Spring_API\target\classes started by ADMIN in C:\Users\ADMIN\IdeaProjects\Spring_API)
2024-08-02T17:45:57.513+07:00  INFO 23188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : No active profile set, falling back to 1 default profile: "default"
2024-08-02T17:45:58.089+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:45:58.089+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-02T17:45:58.110+07:00  INFO 23188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-08-02T17:45:58.209+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 113 ms. Found 1 JPA repository interface.
2024-08-02T17:45:58.460+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:45:58.460+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-08-02T17:45:58.473+07:00  INFO 23188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository
2024-08-02T17:45:58.476+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 MongoDB repository interface.
2024-08-02T17:45:58.486+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-02T17:45:58.487+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-02T17:45:58.497+07:00  INFO 23188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.CourseRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:45:58.497+07:00  INFO 23188 --- [Spring_API] [main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.spring.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-02T17:45:58.497+07:00  INFO 23188 --- [Spring_API] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-08-02T17:45:59.178+07:00  INFO 23188 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2024-08-02T17:45:59.190+07:00  INFO 23188 --- [Spring_API] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-08-02T17:45:59.190+07:00  INFO 23188 --- [Spring_API] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.26]
2024-08-02T17:45:59.246+07:00  INFO 23188 --- [Spring_API] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-08-02T17:45:59.246+07:00  INFO 23188 --- [Spring_API] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1693 ms
2024-08-02T17:45:59.404+07:00  INFO 23188 --- [Spring_API] [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-02T17:45:59.473+07:00  INFO 23188 --- [Spring_API] [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.2.Final
2024-08-02T17:45:59.500+07:00  INFO 23188 --- [Spring_API] [main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-08-02T17:45:59.586+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:45:59.586+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:45:59.587+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1b3a9ef4
2024-08-02T17:45:59.587+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:45:59.587+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7a1371
2024-08-02T17:45:59.587+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:45:59.587+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6c6928c
2024-08-02T17:45:59.588+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:45:59.588+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3c28181b
2024-08-02T17:45:59.588+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:45:59.588+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:45:59.588+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@73aaec54
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@239b98cb
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@117b2cc6
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6def0632
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@49038f97
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@36211bbc
2024-08-02T17:45:59.589+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ef41ca2
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6b3f4bd8
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3e151e1f
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@d70e9a
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5e98032e
2024-08-02T17:45:59.590+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fe8f2ae
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@591be8aa
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@61808ecd
2024-08-02T17:45:59.591+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7f1f60a0
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@77ea806f
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@71b26880
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14a1769d
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@10bf1ec9
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@33751d49
2024-08-02T17:45:59.592+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@516195cf
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4eeb14e0
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26ca12a2
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3d4ecc67
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@60dcf9ec
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7606bd03
2024-08-02T17:45:59.593+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@afee63
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4b4927e5
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4c5da4f9
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@ff0e6d4
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@70d3cdbf
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@72a7aa4f
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@537ca28e
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b322873
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@35e2b89f
2024-08-02T17:45:59.594+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7ad889be
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c063cb9
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@63de4fa
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@26bb92e2
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@18907af2
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@658e7ead
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@cfd5cd2
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@762bf32d
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d7740f0
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:45:59.595+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b1a30e5
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1de7f898
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@34fcd292
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@63db743d
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@496cedbb
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b6def36
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3957d88b
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1152900
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2fba0dac
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b2a4332
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2cbe455c
2024-08-02T17:45:59.596+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4cb24e2
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7be38eba
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2296127
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5ce3409b
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1d283d1
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66234b0f
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@2fca3eb5
2024-08-02T17:45:59.597+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@69eb544f
2024-08-02T17:45:59.600+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@54f2df29
2024-08-02T17:45:59.600+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@54f2df29
2024-08-02T17:45:59.601+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@100d0218
2024-08-02T17:45:59.602+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2774dcf4
2024-08-02T17:45:59.602+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7c5f29c6
2024-08-02T17:45:59.602+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4baf997
2024-08-02T17:45:59.602+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5280688
2024-08-02T17:45:59.602+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@643f6179
2024-08-02T17:45:59.603+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@61ab6521
2024-08-02T17:45:59.603+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@328e4ec2
2024-08-02T17:45:59.603+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7757025d
2024-08-02T17:45:59.802+07:00  INFO 23188 --- [Spring_API] [main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-02T17:45:59.823+07:00  INFO 23188 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-08-02T17:46:00.143+07:00  INFO 23188 --- [Spring_API] [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ff9f715
2024-08-02T17:46:00.146+07:00  INFO 23188 --- [Spring_API] [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-08-02T17:46:00.224+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b81938d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@278cb145)
2024-08-02T17:46:00.225+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aa0feb2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351c6341)
2024-08-02T17:46:00.225+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@32069394) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70421a08)
2024-08-02T17:46:00.225+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5dba3fdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bea5941)
2024-08-02T17:46:00.225+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@df6f19b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6d842877)
2024-08-02T17:46:00.226+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@614cbec4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3835d3fd)
2024-08-02T17:46:00.226+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2759749) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4efed0e0)
2024-08-02T17:46:00.226+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ac0ed65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c7c75fb)
2024-08-02T17:46:00.226+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@729d6ee2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4adcc981)
2024-08-02T17:46:00.227+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-02T17:46:00.227+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-02T17:46:00.228+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-02T17:46:00.230+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:46:00.230+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-02T17:46:00.232+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@103bcc9f
2024-08-02T17:46:00.232+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@100d0218`
2024-08-02T17:46:00.234+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-08-02T17:46:00.234+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:46:00.234+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:46:00.236+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-02T17:46:00.237+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:46:00.237+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:46:00.237+07:00 DEBUG 23188 --- [Spring_API] [main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-02T17:46:00.237+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7dd7ec56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6528d339]
2024-08-02T17:46:00.991+07:00  INFO 23188 --- [Spring_API] [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-02T17:46:00.991+07:00 DEBUG 23188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7dd7ec56] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@644c3590]
2024-08-02T17:46:01.046+07:00 TRACE 23188 --- [Spring_API] [main] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@644c3590] for TypeConfiguration
2024-08-02T17:46:01.046+07:00  INFO 23188 --- [Spring_API] [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:46:01.253+07:00  INFO 23188 --- [Spring_API] [main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-08-02T17:46:01.661+07:00  INFO 23188 --- [Spring_API] [main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-08-02T17:46:01.661+07:00  WARN 23188 --- [Spring_API] [main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-08-02T17:46:01.797+07:00  INFO 23188 --- [Spring_API] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/20.0.2+9-78"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1c027237, com.mongodb.Jep395RecordCodecProvider@4cb37177, com.mongodb.KotlinCodecProvider@1f9a3640]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-08-02T17:46:01.827+07:00  INFO 23188 --- [Spring_API] [cluster-ClusterId{value='66acb8e90ae0904d11a7fa26', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=21, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32251400}
2024-08-02T17:46:02.258+07:00  WARN 23188 --- [Spring_API] [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-02T17:46:03.091+07:00  INFO 23188 --- [Spring_API] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2024-08-02T17:46:03.097+07:00  INFO 23188 --- [Spring_API] [main] c.example.spring.SpringApiApplication    : Started SpringApiApplication in 5.987 seconds (process running for 6.375)
2024-08-02T17:46:11.929+07:00  INFO 23188 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-02T17:46:11.929+07:00  INFO 23188 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-08-02T17:46:11.932+07:00  INFO 23188 --- [Spring_API] [http-nio-8080-exec-3] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2024-08-02T17:46:12.259+07:00  WARN 23188 --- [Spring_API] [http-nio-8080-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2024-08-02T17:46:12.259+07:00 ERROR 23188 --- [Spring_API] [http-nio-8080-exec-3] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '52' for key 'user.PRIMARY'
2024-08-02T17:46:12.275+07:00 ERROR 23188 --- [Spring_API] [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '52' for key 'user.PRIMARY'] [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; SQL [insert into user (created_at,email,name,password,username,id) values (?,?,?,?,?,?)]; constraint [user.PRIMARY]] with root cause

java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '52' for key 'user.PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1054) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1003) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1312) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:988) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61) ~[HikariCP-5.1.0.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:134) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:104) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:110) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:632) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:499) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:371) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:41) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1425) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:487) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2324) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1981) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562) ~[spring-orm-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:663) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:413) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138) ~[spring-tx-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165) ~[spring-data-jpa-3.3.2.jar:3.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.11.jar:6.1.11]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223) ~[spring-aop-6.1.11.jar:6.1.11]
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source) ~[na:na]
	at com.example.spring.controller.AuthenticationController.registerUser(AuthenticationController.java:77) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:47:17.317+07:00  WARN 23188 --- [Spring_API] [http-nio-8080-exec-5] o.s.s.c.bcrypt.BCryptPasswordEncoder     : Encoded password does not look like BCrypt
2024-08-02T17:47:17.318+07:00 ERROR 23188 --- [Spring_API] [http-nio-8080-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.security.authentication.BadCredentialsException: Bad credentials] with root cause

org.springframework.security.authentication.BadCredentialsException: Bad credentials
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147) ~[spring-security-core-6.3.1.jar:6.3.1]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182) ~[spring-security-core-6.3.1.jar:6.3.1]
	at com.example.spring.controller.AuthenticationController.login(AuthenticationController.java:39) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at com.example.spring.security.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:51) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:219) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195) ~[spring-webmvc-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230) ~[spring-security-config-6.3.1.jar:6.3.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.11.jar:6.1.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.11.jar:6.1.11]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.26.jar:10.1.26]
	at java.base/java.lang.Thread.run(Thread.java:1623) ~[na:na]

2024-08-02T17:47:56.222+07:00  INFO 23188 --- [Spring_API] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-02T17:47:56.223+07:00 TRACE 23188 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@644c3590] for TypeConfiguration
2024-08-02T17:47:56.224+07:00 DEBUG 23188 --- [Spring_API] [SpringApplicationShutdownHook] o.h.type.spi.TypeConfiguration$Scope     : Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@bec3995] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@644c3590]
2024-08-02T17:47:56.224+07:00  INFO 23188 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-08-02T17:47:56.233+07:00  INFO 23188 --- [Spring_API] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
